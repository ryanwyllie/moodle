{"version":3,"sources":["../src/policyactions.js"],"names":["define","$","Ajax","Notification","ModalFactory","ModalEvents","ACTIONS","VIEW_POLICY","PolicyActions","registerEvents","prototype","click","e","preventDefault","versionid","data","behalfid","promises","call","methodname","args","modalTitle","modalType","types","DEFAULT","when","then","result","policy","name","content","addNotification","message","warnings","type","html","create","title","body","large","modal","getRoot","on","hidden","destroy","done","show","fail","exception"],"mappings":"aAuBAA,mCAAO,CACH,QADG,CAEH,WAFG,CAGH,mBAHG,CAIH,oBAJG,CAKH,mBALG,CAAP,CAMA,SAASC,CAAT,CAAYC,IAAZ,CAAkBC,YAAlB,CAAgCC,YAAhC,CAA8CC,WAA9C,CAA2D,IAOnDC,SAAU,CACVC,YAAa,sBADH,CAPyC,CAcnDC,cAAgB,UAAW,CAC3B,KAAKC,cAAL,EACH,CAhBsD,CA+EvD,MA1DAD,eAAcE,SAAd,CAAwBD,cAAxB,CAAyC,UAAW,CAChDR,EAAEK,QAAQC,WAAV,EAAuBI,KAAvB,CAA6B,SAASC,CAAT,CAAY,CACrCA,EAAEC,cAAF,EADqC,IAGjCC,WAAYb,EAAE,IAAF,EAAQc,IAAR,CAAa,WAAb,CAHqB,CAIjCC,SAAWf,EAAE,IAAF,EAAQc,IAAR,CAAa,UAAb,CAJsB,CAgBjCE,SAAWf,KAAKgB,IAAL,CAAU,CALX,CACVC,WAAY,gCADF,CAEVC,KAPS,CACT,UAAaN,SADJ,CAET,SAAYE,QAFH,CAKC,CAKW,CAAV,CAhBsB,CAiBjCK,WAAa,EAjBoB,CAkBjCC,UAAYlB,aAAamB,KAAb,CAAmBC,OAlBE,CAmBrCvB,EAAEwB,IAAF,CAAOR,SAAS,CAAT,CAAP,EAAoBS,IAApB,CAAyB,SAASX,IAAT,CAAe,OAChCA,MAAKY,MAAL,CAAYC,MADoB,EAEhCP,WAAaN,KAAKY,MAAL,CAAYC,MAAZ,CAAmBC,IAFA,CAGzBd,KAAKY,MAAL,CAAYC,MAAZ,CAAmBE,OAHM,GAMpC3B,aAAa4B,eAAb,CAA6B,CACzBC,QAASjB,KAAKkB,QAAL,CAAc,CAAd,EAAiBD,OADD,CAEzBE,KAAM,OAFmB,CAA7B,CANoC,IAYvC,CAZD,EAYGR,IAZH,CAYQ,SAASS,IAAT,CAAe,OACf,QADe,EAER/B,aAAagC,MAAb,CAAoB,CACvBC,MAAOhB,UADgB,CAEvBiB,KAAMH,IAFiB,CAGvBD,KAAMZ,SAHiB,CAIvBiB,QAJuB,CAApB,EAKJb,IALI,CAKC,SAASc,KAAT,CAAgB,CAOpB,MALAA,OAAMC,OAAN,GAAgBC,EAAhB,CAAmBrC,YAAYsC,MAA/B,CAAuC,UAAW,CAE9CH,MAAMI,OAAN,EACH,CAHD,CAKA,CAAOJ,KACV,CAbM,CAgBd,CA9BD,EA8BGK,IA9BH,CA8BQ,SAASL,KAAT,CAAgB,CAEpBA,MAAMM,IAAN,EACH,CAjCD,EAiCGC,IAjCH,CAiCQ5C,aAAa6C,SAjCrB,CAkCH,CArDD,CAuDH,CAED,CAAsD,CASlD,KAAQ,eAAW,CACf,MAAO,IAAIxC,cACd,CAXiD,CAazD,CAlGD,C","file":"policyactions.min.js","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Policy actions.\n *\n * @module     tool_policy/policyactions\n * @package    tool_policy\n * @copyright  2018 Sara Arjona (sara@moodle.com)\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n    'jquery',\n    'core/ajax',\n    'core/notification',\n    'core/modal_factory',\n    'core/modal_events'],\nfunction($, Ajax, Notification, ModalFactory, ModalEvents) {\n\n    /**\n     * List of action selectors.\n     *\n     * @type {{VIEW_POLICY: string}}\n     */\n    var ACTIONS = {\n        VIEW_POLICY: '[data-action=\"view\"]'\n    };\n\n    /**\n     * PolicyActions class.\n     */\n    var PolicyActions = function() {\n        this.registerEvents();\n    };\n\n    /**\n     * Register event listeners.\n     */\n    PolicyActions.prototype.registerEvents = function() {\n        $(ACTIONS.VIEW_POLICY).click(function(e) {\n            e.preventDefault();\n\n            var versionid = $(this).data('versionid');\n            var behalfid = $(this).data('behalfid');\n\n            var params = {\n                'versionid': versionid,\n                'behalfid': behalfid\n            };\n\n            var request = {\n                methodname: 'tool_policy_get_policy_version',\n                args: params\n            };\n\n            var promises = Ajax.call([request]);\n            var modalTitle = '';\n            var modalType = ModalFactory.types.DEFAULT;\n            $.when(promises[0]).then(function(data) {\n                if (data.result.policy) {\n                    modalTitle = data.result.policy.name;\n                    return data.result.policy.content;\n                }\n                // Fail.\n                Notification.addNotification({\n                    message: data.warnings[0].message,\n                    type: 'error'\n                });\n                return false;\n\n            }).then(function(html) {\n                if (html != false) {\n                    return ModalFactory.create({\n                        title: modalTitle,\n                        body: html,\n                        type: modalType,\n                        large: true\n                    }).then(function(modal) {\n                        // Handle hidden event.\n                        modal.getRoot().on(ModalEvents.hidden, function() {\n                            // Destroy when hidden.\n                            modal.destroy();\n                        });\n\n                        return modal;\n                    });\n                }\n                return false;\n            }).done(function(modal) {\n                // Show the modal.\n                modal.show();\n            }).fail(Notification.exception);\n        });\n\n    };\n\n    return /** @alias module:tool_policy/policyactions */ {\n        // Public variables and functions.\n\n        /**\n         * Initialise the actions helper.\n         *\n         * @method init\n         * @return {PolicyActions}\n         */\n        'init': function() {\n            return new PolicyActions();\n        }\n    };\n});\n"]}