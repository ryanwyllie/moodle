'use strict';define('tool_policy/managedocsactions',['jquery','core/log','core/config','core/str','core/modal_factory','core/modal_events'],function($,Log,Config,Str,ModalFactory,ModalEvents){'use strict';function ManageDocsActions(base){this.base=base,this.initEvents()}var ACTION={LINKS:'[data-action]',MAKE_CURRENT:'[data-action="makecurrent"]',INACTIVATE:'[data-action="inactivate"]',DELETE:'[data-action="delete"]'};return ManageDocsActions.prototype.initEvents=function(){var self=this;self.base.on('click',ACTION.LINKS,function(e){e.stopPropagation();var promise,strings,link=$(e.currentTarget);if(link.is(ACTION.MAKE_CURRENT))promise=Str.get_strings([{key:'activating',component:'tool_policy'},{key:'activateconfirm',component:'tool_policy',param:{name:link.closest('[data-policy-name]').attr('data-policy-name'),revision:link.closest('[data-policy-revision]').attr('data-policy-revision')}},{key:'activateconfirmyes',component:'tool_policy'}]);else if(link.is(ACTION.INACTIVATE))promise=Str.get_strings([{key:'inactivating',component:'tool_policy'},{key:'inactivatingconfirm',component:'tool_policy',param:{name:link.closest('[data-policy-name]').attr('data-policy-name'),revision:link.closest('[data-policy-revision]').attr('data-policy-revision')}},{key:'inactivatingconfirmyes',component:'tool_policy'}]);else if(link.is(ACTION.DELETE))promise=Str.get_strings([{key:'deleting',component:'tool_policy'},{key:'deleteconfirm',component:'tool_policy',param:{name:link.closest('[data-policy-name]').attr('data-policy-name'),revision:link.closest('[data-policy-revision]').attr('data-policy-revision')}},{key:'delete',component:'core'}]);else return void Log.error('unknown action type detected','tool_policy/managedocsactions');e.preventDefault(),promise.then(function(strs){return strings=strs,ModalFactory.create({title:strings[0],body:strings[1],type:ModalFactory.types.SAVE_CANCEL})}).then(function(modal){return modal.setSaveButtonText(strings[2]),modal.getRoot().on(ModalEvents.save,function(){window.location.href=link.attr('href')+'&sesskey='+Config.sesskey+'&confirm=1'}),modal.getRoot().on(ModalEvents.hidden,function(){modal.destroy()}),modal.show(),!0}).catch(function(e){return Log.error(e),!1})})},{init:function init(baseid){var base=$(document.getElementById(baseid));if(base.length)return new ManageDocsActions(base);throw new Error('managedocsactions: Invalid base element identifier')}}});
//# sourceMappingURL=managedocsactions.min.js.map
