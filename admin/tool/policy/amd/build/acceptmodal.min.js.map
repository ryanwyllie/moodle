{"version":3,"sources":["../src/acceptmodal.js"],"names":["define","$","Str","ModalFactory","ModalEvents","Notification","Fragment","Ajax","Y","AcceptOnBehalf","contextid","init","prototype","modal","stringKeys","key","component","triggers","on","e","preventDefault","href","currentTarget","attr","formData","slice","indexOf","showFormModal","bind","find","length","serialize","get_strings","done","strings","alert","triggerElement","action","pair","params","split","i","title","saveText","create","type","types","SAVE_CANCEL","body","setupFormModal","fail","exception","setLarge","setSaveButtonText","getRoot","hidden","destroy","setBody","getBody","save","submitForm","submitFormAjax","show","jsonformdata","JSON","stringify","loadFragment","requests","call","methodname","args","data","validationerrors","close","submit","document","location","reload","use","M","core_formchangechecker","reset_form_dirty_state","getInstance"],"mappings":"aAwBAA,iCAAO,CAAC,QAAD,CAAW,UAAX,CAAuB,oBAAvB,CAA6C,mBAA7C,CAAkE,mBAAlE,CAAuF,eAAvF,CACC,WADD,CACc,UADd,CAAP,CAEI,SAASC,CAAT,CAAYC,GAAZ,CAAiBC,YAAjB,CAA+BC,WAA/B,CAA4CC,YAA5C,CAA0DC,QAA1D,CAAoEC,IAApE,CAA0EC,CAA1E,CAA6E,CAEzE,aASA,GAAIC,gBAAiB,SAASC,SAAT,CAAoB,CACrC,KAAKA,SAAL,CAAiBA,SADoB,CAErC,KAAKC,IAAL,EACH,CAHD,CAyNA,MAhNAF,gBAAeG,SAAf,CAAyBC,KAAzB,CAAiC,IAgNjC,CA1MAJ,eAAeG,SAAf,CAAyBF,SAAzB,CAAqC,CAAC,CA0MtC,CApMAD,eAAeG,SAAf,CAAyBE,UAAzB,CAAsC,CAClC,CACIC,IAAK,gBADT,CAEIC,UAAW,aAFf,CADkC,CAKlC,CACID,IAAK,mBADT,CAEIC,UAAW,aAFf,CALkC,CASlC,CACID,IAAK,uBADT,CAEIC,UAAW,aAFf,CATkC,CAalC,CACID,IAAK,IADT,CAbkC,CAgBlC,CACIA,IAAK,eADT,CAEIC,UAAW,aAFf,CAhBkC,CAoBlC,CACID,IAAK,kBADT,CAEIC,UAAW,aAFf,CApBkC,CAoMtC,CArKAP,eAAeG,SAAf,CAAyBD,IAAzB,CAAgC,UAAW,CAEvC,GAAIM,UAAWhB,EAAE,4BAAF,CAAf,CACAgB,SAASC,EAAT,CAAY,OAAZ,CAAqB,SAASC,CAAT,CAAY,CAC7BA,EAAEC,cAAF,EAD6B,CAE7B,GAAIC,MAAOpB,EAAEkB,EAAEG,aAAJ,EAAmBC,IAAnB,CAAwB,MAAxB,CAAX,CACIC,SAAWH,KAAKI,KAAL,CAAWJ,KAAKK,OAAL,CAAa,GAAb,EAAoB,CAA/B,CADf,CAEA,KAAKC,aAAL,CAAmBH,QAAnB,CACH,CALoB,CAKnBI,IALmB,CAKd,IALc,CAArB,CAHuC,CAWvCX,SAAWhB,EAAE,+BAAF,CAX4B,CAYvCgB,SAASC,EAAT,CAAY,QAAZ,CAAsB,SAASC,CAAT,CAAY,CAE9B,GADAA,EAAEC,cAAF,EACA,CAAInB,EAAEkB,EAAEG,aAAJ,EAAmBO,IAAnB,CAAwB,gDAAxB,EAA0EC,MAA9E,CAAsF,CAClF,GAAIN,UAAWvB,EAAEkB,EAAEG,aAAJ,EAAmBS,SAAnB,EAAf,CACA,KAAKJ,aAAL,CAAmBH,QAAnB,CAA6BP,QAA7B,CACH,CAHD,IAIIf,KAAI8B,WAAJ,CAAgB,KAAKlB,UAArB,EAAiCmB,IAAjC,CAAsC,SAASC,OAAT,CAAkB,CACpD7B,aAAa8B,KAAb,CAAmB,EAAnB,CAAuBD,QAAQ,CAAR,CAAvB,CAAmCA,QAAQ,CAAR,CAAnC,CACH,CAFD,CAIP,CAVqB,CAUpBN,IAVoB,CAUf,IAVe,CAAtB,CAWH,CA8ID,CAtIAnB,eAAeG,SAAf,CAAyBe,aAAzB,CAAyC,SAASH,QAAT,CAAmBY,cAAnB,CAAmC,CAGxE,OAFIC,OAEJ,CACQC,IADR,CADIC,OAASf,SAASgB,KAAT,CAAe,GAAf,CACb,CAASC,EAAI,CAAb,CAAgBA,EAAIF,OAAOT,MAA3B,CAAmCW,GAAnC,CACQH,IADR,CACeC,OAAOE,CAAP,EAAUD,KAAV,CAAgB,GAAhB,CADf,CAEmB,QAAX,OAAK,CAAL,CAFR,GAGQH,OAASC,KAAK,CAAL,CAHjB,EAOApC,IAAI8B,WAAJ,CAAgB,KAAKlB,UAArB,EAAiCmB,IAAjC,CAAsC,SAASC,OAAT,CAAkB,IAChDQ,MADgD,CAEhDC,QAFgD,CAGtC,QAAV,QAHgD,EAIhDD,MAAQR,QAAQ,CAAR,CAJwC,CAKhDS,SAAWT,QAAQ,CAAR,CALqC,GAOhDQ,MAAQR,QAAQ,CAAR,CAPwC,CAQhDS,SAAWT,QAAQ,CAAR,CARqC,EAWpD/B,aAAayC,MAAb,CAAoB,CAChBC,KAAM1C,aAAa2C,KAAb,CAAmBC,WADT,CAEhBL,MAAOA,KAFS,CAGhBM,KAAM,EAHU,CAApB,CAIGZ,cAJH,EAImBH,IAJnB,CAIwB,SAASpB,KAAT,CAAgB,CACpC,KAAKA,KAAL,CAAaA,KADuB,CAEpC,KAAKoC,cAAL,CAAoBzB,QAApB,CAA8BmB,QAA9B,CACH,CAHuB,CAGtBf,IAHsB,CAGjB,IAHiB,CAJxB,CAQH,CAnBqC,CAmBpCA,IAnBoC,CAmB/B,IAnB+B,CAAtC,EAoBKsB,IApBL,CAoBU7C,aAAa8C,SApBvB,CAqBH,CAuGD,CA/FA1C,eAAeG,SAAf,CAAyBqC,cAAzB,CAA0C,SAASzB,QAAT,CAAmBmB,QAAnB,CAA6B,CACnE,GAAI9B,OAAQ,KAAKA,KAAjB,CAEAA,MAAMuC,QAAN,EAHmE,CAKnEvC,MAAMwC,iBAAN,CAAwBV,QAAxB,CALmE,CAQnE9B,MAAMyC,OAAN,GAAgBpC,EAAhB,CAAmBd,YAAYmD,MAA/B,CAAuC,KAAKC,OAAL,CAAa5B,IAAb,CAAkB,IAAlB,CAAvC,CARmE,CAUnEf,MAAM4C,OAAN,CAAc,KAAKC,OAAL,CAAalC,QAAb,CAAd,CAVmE,CAcnEX,MAAMyC,OAAN,GAAgBpC,EAAhB,CAAmBd,YAAYuD,IAA/B,CAAqC,KAAKC,UAAL,CAAgBhC,IAAhB,CAAqB,IAArB,CAArC,CAdmE,CAgBnEf,MAAMyC,OAAN,GAAgBpC,EAAhB,CAAmB,QAAnB,CAA6B,MAA7B,CAAqC,KAAK2C,cAAL,CAAoBjC,IAApB,CAAyB,IAAzB,CAArC,CAhBmE,CAkBnEf,MAAMiD,IAAN,EACH,CA4ED,CAlEArD,eAAeG,SAAf,CAAyB8C,OAAzB,CAAmC,SAASlC,QAAT,CAAmB,CAC1B,WAApB,QAAOA,SADuC,GAE9CA,SAAW,EAFmC,EAKlD,GAAIe,QAAS,CAACwB,aAAcC,KAAKC,SAAL,CAAezC,QAAf,CAAf,CAAb,CACA,MAAOlB,UAAS4D,YAAT,CAAsB,aAAtB,CAAqC,kBAArC,CAAyD,KAAKxD,SAA9D,CAAyE6B,MAAzE,CACV,CA2DD,CAlDA9B,eAAeG,SAAf,CAAyBiD,cAAzB,CAA0C,SAAS1C,CAAT,CAAY,CAElDA,EAAEC,cAAF,EAFkD,IAK9CI,UAAW,KAAKX,KAAL,CAAWyC,OAAX,GAAqBzB,IAArB,CAA0B,MAA1B,EAAkCE,SAAlC,EALmC,CAO9CoC,SAAW5D,KAAK6D,IAAL,CAAU,CAAC,CACtBC,WAAY,qCADU,CAEtBC,KAAM,CAACP,aAAcC,KAAKC,SAAL,CAAezC,QAAf,CAAf,CAFgB,CAAD,CAAV,CAPmC,CAWlD2C,SAAS,CAAT,EAAYlC,IAAZ,CAAiB,SAASsC,IAAT,CAAe,CACxBA,KAAKC,gBADmB,CAExB,KAAK3D,KAAL,CAAW4C,OAAX,CAAmB,KAAKC,OAAL,CAAalC,QAAb,CAAnB,CAFwB,CAIxB,KAAKiD,KAAL,EAEP,CANgB,CAMf7C,IANe,CAMV,IANU,CAAjB,EAMcsB,IANd,CAMmB7C,aAAa8C,SANhC,CAOH,CAgCD,CAvBA1C,eAAeG,SAAf,CAAyBgD,UAAzB,CAAsC,SAASzC,CAAT,CAAY,CAC9CA,EAAEC,cAAF,EAD8C,CAE9C,KAAKP,KAAL,CAAWyC,OAAX,GAAqBzB,IAArB,CAA0B,MAA1B,EAAkC6C,MAAlC,EACH,CAoBD,CAfAjE,eAAeG,SAAf,CAAyB6D,KAAzB,CAAiC,UAAW,CACxC,KAAKjB,OAAL,EADwC,CAExCmB,SAASC,QAAT,CAAkBC,MAAlB,EACH,CAYD,CAPApE,eAAeG,SAAf,CAAyB4C,OAAzB,CAAmC,UAAW,CAC1ChD,EAAEsE,GAAF,CAAM,+BAAN,CAAuC,UAAW,CAC9CC,EAAEC,sBAAF,CAAyBC,sBAAzB,EACH,CAFD,CAD0C,CAI1C,KAAKpE,KAAL,CAAW2C,OAAX,EACH,CAED,CAAoD,CAShD0B,YAAa,qBAASxE,SAAT,CAAoB,CAC7B,MAAO,IAAID,eAAJ,CAAmBC,SAAnB,CACV,CAX+C,CAavD,CAnPL,C","file":"acceptmodal.min.js","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Add policy consent modal to the page\n *\n * @module     tool_policy/acceptmodal\n * @class      AcceptOnBehalf\n * @package    tool_policy\n * @copyright  2018 Marina Glancy\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/str', 'core/modal_factory', 'core/modal_events', 'core/notification', 'core/fragment',\n        'core/ajax', 'core/yui'],\n    function($, Str, ModalFactory, ModalEvents, Notification, Fragment, Ajax, Y) {\n\n        \"use strict\";\n\n        /**\n         * Constructor\n         *\n         * @param {int} contextid\n         *\n         * Each call to init gets it's own instance of this class.\n         */\n        var AcceptOnBehalf = function(contextid) {\n            this.contextid = contextid;\n            this.init();\n        };\n\n        /**\n         * @var {Modal} modal\n         * @private\n         */\n        AcceptOnBehalf.prototype.modal = null;\n\n        /**\n         * @var {int} contextid\n         * @private\n         */\n        AcceptOnBehalf.prototype.contextid = -1;\n\n        /**\n         * @var {Array} strings\n         * @private\n         */\n        AcceptOnBehalf.prototype.stringKeys = [\n            {\n                key: 'consentdetails',\n                component: 'tool_policy'\n            },\n            {\n                key: 'iagreetothepolicy',\n                component: 'tool_policy'\n            },\n            {\n                key: 'selectusersforconsent',\n                component: 'tool_policy'\n            },\n            {\n                key: 'ok'\n            },\n            {\n                key: 'revokedetails',\n                component: 'tool_policy'\n            },\n            {\n                key: 'irevokethepolicy',\n                component: 'tool_policy'\n            }\n        ];\n\n        /**\n         * Initialise the class.\n         *\n         * @private\n         */\n        AcceptOnBehalf.prototype.init = function() {\n            // Initialise for links accepting policies for individual users.\n            var triggers = $('a[data-action=acceptmodal]');\n            triggers.on('click', function(e) {\n                e.preventDefault();\n                var href = $(e.currentTarget).attr('href'),\n                    formData = href.slice(href.indexOf('?') + 1);\n                this.showFormModal(formData);\n            }.bind(this));\n\n            // Initialise for multiple users acceptance form.\n            triggers = $('form[data-action=acceptmodal]');\n            triggers.on('submit', function(e) {\n                e.preventDefault();\n                if ($(e.currentTarget).find('input[type=checkbox][name=\"userids[]\"]:checked').length) {\n                    var formData = $(e.currentTarget).serialize();\n                    this.showFormModal(formData, triggers);\n                } else {\n                    Str.get_strings(this.stringKeys).done(function(strings) {\n                        Notification.alert('', strings[2], strings[3]);\n                    });\n                }\n            }.bind(this));\n        };\n\n        /**\n         * Show modal with a form\n         *\n         * @param {String} formData\n         * @param {object} triggerElement The trigger HTML jQuery object\n         */\n        AcceptOnBehalf.prototype.showFormModal = function(formData, triggerElement) {\n            var action;\n            var params = formData.split('&');\n            for (var i = 0; i < params.length; i++) {\n                var pair = params[i].split('=');\n                if (pair[0] == 'action') {\n                    action = pair[1];\n                }\n            }\n            // Fetch the title string.\n            Str.get_strings(this.stringKeys).done(function(strings) {\n                var title;\n                var saveText;\n                if (action == 'revoke') {\n                    title = strings[4];\n                    saveText = strings[5];\n                } else {\n                    title = strings[0];\n                    saveText = strings[1];\n                }\n                // Create the modal.\n                ModalFactory.create({\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    title: title,\n                    body: ''\n                }, triggerElement).done(function(modal) {\n                    this.modal = modal;\n                    this.setupFormModal(formData, saveText);\n                }.bind(this));\n            }.bind(this))\n                .fail(Notification.exception);\n        };\n\n        /**\n         * Setup form inside a modal\n         *\n         * @param {String} formData\n         * @param {String} saveText\n         */\n        AcceptOnBehalf.prototype.setupFormModal = function(formData, saveText) {\n            var modal = this.modal;\n\n            modal.setLarge();\n\n            modal.setSaveButtonText(saveText);\n\n            // We want to reset the form every time it is opened.\n            modal.getRoot().on(ModalEvents.hidden, this.destroy.bind(this));\n\n            modal.setBody(this.getBody(formData));\n\n            // We catch the modal save event, and use it to submit the form inside the modal.\n            // Triggering a form submission will give JS validation scripts a chance to check for errors.\n            modal.getRoot().on(ModalEvents.save, this.submitForm.bind(this));\n            // We also catch the form submit event and use it to submit the form with ajax.\n            modal.getRoot().on('submit', 'form', this.submitFormAjax.bind(this));\n\n            modal.show();\n        };\n\n        /**\n         * Load the body of the modal (contains the form)\n         *\n         * @method getBody\n         * @private\n         * @param {String} formData\n         * @return {Promise}\n         */\n        AcceptOnBehalf.prototype.getBody = function(formData) {\n            if (typeof formData === \"undefined\") {\n                formData = {};\n            }\n            // Get the content of the modal.\n            var params = {jsonformdata: JSON.stringify(formData)};\n            return Fragment.loadFragment('tool_policy', 'accept_on_behalf', this.contextid, params);\n        };\n\n        /**\n         * Submit the form inside the modal via AJAX request\n         *\n         * @method submitFormAjax\n         * @private\n         * @param {Event} e Form submission event.\n         */\n        AcceptOnBehalf.prototype.submitFormAjax = function(e) {\n            // We don't want to do a real form submission.\n            e.preventDefault();\n\n            // Convert all the form elements values to a serialised string.\n            var formData = this.modal.getRoot().find('form').serialize();\n\n            var requests = Ajax.call([{\n                methodname: 'tool_policy_submit_accept_on_behalf',\n                args: {jsonformdata: JSON.stringify(formData)}\n            }]);\n            requests[0].done(function(data) {\n                if (data.validationerrors) {\n                    this.modal.setBody(this.getBody(formData));\n                } else {\n                    this.close();\n                }\n            }.bind(this)).fail(Notification.exception);\n        };\n\n        /**\n         * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\n         *\n         * @method submitForm\n         * @param {Event} e Form submission event.\n         * @private\n         */\n        AcceptOnBehalf.prototype.submitForm = function(e) {\n            e.preventDefault();\n            this.modal.getRoot().find('form').submit();\n        };\n\n        /**\n         * Close the modal\n         */\n        AcceptOnBehalf.prototype.close = function() {\n            this.destroy();\n            document.location.reload();\n        };\n\n        /**\n         * Destroy the modal\n         */\n        AcceptOnBehalf.prototype.destroy = function() {\n            Y.use('moodle-core-formchangechecker', function() {\n                M.core_formchangechecker.reset_form_dirty_state();\n            });\n            this.modal.destroy();\n        };\n\n        return /** @alias module:tool_policy/acceptmodal */ {\n            // Public variables and functions.\n            /**\n             * Attach event listeners to initialise this module.\n             *\n             * @method init\n             * @param {int} contextid The contextid for the course.\n             * @return {AcceptOnBehalf}\n             */\n            getInstance: function(contextid) {\n                return new AcceptOnBehalf(contextid);\n            }\n        };\n    });\n"]}