'use strict';define('tool_policy/acceptmodal',['jquery','core/str','core/modal_factory','core/modal_events','core/notification','core/fragment','core/ajax','core/yui'],function($,Str,ModalFactory,ModalEvents,Notification,Fragment,Ajax,Y){'use strict';var AcceptOnBehalf=function(contextid){this.contextid=contextid,this.init()};return AcceptOnBehalf.prototype.modal=null,AcceptOnBehalf.prototype.contextid=-1,AcceptOnBehalf.prototype.stringKeys=[{key:'consentdetails',component:'tool_policy'},{key:'iagreetothepolicy',component:'tool_policy'},{key:'selectusersforconsent',component:'tool_policy'},{key:'ok'},{key:'revokedetails',component:'tool_policy'},{key:'irevokethepolicy',component:'tool_policy'}],AcceptOnBehalf.prototype.init=function(){var triggers=$('a[data-action=acceptmodal]');triggers.on('click',function(e){e.preventDefault();var href=$(e.currentTarget).attr('href'),formData=href.slice(href.indexOf('?')+1);this.showFormModal(formData)}.bind(this)),triggers=$('form[data-action=acceptmodal]'),triggers.on('submit',function(e){if(e.preventDefault(),$(e.currentTarget).find('input[type=checkbox][name="userids[]"]:checked').length){var formData=$(e.currentTarget).serialize();this.showFormModal(formData,triggers)}else Str.get_strings(this.stringKeys).done(function(strings){Notification.alert('',strings[2],strings[3])})}.bind(this))},AcceptOnBehalf.prototype.showFormModal=function(formData,triggerElement){for(var action,pair,params=formData.split('&'),i=0;i<params.length;i++)pair=params[i].split('='),'action'==pair[0]&&(action=pair[1]);Str.get_strings(this.stringKeys).done(function(strings){var title,saveText;'revoke'==action?(title=strings[4],saveText=strings[5]):(title=strings[0],saveText=strings[1]),ModalFactory.create({type:ModalFactory.types.SAVE_CANCEL,title:title,body:''},triggerElement).done(function(modal){this.modal=modal,this.setupFormModal(formData,saveText)}.bind(this))}.bind(this)).fail(Notification.exception)},AcceptOnBehalf.prototype.setupFormModal=function(formData,saveText){var modal=this.modal;modal.setLarge(),modal.setSaveButtonText(saveText),modal.getRoot().on(ModalEvents.hidden,this.destroy.bind(this)),modal.setBody(this.getBody(formData)),modal.getRoot().on(ModalEvents.save,this.submitForm.bind(this)),modal.getRoot().on('submit','form',this.submitFormAjax.bind(this)),modal.show()},AcceptOnBehalf.prototype.getBody=function(formData){'undefined'==typeof formData&&(formData={});var params={jsonformdata:JSON.stringify(formData)};return Fragment.loadFragment('tool_policy','accept_on_behalf',this.contextid,params)},AcceptOnBehalf.prototype.submitFormAjax=function(e){e.preventDefault();var formData=this.modal.getRoot().find('form').serialize(),requests=Ajax.call([{methodname:'tool_policy_submit_accept_on_behalf',args:{jsonformdata:JSON.stringify(formData)}}]);requests[0].done(function(data){data.validationerrors?this.modal.setBody(this.getBody(formData)):this.close()}.bind(this)).fail(Notification.exception)},AcceptOnBehalf.prototype.submitForm=function(e){e.preventDefault(),this.modal.getRoot().find('form').submit()},AcceptOnBehalf.prototype.close=function(){this.destroy(),document.location.reload()},AcceptOnBehalf.prototype.destroy=function(){Y.use('moodle-core-formchangechecker',function(){M.core_formchangechecker.reset_form_dirty_state()}),this.modal.destroy()},{getInstance:function getInstance(contextid){return new AcceptOnBehalf(contextid)}}});
//# sourceMappingURL=acceptmodal.min.js.map
