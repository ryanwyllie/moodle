{"version":3,"sources":["../src/data_deletion.js"],"names":["define","$","Ajax","Notification","Str","ModalFactory","ModalEvents","showConfirmation","ids","modalTitle","get_strings","key","component","then","langStrings","confirmMessage","create","title","body","type","types","SAVE_CANCEL","modal","setSaveButtonText","getRoot","on","save","call","methodname","args","done","data","result","window","location","reload","addNotification","message","warnings","fail","exception","hidden","destroy","show","ACTIONS","MARK_FOR_DELETION","SELECT_ALL","SELECTORS","SELECTCONTEXT","DataDeletionActions","registerEvents","prototype","click","e","preventDefault","selectedIds","each","checkbox","is","push","val","change","selectallnone","attr","removeAttr"],"mappings":"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","file":"data_deletion.min.js","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Request actions.\n *\n * @module     tool_dataprivacy/data_deletion\n * @package    tool_dataprivacy\n * @copyright  2018 Jun Pataleta\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n    'jquery',\n    'core/ajax',\n    'core/notification',\n    'core/str',\n    'core/modal_factory',\n    'core/modal_events'],\nfunction($, Ajax, Notification, Str, ModalFactory, ModalEvents) {\n\n    /**\n     * List of action selectors.\n     *\n     * @type {{MARK_FOR_DELETION: string}}\n     * @type {{SELECT_ALL: string}}\n     */\n    var ACTIONS = {\n        MARK_FOR_DELETION: '[data-action=\"markfordeletion\"]',\n        SELECT_ALL: '[data-action=\"selectall\"]',\n    };\n\n    /**\n     * List of selectors.\n     *\n     * @type {{SELECTCONTEXT: string}}\n     */\n    var SELECTORS = {\n        SELECTCONTEXT: '.selectcontext',\n    };\n\n    /**\n     * DataDeletionActions class.\n     */\n    var DataDeletionActions = function() {\n        this.registerEvents();\n    };\n\n    /**\n     * Register event listeners.\n     */\n    DataDeletionActions.prototype.registerEvents = function() {\n        $(ACTIONS.MARK_FOR_DELETION).click(function(e) {\n            e.preventDefault();\n\n            var selectedIds = [];\n            $(SELECTORS.SELECTCONTEXT).each(function() {\n                var checkbox = $(this);\n                if (checkbox.is(':checked')) {\n                    selectedIds.push(checkbox.val());\n                }\n            });\n            showConfirmation(selectedIds);\n        });\n\n        $(ACTIONS.SELECT_ALL).change(function(e) {\n            e.preventDefault();\n\n            var selectallnone = $(this);\n            if (selectallnone.is(':checked')) {\n                $(SELECTORS.SELECTCONTEXT).attr('checked', 'checked');\n            } else {\n                $(SELECTORS.SELECTCONTEXT).removeAttr('checked');\n            }\n        });\n    };\n\n    /**\n     * Show the confirmation dialogue.\n     *\n     * @param {Array} ids The array of expired context record IDs.\n     */\n    function showConfirmation(ids) {\n        var keys = [\n            {\n                key: 'confirm',\n                component: 'moodle'\n            },\n            {\n                key: 'confirmcontextdeletion',\n                component: 'tool_dataprivacy'\n            }\n        ];\n        var wsfunction = 'tool_dataprivacy_confirm_contexts_for_deletion';\n\n        var modalTitle = '';\n        Str.get_strings(keys).then(function(langStrings) {\n            modalTitle = langStrings[0];\n            var confirmMessage = langStrings[1];\n            return ModalFactory.create({\n                title: modalTitle,\n                body: confirmMessage,\n                type: ModalFactory.types.SAVE_CANCEL\n            });\n        }).then(function(modal) {\n            modal.setSaveButtonText(modalTitle);\n\n            // Handle save event.\n            modal.getRoot().on(ModalEvents.save, function() {\n                // Confirm the request.\n                var params = {\n                    'ids': ids\n                };\n\n                var request = {\n                    methodname: wsfunction,\n                    args: params\n                };\n\n                Ajax.call([request])[0].done(function(data) {\n                    if (data.result) {\n                        window.location.reload();\n                    } else {\n                        Notification.addNotification({\n                            message: data.warnings[0].message,\n                            type: 'error'\n                        });\n                    }\n                }).fail(Notification.exception);\n            });\n\n            // Handle hidden event.\n            modal.getRoot().on(ModalEvents.hidden, function() {\n                // Destroy when hidden.\n                modal.destroy();\n            });\n\n            return modal;\n        }).done(function(modal) {\n            modal.show();\n        }).fail(Notification.exception);\n    }\n\n    return DataDeletionActions;\n});\n"]}