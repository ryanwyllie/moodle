{"version":3,"sources":["../src/categoriesactions.js"],"names":["define","$","Ajax","Notification","Str","ModalFactory","ModalEvents","ACTIONS","DELETE","CategoriesActions","registerEvents","prototype","click","e","preventDefault","id","data","categoryname","get_strings","key","component","param","then","langStrings","title","confirmMessage","create","body","type","types","SAVE_CANCEL","modal","setSaveButtonText","getRoot","on","save","call","methodname","args","done","result","remove","addNotification","message","warnings","fail","exception","hidden","destroy","show"],"mappings":"aAuBAA,4CAAO,CACH,QADG,CAEH,WAFG,CAGH,mBAHG,CAIH,UAJG,CAKH,oBALG,CAMH,mBANG,CAAP,CAOA,SAASC,CAAT,CAAYC,IAAZ,CAAkBC,YAAlB,CAAgCC,GAAhC,CAAqCC,YAArC,CAAmDC,WAAnD,CAAgE,IAOxDC,SAAU,CACVC,OAAQ,gCADE,CAP8C,CAcxDC,kBAAoB,UAAW,CAC/B,KAAKC,cAAL,EACH,CAhB2D,CAqF5D,MAhEAD,mBAAkBE,SAAlB,CAA4BD,cAA5B,CAA6C,UAAW,CACpDT,EAAEM,QAAQC,MAAV,EAAkBI,KAAlB,CAAwB,SAASC,CAAT,CAAY,CAChCA,EAAEC,cAAF,EADgC,IAG5BC,IAAKd,EAAE,IAAF,EAAQe,IAAR,CAAa,IAAb,CAHuB,CAI5BC,aAAehB,EAAE,IAAF,EAAQe,IAAR,CAAa,MAAb,CAJa,CAkBhCZ,IAAIc,WAAJ,CAbiB,CACb,CACIC,IAAK,gBADT,CAEIC,UAAW,kBAFf,CAGIC,MAAOJ,YAHX,CADa,CAMb,CACIE,IAAK,oBADT,CAEIC,UAAW,kBAFf,CAGIC,MAAOJ,YAHX,CANa,CAajB,EAA4BK,IAA5B,CAAiC,SAASC,WAAT,CAAsB,IAC/CC,OAAQD,YAAY,CAAZ,CADuC,CAE/CE,eAAiBF,YAAY,CAAZ,CAF8B,CAGnD,MAAOlB,cAAaqB,MAAb,CAAoB,CACvBF,MAAOA,KADgB,CAEvBG,KAAMF,cAFiB,CAGvBG,KAAMvB,aAAawB,KAAb,CAAmBC,WAHF,CAApB,EAIJR,IAJI,CAIC,SAASS,KAAT,CAAgB,CA6BpB,MA5BAA,OAAMC,iBAAN,CAAwBR,KAAxB,CA4BA,CAzBAO,MAAME,OAAN,GAAgBC,EAAhB,CAAmB5B,YAAY6B,IAA/B,CAAqC,UAAW,CAO5CjC,KAAKkC,IAAL,CAAU,CALI,CACVC,WAAY,kCADF,CAEVC,KAAM,CAAC,GAAMvB,EAAP,CAFI,CAKJ,CAAV,EAAqB,CAArB,EAAwBwB,IAAxB,CAA6B,SAASvB,IAAT,CAAe,CACpCA,KAAKwB,MAD+B,CAEpCvC,EAAE,uBAAyBc,EAAzB,CAA8B,IAAhC,EAAsC0B,MAAtC,EAFoC,CAIpCtC,aAAauC,eAAb,CAA6B,CACzBC,QAAS3B,KAAK4B,QAAL,CAAc,CAAd,EAAiBD,OADD,CAEzBf,KAAM,OAFmB,CAA7B,CAKP,CATD,EASGiB,IATH,CASQ1C,aAAa2C,SATrB,CAUH,CAjBD,CAyBA,CALAf,MAAME,OAAN,GAAgBC,EAAhB,CAAmB5B,YAAYyC,MAA/B,CAAuC,UAAW,CAE9ChB,MAAMiB,OAAN,EACH,CAHD,CAKA,CAAOjB,KACV,CAlCM,CAmCV,CAtCD,EAsCGQ,IAtCH,CAsCQ,SAASR,KAAT,CAAgB,CACpBA,MAAMkB,IAAN,EAEH,CAzCD,EAyCGJ,IAzCH,CAyCQ1C,aAAa2C,SAzCrB,CA0CH,CA5DD,CA6DH,CAED,CAA+D,CAS3D,KAAQ,eAAW,CACf,MAAO,IAAIrC,kBACd,CAX0D,CAalE,CAzGD,C","file":"categoriesactions.min.js","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * AMD module for categories actions.\n *\n * @module     tool_dataprivacy/categoriesactions\n * @package    tool_dataprivacy\n * @copyright  2018 David Monllao\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n    'jquery',\n    'core/ajax',\n    'core/notification',\n    'core/str',\n    'core/modal_factory',\n    'core/modal_events'],\nfunction($, Ajax, Notification, Str, ModalFactory, ModalEvents) {\n\n    /**\n     * List of action selectors.\n     *\n     * @type {{DELETE: string}}\n     */\n    var ACTIONS = {\n        DELETE: '[data-action=\"deletecategory\"]',\n    };\n\n    /**\n     * CategoriesActions class.\n     */\n    var CategoriesActions = function() {\n        this.registerEvents();\n    };\n\n    /**\n     * Register event listeners.\n     */\n    CategoriesActions.prototype.registerEvents = function() {\n        $(ACTIONS.DELETE).click(function(e) {\n            e.preventDefault();\n\n            var id = $(this).data('id');\n            var categoryname = $(this).data('name');\n            var stringkeys = [\n                {\n                    key: 'deletecategory',\n                    component: 'tool_dataprivacy',\n                    param: categoryname\n                },\n                {\n                    key: 'deletecategorytext',\n                    component: 'tool_dataprivacy',\n                    param: categoryname\n                }\n            ];\n\n            Str.get_strings(stringkeys).then(function(langStrings) {\n                var title = langStrings[0];\n                var confirmMessage = langStrings[1];\n                return ModalFactory.create({\n                    title: title,\n                    body: confirmMessage,\n                    type: ModalFactory.types.SAVE_CANCEL\n                }).then(function(modal) {\n                    modal.setSaveButtonText(title);\n\n                    // Handle save event.\n                    modal.getRoot().on(ModalEvents.save, function() {\n\n                        var request = {\n                            methodname: 'tool_dataprivacy_delete_category',\n                            args: {'id': id}\n                        };\n\n                        Ajax.call([request])[0].done(function(data) {\n                            if (data.result) {\n                                $('tr[data-categoryid=\"' + id + '\"]').remove();\n                            } else {\n                                Notification.addNotification({\n                                    message: data.warnings[0].message,\n                                    type: 'error'\n                                });\n                            }\n                        }).fail(Notification.exception);\n                    });\n\n                    // Handle hidden event.\n                    modal.getRoot().on(ModalEvents.hidden, function() {\n                        // Destroy when hidden.\n                        modal.destroy();\n                    });\n\n                    return modal;\n                });\n            }).done(function(modal) {\n                modal.show();\n\n            }).fail(Notification.exception);\n        });\n    };\n\n    return /** @alias module:tool_dataprivacy/categoriesactions */ {\n        // Public variables and functions.\n\n        /**\n         * Initialise the module.\n         *\n         * @method init\n         * @return {CategoriesActions}\n         */\n        'init': function() {\n            return new CategoriesActions();\n        }\n    };\n});\n"]}