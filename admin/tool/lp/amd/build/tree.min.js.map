{"version":3,"sources":["../src/tree.js"],"names":["define","$","url","log","expandedImage","imageUrl","collapsedImage","Tree","selector","multiSelect","treeRoot","items","find","expandAll","length","parents","attr","visibleItems","activeItem","lastActiveItem","keys","tab","enter","space","pageup","pagedown","end","home","left","up","right","down","eight","asterisk","init","bindEventHandlers","prototype","prepend","clone","thisObj","each","collapseGroup","expandGroup","first","item","group","children","show","hide","toggleGroup","triggerChange","allSelected","filter","trigger","selected","multiSelectItem","lastIndex","index","currentIndex","oneItem","get","selectItem","walk","parent","toggleItem","current","updateFocus","handleKeyDown","e","newItem","hasKeyModifier","shiftKey","ctrlKey","metaKey","altKey","keyCode","focus","stopPropagation","last","has","itemUL","itemParent","is","prev","eq","next","handleKeyPress","chr","String","fromCharCode","which","match","itemIndex","itemCount","currentItem","titleChr","text","charAt","toLowerCase","on","eventname","handler","warning","handleDblClick","handleExpandCollapseClick","handleClick","handleBlur","handleFocus","dblclick","click","keydown","keypress","blur"],"mappings":"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","file":"tree.min.js","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Implement an accessible aria tree widget, from a nested unordered list.\n * Based on http://oaa-accessibility.org/example/41/\n *\n * To respond to selection changed events - use tree.on(\"selectionchanged\", handler).\n * The handler will receive an array of nodes, which are the list items that are currently\n * selected. (Or a single node if multiselect is disabled).\n *\n * @module     tool_lp/tree\n * @package    core\n * @copyright  2015 Damyon Wiese <damyon@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/url', 'core/log'], function($, url, log) {\n    // Private variables and functions.\n    /** @var {String} expandedImage The html for an expanded tree node twistie. */\n    var expandedImage = $('<img alt=\"\" src=\"' + url.imageUrl('t/expanded') + '\"/>');\n    /** @var {String} collapsedImage The html for a collapsed tree node twistie. */\n    var collapsedImage = $('<img alt=\"\" src=\"' + url.imageUrl('t/collapsed') + '\"/>');\n\n    /**\n     * Constructor\n     *\n     * @param {String} selector\n     * @param {Boolean} multiSelect\n     */\n    var Tree = function(selector, multiSelect) {\n        this.treeRoot = $(selector);\n        this.multiSelect = (typeof multiSelect === 'undefined' || multiSelect === true);\n\n        this.items = this.treeRoot.find('li');\n        this.expandAll = this.items.length < 20;\n        this.parents = this.treeRoot.find('li:has(ul)');\n\n        if (multiSelect) {\n            this.treeRoot.attr('aria-multiselectable', 'true');\n        }\n\n        this.items.attr('aria-selected', 'false');\n\n        this.visibleItems = null;\n        this.activeItem = null;\n        this.lastActiveItem = null;\n\n        this.keys = {\n            tab:      9,\n            enter:    13,\n            space:    32,\n            pageup:   33,\n            pagedown: 34,\n            end:      35,\n            home:     36,\n            left:     37,\n            up:       38,\n            right:    39,\n            down:     40,\n            eight:    56,\n            asterisk: 106\n        };\n\n        this.init();\n\n        this.bindEventHandlers();\n    };\n    // Public variables and functions.\n\n    /**\n     * Init this tree\n     * @method init\n     */\n    Tree.prototype.init = function() {\n        this.parents.attr('aria-expanded', 'true');\n        this.parents.prepend(expandedImage.clone());\n\n        this.items.attr('role', 'tree-item');\n        this.items.attr('tabindex', '-1');\n        this.parents.attr('role', 'group');\n        this.treeRoot.attr('role', 'tree');\n\n        this.visibleItems = this.treeRoot.find('li');\n\n        var thisObj = this;\n        if (!this.expandAll) {\n            this.parents.each(function() {\n                thisObj.collapseGroup($(this));\n            });\n            this.expandGroup(this.parents.first());\n        }\n    };\n\n    /**\n     * Expand a collapsed group.\n     *\n     * @method expandGroup\n     * @param {Object} item is the jquery id of the parent item of the group\n     */\n    Tree.prototype.expandGroup = function(item) {\n        // Find the first child ul node.\n        var group = item.children('ul');\n\n        // Expand the group.\n        group.show().attr('aria-hidden', 'false');\n\n        item.attr('aria-expanded', 'true');\n\n        item.children('img').attr('src', expandedImage.attr('src'));\n\n        // Update the list of visible items.\n        this.visibleItems = this.treeRoot.find('li:visible');\n    };\n\n    /**\n     * Collapse an expanded group.\n     *\n     * @method collapseGroup\n     * @param {Object} item is the jquery id of the parent item of the group\n     */\n    Tree.prototype.collapseGroup = function(item) {\n        var group = item.children('ul');\n\n        // Collapse the group.\n        group.hide().attr('aria-hidden', 'true');\n\n        item.attr('aria-expanded', 'false');\n\n        item.children('img').attr('src', collapsedImage.attr('src'));\n\n        // Update the list of visible items.\n        this.visibleItems = this.treeRoot.find('li:visible');\n    };\n\n    /**\n     * Expand or collapse a group.\n     *\n     * @method toggleGroup\n     * @param {Object} item is the jquery id of the parent item of the group\n     */\n    Tree.prototype.toggleGroup = function(item) {\n        if (item.attr('aria-expanded') == 'true') {\n            this.collapseGroup(item);\n        } else {\n            this.expandGroup(item);\n        }\n    };\n\n    /**\n     * Whenever the currently selected node has changed, trigger an event using this function.\n     *\n     * @method triggerChange\n     */\n    Tree.prototype.triggerChange = function() {\n        var allSelected = this.items.filter('[aria-selected=true]');\n        if (!this.multiSelect) {\n            allSelected = allSelected.first();\n        }\n        this.treeRoot.trigger('selectionchanged', {selected: allSelected});\n    };\n\n    /**\n     * Select all the items between the last focused item and this currently focused item.\n     *\n     * @method multiSelectItem\n     * @param {Object} item is the jquery id of the newly selected item.\n     */\n    Tree.prototype.multiSelectItem = function(item) {\n        if (!this.multiSelect) {\n            this.items.attr('aria-selected', 'false');\n        } else if (this.lastActiveItem !== null) {\n            var lastIndex = this.visibleItems.index(this.lastActiveItem);\n            var currentIndex = this.visibleItems.index(this.activeItem);\n            var oneItem = null;\n\n            while (lastIndex < currentIndex) {\n                oneItem = $(this.visibleItems.get(lastIndex));\n                oneItem.attr('aria-selected', 'true');\n                lastIndex++;\n            }\n            while (lastIndex > currentIndex) {\n                oneItem = $(this.visibleItems.get(lastIndex));\n                oneItem.attr('aria-selected', 'true');\n                lastIndex--;\n            }\n        }\n\n        item.attr('aria-selected', 'true');\n        this.triggerChange();\n    };\n\n    /**\n     * Select a single item. Make sure all the parents are expanded. De-select all other items.\n     *\n     * @method selectItem\n     * @param {Object} item is the jquery id of the newly selected item.\n     */\n    Tree.prototype.selectItem = function(item) {\n        // Expand all nodes up the tree.\n        var walk = item.parent();\n        while (walk.attr('role') != 'tree') {\n            walk = walk.parent();\n            if (walk.attr('aria-expanded') == 'false') {\n                this.expandGroup(walk);\n            }\n            walk = walk.parent();\n        }\n        this.items.attr('aria-selected', 'false');\n        item.attr('aria-selected', 'true');\n        this.triggerChange();\n    };\n\n    /**\n     * Toggle the selected state for an item back and forth.\n     *\n     * @method toggleItem\n     * @param {Object} item is the jquery id of the item to toggle.\n     */\n    Tree.prototype.toggleItem = function(item) {\n        if (!this.multiSelect) {\n            this.selectItem(item);\n            return;\n        }\n\n        var current = item.attr('aria-selected');\n        if (current === 'true') {\n            current = 'false';\n        } else {\n            current = 'true';\n        }\n        item.attr('aria-selected', current);\n        this.triggerChange();\n    };\n\n    /**\n     * Set the focus to this item.\n     *\n     * @method updateFocus\n     * @param {Object} item is the jquery id of the parent item of the group\n     */\n    Tree.prototype.updateFocus = function(item) {\n        this.lastActiveItem = this.activeItem;\n        this.activeItem = item;\n        // Expand all nodes up the tree.\n        var walk = item.parent();\n        while (walk.attr('role') != 'tree') {\n            walk = walk.parent();\n            if (walk.attr('aria-expanded') == 'false') {\n                this.expandGroup(walk);\n            }\n            walk = walk.parent();\n        }\n        this.items.attr('tabindex', '-1');\n        item.attr('tabindex', 0);\n    };\n\n    /**\n     * Handle a key down event - ie navigate the tree.\n     *\n     * @method handleKeyDown\n     * @param {Object} item is the jquery id of the parent item of the group\n     * @param {Event} e The event.\n     * @return {Boolean}\n     */\n     // This function should be simplified. In the meantime..\n    // eslint-disable-next-line complexity\n    Tree.prototype.handleKeyDown = function(item, e) {\n        var currentIndex = this.visibleItems.index(item);\n        var newItem = null;\n        var hasKeyModifier = e.shiftKey || e.ctrlKey || e.metaKey || e.altKey;\n        var thisObj = this;\n\n        switch (e.keyCode) {\n            case this.keys.home: {\n                 // Jump to first item in tree.\n                newItem = this.parents.first();\n                newItem.focus();\n                if (e.shiftKey) {\n                    this.multiSelectItem(newItem);\n                } else if (!hasKeyModifier) {\n                    this.selectItem(newItem);\n                }\n\n                e.stopPropagation();\n                return false;\n            }\n            case this.keys.end: {\n                 // Jump to last visible item.\n                newItem = this.visibleItems.last();\n                newItem.focus();\n                if (e.shiftKey) {\n                    this.multiSelectItem(newItem);\n                } else if (!hasKeyModifier) {\n                    this.selectItem(newItem);\n                }\n\n                e.stopPropagation();\n                return false;\n            }\n            case this.keys.enter:\n            case this.keys.space: {\n\n                if (e.shiftKey) {\n                    this.multiSelectItem(item);\n                } else if (e.metaKey || e.ctrlKey) {\n                    this.toggleItem(item);\n                } else {\n                    this.selectItem(item);\n                }\n\n                e.stopPropagation();\n                return false;\n            }\n            case this.keys.left: {\n                if (item.has('ul') && item.attr('aria-expanded') == 'true') {\n                    this.collapseGroup(item);\n                } else {\n                    // Move up to the parent.\n                    var itemUL = item.parent();\n                    var itemParent = itemUL.parent();\n                    if (itemParent.is('li')) {\n                        itemParent.focus();\n                        if (e.shiftKey) {\n                            this.multiSelectItem(itemParent);\n                        } else if (!hasKeyModifier) {\n                            this.selectItem(itemParent);\n                        }\n                    }\n                }\n\n                e.stopPropagation();\n                return false;\n            }\n            case this.keys.right: {\n                if (item.has('ul') && item.attr('aria-expanded') == 'false') {\n                    this.expandGroup(item);\n                } else {\n                    // Move to the first item in the child group.\n                    newItem = item.children('ul').children('li').first();\n                    if (newItem.length > 0) {\n                        newItem.focus();\n                        if (e.shiftKey) {\n                            this.multiSelectItem(newItem);\n                        } else if (!hasKeyModifier) {\n                            this.selectItem(newItem);\n                        }\n                    }\n                }\n\n                e.stopPropagation();\n                return false;\n            }\n            case this.keys.up: {\n\n                if (currentIndex > 0) {\n                    var prev = this.visibleItems.eq(currentIndex - 1);\n                    prev.focus();\n                    if (e.shiftKey) {\n                        this.multiSelectItem(prev);\n                    } else if (!hasKeyModifier) {\n                        this.selectItem(prev);\n                    }\n                }\n\n                e.stopPropagation();\n                return false;\n            }\n            case this.keys.down: {\n\n                if (currentIndex < this.visibleItems.length - 1) {\n                    var next = this.visibleItems.eq(currentIndex + 1);\n                    next.focus();\n                    if (e.shiftKey) {\n                        this.multiSelectItem(next);\n                    } else if (!hasKeyModifier) {\n                        this.selectItem(next);\n                    }\n                }\n                e.stopPropagation();\n                return false;\n            }\n            case this.keys.asterisk: {\n                // Expand all groups.\n                this.parents.each(function() {\n                    thisObj.expandGroup($(this));\n                });\n\n                e.stopPropagation();\n                return false;\n            }\n            case this.keys.eight: {\n                if (e.shiftKey) {\n                    // Expand all groups.\n                    this.parents.each(function() {\n                        thisObj.expandGroup($(this));\n                    });\n\n                    e.stopPropagation();\n                }\n\n                return false;\n            }\n        }\n\n        return true;\n    };\n\n    /**\n     * Handle a key press event - ie navigate the tree.\n     *\n     * @method handleKeyPress\n     * @param {Object} item is the jquery id of the parent item of the group\n     * @param {Event} e The event.\n     * @return {Boolean}\n     */\n    Tree.prototype.handleKeyPress = function(item, e) {\n        if (e.altKey || e.ctrlKey || e.shiftKey || e.metaKey) {\n            // Do nothing.\n            return true;\n        }\n\n        switch (e.keyCode) {\n            case this.keys.tab: {\n                return true;\n            }\n            case this.keys.enter:\n            case this.keys.home:\n            case this.keys.end:\n            case this.keys.left:\n            case this.keys.right:\n            case this.keys.up:\n            case this.keys.down: {\n                e.stopPropagation();\n                return false;\n            }\n            default : {\n                var chr = String.fromCharCode(e.which);\n                var match = false;\n                var itemIndex = this.visibleItems.index(item);\n                var itemCount = this.visibleItems.length;\n                var currentIndex = itemIndex + 1;\n\n                // Check if the active item was the last one on the list.\n                if (currentIndex == itemCount) {\n                    currentIndex = 0;\n                }\n\n                // Iterate through the menu items (starting from the current item and wrapping) until a match is found\n                // or the loop returns to the current menu item.\n                while (currentIndex != itemIndex) {\n\n                    var currentItem = this.visibleItems.eq(currentIndex);\n                    var titleChr = currentItem.text().charAt(0);\n\n                    if (currentItem.has('ul')) {\n                        titleChr = currentItem.find('span').text().charAt(0);\n                    }\n\n                    if (titleChr.toLowerCase() == chr) {\n                        match = true;\n                        break;\n                    }\n\n                    currentIndex = currentIndex + 1;\n                    if (currentIndex == itemCount) {\n                        // Reached the end of the list, start again at the beginning.\n                        currentIndex = 0;\n                    }\n                }\n\n                if (match === true) {\n                    this.updateFocus(this.visibleItems.eq(currentIndex));\n                }\n                e.stopPropagation();\n                return false;\n            }\n        }\n\n        // eslint-disable-next-line no-unreachable\n        return true;\n    };\n\n    /**\n     * Attach an event listener to the tree.\n     *\n     * @method on\n     * @param {String} eventname This is the name of the event to listen for. Only 'selectionchanged' is supported for now.\n     * @param {Function} handler The function to call when the event is triggered.\n     */\n    Tree.prototype.on = function(eventname, handler) {\n        if (eventname !== 'selectionchanged') {\n            log.warning('Invalid custom event name for tree. Only \"selectionchanged\" is supported.');\n        } else {\n            this.treeRoot.on(eventname, handler);\n        }\n    };\n\n    /**\n     * Handle a double click (expand/collapse).\n     *\n     * @method handleDblClick\n     * @param {Object} item is the jquery id of the parent item of the group\n     * @param {Event} e The event.\n     * @return {Boolean}\n     */\n    Tree.prototype.handleDblClick = function(item, e) {\n\n        if (e.altKey || e.ctrlKey || e.shiftKey || e.metaKey) {\n            // Do nothing.\n            return true;\n        }\n\n        // Apply the focus markup.\n        this.updateFocus(item);\n\n        // Expand or collapse the group.\n        this.toggleGroup(item);\n\n        e.stopPropagation();\n        return false;\n    };\n\n    /**\n     * Handle a click (select).\n     *\n     * @method handleExpandCollapseClick\n     * @param {Object} item is the jquery id of the parent item of the group\n     * @param {Event} e The event.\n     * @return {Boolean}\n     */\n    Tree.prototype.handleExpandCollapseClick = function(item, e) {\n\n        // Do not shift the focus.\n        this.toggleGroup(item);\n        e.stopPropagation();\n        return false;\n    };\n\n\n    /**\n     * Handle a click (select).\n     *\n     * @method handleClick\n     * @param {Object} item is the jquery id of the parent item of the group\n     * @param {Event} e The event.\n     * @return {Boolean}\n     */\n    Tree.prototype.handleClick = function(item, e) {\n\n        if (e.shiftKey) {\n            this.multiSelectItem(item);\n        } else if (e.metaKey || e.ctrlKey) {\n            this.toggleItem(item);\n        } else {\n            this.selectItem(item);\n        }\n        this.updateFocus(item);\n        e.stopPropagation();\n        return false;\n    };\n\n    /**\n     * Handle a blur event\n     *\n     * @method handleBlur\n     * @param {Object} item item is the jquery id of the parent item of the group\n     * @param {Event} e The event.\n     * @return {Boolean}\n     */\n    Tree.prototype.handleBlur = function() {\n        return true;\n    };\n\n    /**\n     * Handle a focus event\n     *\n     * @method handleFocus\n     * @param {Object} item item is the jquery id of the parent item of the group\n     * @param {Event} e The event.\n     * @return {Boolean}\n     */\n    Tree.prototype.handleFocus = function(item) {\n\n        this.updateFocus(item);\n\n        return true;\n    };\n\n    /**\n     * Bind the event listeners we require.\n     *\n     * @method bindEventHandlers\n     */\n    Tree.prototype.bindEventHandlers = function() {\n        var thisObj = this;\n\n        // Bind a dblclick handler to the parent items.\n        this.parents.dblclick(function(e) {\n            return thisObj.handleDblClick($(this), e);\n        });\n\n        // Bind a click handler.\n        this.items.click(function(e) {\n            return thisObj.handleClick($(this), e);\n        });\n\n        // Bind a toggle handler to the expand/collapse icons.\n        this.items.children('img').click(function(e) {\n            return thisObj.handleExpandCollapseClick($(this).parent(), e);\n        });\n\n        // Bind a keydown handler.\n        this.items.keydown(function(e) {\n            return thisObj.handleKeyDown($(this), e);\n        });\n\n        // Bind a keypress handler.\n        this.items.keypress(function(e) {\n            return thisObj.handleKeyPress($(this), e);\n        });\n\n        // Bind a focus handler.\n        this.items.focus(function(e) {\n            return thisObj.handleFocus($(this), e);\n        });\n\n        // Bind a blur handler.\n        this.items.blur(function(e) {\n            return thisObj.handleBlur($(this), e);\n        });\n\n    };\n\n    return /** @alias module:tool_lp/tree */ Tree;\n});\n"]}