{"version":3,"sources":["../src/planactions.js"],"names":["define","$","templates","ajax","notification","str","Menubar","Dialogue","PlanActions","type","_type","_region","_planNode","_template","_contextMethod","TypeError","prototype","_getContextArgs","planData","self","args","planid","id","userid","refresh","selector","_findPlanData","_callAndRefresh","_renderView","context","render","then","newhtml","newjs","replaceWith","runTemplateJS","calls","callKey","Math","floor","random","M","util","js_pending","push","methodname","when","apply","call","arguments","length","fail","exception","always","js_complete","_doDelete","deletePlan","requests","done","plan","get_strings","key","component","param","name","strings","confirm","_doReopenPlan","reopenPlan","_doCompletePlan","completePlan","_doUnlinkPlan","unlinkPlan","_doRequestReview","requestReview","_doCancelReviewRequest","cancelReviewRequest","_doStartReview","startReview","_doStopReview","stopReview","_doApprove","approve","_doUnapprove","unapprove","_showLinkedCoursesHandler","e","preventDefault","competencyid","target","data","courses","html","get_string","linkedcourses","_eventHandler","method","node","parent","parentsUntil","Error","enhanceMenubar","enhance","bind","registerEvents","wrapper","find","click"],"mappings":"aAuBAA,6BAAO,CAAC,QAAD,CACC,gBADD,CAEC,WAFD,CAGC,mBAHD,CAIC,UAJD,CAKC,iBALD,CAMC,kBAND,CAAP,CAOQ,SAASC,CAAT,CAAYC,SAAZ,CAAuBC,IAAvB,CAA6BC,YAA7B,CAA2CC,GAA3C,CAAgDC,OAAhD,CAAyDC,QAAzD,CAAmE,CASvE,GAAIC,aAAc,SAASC,IAAT,CAAe,CAG7B,GAFA,KAAKC,KAAL,CAAaD,IAEb,CAAa,MAAT,OAAJ,CAEI,KAAKE,OAAL,CAAe,2BAFnB,CAGI,KAAKC,SAAL,CAAiB,2BAHrB,CAII,KAAKC,SAAL,CAAiB,mBAJrB,CAKI,KAAKC,cAAL,CAAsB,4BAL1B,KAOO,IAAa,OAAT,OAAJ,CAEH,KAAKH,OAAL,CAAe,uBAFZ,CAGH,KAAKC,SAAL,CAAiB,2BAHd,CAIH,KAAKC,SAAL,CAAiB,oBAJd,CAKH,KAAKC,cAAL,CAAsB,6BALnB,KAQH,MAAM,IAAIC,UAAJ,CAAc,kBAAd,CAEb,CApBD,CAujBA,MAhiBAP,aAAYQ,SAAZ,CAAsBF,cAAtB,CAAuC,IAgiBvC,CA9hBAN,YAAYQ,SAAZ,CAAsBJ,SAAtB,CAAkC,IA8hBlC,CA5hBAJ,YAAYQ,SAAZ,CAAsBL,OAAtB,CAAgC,IA4hBhC,CA1hBAH,YAAYQ,SAAZ,CAAsBH,SAAtB,CAAkC,IA0hBlC,CAxhBAL,YAAYQ,SAAZ,CAAsBN,KAAtB,CAA8B,IAwhB9B,CAhhBAF,YAAYQ,SAAZ,CAAsBC,eAAtB,CAAwC,SAASC,QAAT,CAAmB,CACvD,GAAIC,MAAO,IAAX,CACIC,KAAO,EADX,CAcA,MAXmB,MAAf,QAAKV,KAWT,CAVIU,KAAO,CACHC,OAAQH,SAASI,EADd,CAUX,CAN0B,OAAf,QAAKZ,KAMhB,GALIU,KAAO,CACHG,OAAQL,SAASK,MADd,CAKX,EAAOH,IACV,CAggBD,CAvfAZ,YAAYQ,SAAZ,CAAsBQ,OAAtB,CAAgC,SAASC,QAAT,CAAmB,CAC/C,GAAIP,UAAW,KAAKQ,aAAL,CAAmBzB,EAAEwB,QAAF,CAAnB,CAAf,CACA,KAAKE,eAAL,CAAqB,EAArB,CAAyBT,QAAzB,CACH,CAofD,CA5eAV,YAAYQ,SAAZ,CAAsBY,WAAtB,CAAoC,SAASC,OAAT,CAAkB,CAClD,GAAIV,MAAO,IAAX,CACA,MAAOjB,WAAU4B,MAAV,CAAiBX,KAAKN,SAAtB,CAAiCgB,OAAjC,EACFE,IADE,CACG,SAASC,OAAT,CAAkBC,KAAlB,CAAyB,CAG3B,MAFAhC,GAAEkB,KAAKR,OAAP,EAAgBuB,WAAhB,CAA4BF,OAA5B,CAEA,KADA9B,WAAUiC,aAAV,CAAwBF,KAAxB,CAEH,CALE,CAMV,CAoeD,CA3dAzB,YAAYQ,SAAZ,CAAsBW,eAAtB,CAAwC,SAASS,KAAT,CAAgBlB,QAAhB,CAA0B,CAG9D,GAAImB,SAAU,uCAAyCC,KAAKC,KAAL,CAAW,UAAKC,MAAL,EAAX,CAAvD,CACAC,EAAEC,IAAF,CAAOC,UAAP,CAAkBN,OAAlB,CAJ8D,CAM9D,GAAIlB,MAAO,IAAX,CAOA,MANAiB,OAAMQ,IAAN,CAAW,CACPC,WAAY1B,KAAKL,cADV,CAEPM,KAAMD,KAAKF,eAAL,CAAqBC,QAArB,CAFC,CAAX,CAMA,CAAOjB,EAAE6C,IAAF,CAAOC,KAAP,CAAa9C,CAAb,CAAgBE,KAAK6C,IAAL,CAAUZ,KAAV,CAAhB,EACFL,IADE,CACG,UAAW,CACb,MAAOZ,MAAKS,WAAL,CAAiBqB,UAAUA,UAAUC,MAAV,CAAmB,CAA7B,CAAjB,CACV,CAHE,EAIFC,IAJE,CAIG/C,aAAagD,SAJhB,EAKFC,MALE,CAKK,UAAW,CACf,MAAOZ,GAAEC,IAAF,CAAOY,WAAP,CAAmBjB,OAAnB,CACV,CAPE,CAQV,CAscD,CA/bA7B,YAAYQ,SAAZ,CAAsBuC,SAAtB,CAAkC,SAASrC,QAAT,CAAmB,CACjD,GAAIC,MAAO,IAAX,CACIiB,MAAQ,CAAC,CACLS,WAAY,6BADP,CAELzB,KAAM,CAACE,GAAIJ,SAASI,EAAd,CAFD,CAAD,CADZ,CAKAH,KAAKQ,eAAL,CAAqBS,KAArB,CAA4BlB,QAA5B,CACH,CAwbD,CAjbAV,YAAYQ,SAAZ,CAAsBwC,UAAtB,CAAmC,SAAStC,QAAT,CAAmB,CAClD,GACIuC,SADJ,CAAItC,KAAO,IAAX,CAGAsC,SAAWtD,KAAK6C,IAAL,CAAU,CAAC,CAClBH,WAAY,2BADM,CAElBzB,KAAM,CAACE,GAAIJ,SAASI,EAAd,CAFY,CAAD,CAAV,CAJuC,CASlDmC,SAAS,CAAT,EAAYC,IAAZ,CAAiB,SAASC,IAAT,CAAe,CAC5BtD,IAAIuD,WAAJ,CAAgB,CACZ,CAACC,IAAK,SAAN,CAAiBC,UAAW,QAA5B,CADY,CAEZ,CAACD,IAAK,YAAN,CAAoBC,UAAW,SAA/B,CAA0CC,MAAOJ,KAAKK,IAAtD,CAFY,CAGZ,CAACH,IAAK,QAAN,CAAgBC,UAAW,QAA3B,CAHY,CAIZ,CAACD,IAAK,QAAN,CAAgBC,UAAW,QAA3B,CAJY,CAAhB,EAKGJ,IALH,CAKQ,SAASO,OAAT,CAAkB,CACtB7D,aAAa8D,OAAb,CACID,QAAQ,CAAR,CADJ,CAEIA,QAAQ,CAAR,CAFJ,CAGIA,QAAQ,CAAR,CAHJ,CAIIA,QAAQ,CAAR,CAJJ,CAKI,UAAW,CACP9C,KAAKoC,SAAL,CAAerC,QAAf,CACH,CAPL,CASH,CAfD,EAeGiC,IAfH,CAeQ/C,aAAagD,SAfrB,CAgBH,CAjBD,EAiBGD,IAjBH,CAiBQ/C,aAAagD,SAjBrB,CAmBH,CAqZD,CA9YA5C,YAAYQ,SAAZ,CAAsBmD,aAAtB,CAAsC,SAASjD,QAAT,CAAmB,CACrD,GAAIC,MAAO,IAAX,CACIiB,MAAQ,CAAC,CACLS,WAAY,6BADP,CAELzB,KAAM,CAACC,OAAQH,SAASI,EAAlB,CAFD,CAAD,CADZ,CAKAH,KAAKQ,eAAL,CAAqBS,KAArB,CAA4BlB,QAA5B,CACH,CAuYD,CAhYAV,YAAYQ,SAAZ,CAAsBoD,UAAtB,CAAmC,SAASlD,QAAT,CAAmB,CAClD,GAAIC,MAAO,IAAX,CACIsC,SAAWtD,KAAK6C,IAAL,CAAU,CAAC,CAClBH,WAAY,2BADM,CAElBzB,KAAM,CAACE,GAAIJ,SAASI,EAAd,CAFY,CAAD,CAAV,CADf,CAMAmC,SAAS,CAAT,EAAYC,IAAZ,CAAiB,SAASC,IAAT,CAAe,CAC5BtD,IAAIuD,WAAJ,CAAgB,CACZ,CAACC,IAAK,SAAN,CAAiBC,UAAW,QAA5B,CADY,CAEZ,CAACD,IAAK,mBAAN,CAA2BC,UAAW,SAAtC,CAAiDC,MAAOJ,KAAKK,IAA7D,CAFY,CAGZ,CAACH,IAAK,YAAN,CAAoBC,UAAW,SAA/B,CAHY,CAIZ,CAACD,IAAK,QAAN,CAAgBC,UAAW,QAA3B,CAJY,CAAhB,EAKGJ,IALH,CAKQ,SAASO,OAAT,CAAkB,CACtB7D,aAAa8D,OAAb,CACID,QAAQ,CAAR,CADJ,CAEIA,QAAQ,CAAR,CAFJ,CAGIA,QAAQ,CAAR,CAHJ,CAIIA,QAAQ,CAAR,CAJJ,CAKI,UAAW,CACP9C,KAAKgD,aAAL,CAAmBjD,QAAnB,CACH,CAPL,CASH,CAfD,EAeGiC,IAfH,CAeQ/C,aAAagD,SAfrB,CAgBH,CAjBD,EAiBGD,IAjBH,CAiBQ/C,aAAagD,SAjBrB,CAmBH,CAsWD,CA/VA5C,YAAYQ,SAAZ,CAAsBqD,eAAtB,CAAwC,SAASnD,QAAT,CAAmB,CACvD,GAAIC,MAAO,IAAX,CACIiB,MAAQ,CAAC,CACLS,WAAY,+BADP,CAELzB,KAAM,CAACC,OAAQH,SAASI,EAAlB,CAFD,CAAD,CADZ,CAKAH,KAAKQ,eAAL,CAAqBS,KAArB,CAA4BlB,QAA5B,CACH,CAwVD,CAjVAV,YAAYQ,SAAZ,CAAsBsD,YAAtB,CAAqC,SAASpD,QAAT,CAAmB,CACpD,GAAIC,MAAO,IAAX,CACIsC,SAAWtD,KAAK6C,IAAL,CAAU,CAAC,CAClBH,WAAY,2BADM,CAElBzB,KAAM,CAACE,GAAIJ,SAASI,EAAd,CAFY,CAAD,CAAV,CADf,CAMAmC,SAAS,CAAT,EAAYC,IAAZ,CAAiB,SAASC,IAAT,CAAe,CAC5BtD,IAAIuD,WAAJ,CAAgB,CACZ,CAACC,IAAK,SAAN,CAAiBC,UAAW,QAA5B,CADY,CAEZ,CAACD,IAAK,qBAAN,CAA6BC,UAAW,SAAxC,CAAmDC,MAAOJ,KAAKK,IAA/D,CAFY,CAGZ,CAACH,IAAK,cAAN,CAAsBC,UAAW,SAAjC,CAHY,CAIZ,CAACD,IAAK,QAAN,CAAgBC,UAAW,QAA3B,CAJY,CAAhB,EAKGJ,IALH,CAKQ,SAASO,OAAT,CAAkB,CACtB7D,aAAa8D,OAAb,CACID,QAAQ,CAAR,CADJ,CAEIA,QAAQ,CAAR,CAFJ,CAGIA,QAAQ,CAAR,CAHJ,CAIIA,QAAQ,CAAR,CAJJ,CAKI,UAAW,CACP9C,KAAKkD,eAAL,CAAqBnD,QAArB,CACH,CAPL,CASH,CAfD,EAeGiC,IAfH,CAeQ/C,aAAagD,SAfrB,CAgBH,CAjBD,EAiBGD,IAjBH,CAiBQ/C,aAAagD,SAjBrB,CAkBH,CAwTD,CAjTA5C,YAAYQ,SAAZ,CAAsBuD,aAAtB,CAAsC,SAASrD,QAAT,CAAmB,CACrD,GAAIC,MAAO,IAAX,CACIiB,MAAQ,CAAC,CACLS,WAAY,2CADP,CAELzB,KAAM,CAACC,OAAQH,SAASI,EAAlB,CAFD,CAAD,CADZ,CAKAH,KAAKQ,eAAL,CAAqBS,KAArB,CAA4BlB,QAA5B,CACH,CA0SD,CAnSAV,YAAYQ,SAAZ,CAAsBwD,UAAtB,CAAmC,SAAStD,QAAT,CAAmB,CAClD,GAAIC,MAAO,IAAX,CACIsC,SAAWtD,KAAK6C,IAAL,CAAU,CAAC,CAClBH,WAAY,2BADM,CAElBzB,KAAM,CAACE,GAAIJ,SAASI,EAAd,CAFY,CAAD,CAAV,CADf,CAMAmC,SAAS,CAAT,EAAYC,IAAZ,CAAiB,SAASC,IAAT,CAAe,CAC5BtD,IAAIuD,WAAJ,CAAgB,CACZ,CAACC,IAAK,SAAN,CAAiBC,UAAW,QAA5B,CADY,CAEZ,CAACD,IAAK,2BAAN,CAAmCC,UAAW,SAA9C,CAAyDC,MAAOJ,KAAKK,IAArE,CAFY,CAGZ,CAACH,IAAK,oBAAN,CAA4BC,UAAW,SAAvC,CAHY,CAIZ,CAACD,IAAK,QAAN,CAAgBC,UAAW,QAA3B,CAJY,CAAhB,EAKGJ,IALH,CAKQ,SAASO,OAAT,CAAkB,CACtB7D,aAAa8D,OAAb,CACID,QAAQ,CAAR,CADJ,CAEIA,QAAQ,CAAR,CAFJ,CAGIA,QAAQ,CAAR,CAHJ,CAIIA,QAAQ,CAAR,CAJJ,CAKI,UAAW,CACP9C,KAAKoD,aAAL,CAAmBrD,QAAnB,CACH,CAPL,CASH,CAfD,EAeGiC,IAfH,CAeQ/C,aAAagD,SAfrB,CAgBH,CAjBD,EAiBGD,IAjBH,CAiBQ/C,aAAagD,SAjBrB,CAkBH,CA0QD,CAlQA5C,YAAYQ,SAAZ,CAAsByD,gBAAtB,CAAyC,SAASvD,QAAT,CAAmB,CACxD,GAAIkB,OAAQ,CAAC,CACTS,WAAY,qCADH,CAETzB,KAAM,CACFE,GAAIJ,SAASI,EADX,CAFG,CAAD,CAAZ,CAMA,KAAKK,eAAL,CAAqBS,KAArB,CAA4BlB,QAA5B,CACH,CA0PD,CAlPAV,YAAYQ,SAAZ,CAAsB0D,aAAtB,CAAsC,SAASxD,QAAT,CAAmB,CACrD,KAAKuD,gBAAL,CAAsBvD,QAAtB,CACH,CAgPD,CAxOAV,YAAYQ,SAAZ,CAAsB2D,sBAAtB,CAA+C,SAASzD,QAAT,CAAmB,CAC9D,GAAIkB,OAAQ,CAAC,CACTS,WAAY,4CADH,CAETzB,KAAM,CACFE,GAAIJ,SAASI,EADX,CAFG,CAAD,CAAZ,CAMA,KAAKK,eAAL,CAAqBS,KAArB,CAA4BlB,QAA5B,CACH,CAgOD,CAxNAV,YAAYQ,SAAZ,CAAsB4D,mBAAtB,CAA4C,SAAS1D,QAAT,CAAmB,CAC3D,KAAKyD,sBAAL,CAA4BzD,QAA5B,CACH,CAsND,CA9MAV,YAAYQ,SAAZ,CAAsB6D,cAAtB,CAAuC,SAAS3D,QAAT,CAAmB,CACtD,GAAIkB,OAAQ,CAAC,CACTS,WAAY,mCADH,CAETzB,KAAM,CACFE,GAAIJ,SAASI,EADX,CAFG,CAAD,CAAZ,CAMA,KAAKK,eAAL,CAAqBS,KAArB,CAA4BlB,QAA5B,CACH,CAsMD,CA9LAV,YAAYQ,SAAZ,CAAsB8D,WAAtB,CAAoC,SAAS5D,QAAT,CAAmB,CACnD,KAAK2D,cAAL,CAAoB3D,QAApB,CACH,CA4LD,CApLAV,YAAYQ,SAAZ,CAAsB+D,aAAtB,CAAsC,SAAS7D,QAAT,CAAmB,CACrD,GAAIkB,OAAQ,CAAC,CACTS,WAAY,kCADH,CAETzB,KAAM,CACFE,GAAIJ,SAASI,EADX,CAFG,CAAD,CAAZ,CAMA,KAAKK,eAAL,CAAqBS,KAArB,CAA4BlB,QAA5B,CACH,CA4KD,CApKAV,YAAYQ,SAAZ,CAAsBgE,UAAtB,CAAmC,SAAS9D,QAAT,CAAmB,CAClD,KAAK6D,aAAL,CAAmB7D,QAAnB,CACH,CAkKD,CA1JAV,YAAYQ,SAAZ,CAAsBiE,UAAtB,CAAmC,SAAS/D,QAAT,CAAmB,CAClD,GAAIkB,OAAQ,CAAC,CACTS,WAAY,8BADH,CAETzB,KAAM,CACFE,GAAIJ,SAASI,EADX,CAFG,CAAD,CAAZ,CAMA,KAAKK,eAAL,CAAqBS,KAArB,CAA4BlB,QAA5B,CACH,CAkJD,CA1IAV,YAAYQ,SAAZ,CAAsBkE,OAAtB,CAAgC,SAAShE,QAAT,CAAmB,CAC/C,KAAK+D,UAAL,CAAgB/D,QAAhB,CACH,CAwID,CAhIAV,YAAYQ,SAAZ,CAAsBmE,YAAtB,CAAqC,SAASjE,QAAT,CAAmB,CACpD,GAAIkB,OAAQ,CAAC,CACTS,WAAY,gCADH,CAETzB,KAAM,CACFE,GAAIJ,SAASI,EADX,CAFG,CAAD,CAAZ,CAMA,KAAKK,eAAL,CAAqBS,KAArB,CAA4BlB,QAA5B,CACH,CAwHD,CAhHAV,YAAYQ,SAAZ,CAAsBoE,SAAtB,CAAkC,SAASlE,QAAT,CAAmB,CACjD,KAAKiE,YAAL,CAAkBjE,QAAlB,CACH,CA8GD,CAvGAV,YAAYQ,SAAZ,CAAsBqE,yBAAtB,CAAkD,SAASC,CAAT,CAAY,CAC1DA,EAAEC,cAAF,EAD0D,IAGtDC,cAAevF,EAAEqF,EAAEG,MAAJ,EAAYC,IAAZ,CAAiB,IAAjB,CAHuC,CAItDjC,SAAWtD,KAAK6C,IAAL,CAAU,CAAC,CACtBH,WAAY,uCADU,CAEtBzB,KAAM,CAACE,GAAIkE,YAAL,CAFgB,CAAD,CAAV,CAJ2C,CAS1D/B,SAAS,CAAT,EAAYC,IAAZ,CAAiB,SAASiC,OAAT,CAAkB,CAI/BzF,UAAU4B,MAAV,CAAiB,gCAAjB,CAHc,CACV6D,QAASA,OADC,CAGd,EAA4DjC,IAA5D,CAAiE,SAASkC,IAAT,CAAe,CAC5EvF,IAAIwF,UAAJ,CAAe,eAAf,CAAgC,SAAhC,EAA2CnC,IAA3C,CAAgD,SAASoC,aAAT,CAAwB,CACpE,GAAIvF,SAAJ,CACIuF,aADJ,CAEIF,IAFJ,CAIH,CALD,EAKGzC,IALH,CAKQ/C,aAAagD,SALrB,CAMH,CAPD,EAOGD,IAPH,CAOQ/C,aAAagD,SAPrB,CAQH,CAZD,EAYGD,IAZH,CAYQ/C,aAAagD,SAZrB,CAaH,CAiFD,CAxEA5C,YAAYQ,SAAZ,CAAsB+E,aAAtB,CAAsC,SAASC,MAAT,CAAiBV,CAAjB,CAAoB,CACtDA,EAAEC,cAAF,EADsD,CAEtD,GAAIG,MAAO,KAAKhE,aAAL,CAAmBzB,EAAEqF,EAAEG,MAAJ,CAAnB,CAAX,CACA,KAAKO,MAAL,EAAaN,IAAb,CACH,CAoED,CA5DAlF,YAAYQ,SAAZ,CAAsBU,aAAtB,CAAsC,SAASuE,IAAT,CAAe,CACjD,GACIP,KADJ,CAAIQ,OAASD,KAAKE,YAAL,CAAkBlG,EAAE,KAAKU,OAAP,EAAgBuF,MAAhB,EAAlB,CAA4C,KAAKtF,SAAjD,CAAb,CAGA,GAAqB,CAAjB,SAAOsC,MAAX,CACI,KAAM,IAAIkD,MAAJ,CAAU,gCAAV,CAAN,CAIJ,GADAV,KAAOQ,OAAOR,IAAP,EACP,CAAoB,WAAhB,QAAOA,KAAP,EAAkD,WAAnB,QAAOA,MAAKpE,EAA/C,CACI,KAAM,IAAI8E,MAAJ,CAAU,+BAAV,CAAN,CAGJ,MAAOV,KACV,CA8CD,CAvCAlF,YAAYQ,SAAZ,CAAsBqF,cAAtB,CAAuC,SAAS5E,QAAT,CAAmB,CACtDnB,QAAQgG,OAAR,CAAgB7E,QAAhB,CAA0B,CACtB,8BAA+B,KAAKsE,aAAL,CAAmBQ,IAAnB,CAAwB,IAAxB,CAA8B,YAA9B,CADT,CAEtB,gCAAiC,KAAKR,aAAL,CAAmBQ,IAAnB,CAAwB,IAAxB,CAA8B,cAA9B,CAFX,CAGtB,8BAA+B,KAAKR,aAAL,CAAmBQ,IAAnB,CAAwB,IAAxB,CAA8B,YAA9B,CAHT,CAItB,8BAA+B,KAAKR,aAAL,CAAmBQ,IAAnB,CAAwB,IAAxB,CAA8B,YAA9B,CAJT,CAKtB,sCAAuC,KAAKR,aAAL,CAAmBQ,IAAnB,CAAwB,IAAxB,CAA8B,eAA9B,CALjB,CAMtB,6CAA8C,KAAKR,aAAL,CAAmBQ,IAAnB,CAAwB,IAAxB,CAA8B,qBAA9B,CANxB,CAOtB,oCAAqC,KAAKR,aAAL,CAAmBQ,IAAnB,CAAwB,IAAxB,CAA8B,aAA9B,CAPf,CAQtB,mCAAoC,KAAKR,aAAL,CAAmBQ,IAAnB,CAAwB,IAAxB,CAA8B,YAA9B,CARd,CAStB,+BAAgC,KAAKR,aAAL,CAAmBQ,IAAnB,CAAwB,IAAxB,CAA8B,SAA9B,CATV,CAUtB,iCAAkC,KAAKR,aAAL,CAAmBQ,IAAnB,CAAwB,IAAxB,CAA8B,WAA9B,CAVZ,CAA1B,CAYH,CA0BD,CAlBA/F,YAAYQ,SAAZ,CAAsBwF,cAAtB,CAAuC,UAAW,CAC9C,GAAIC,SAAUxG,EAAE,KAAKU,OAAP,CAAd,CAEA8F,QAAQC,IAAR,CAAa,6BAAb,EAA4CC,KAA5C,CAAkD,KAAKZ,aAAL,CAAmBQ,IAAnB,CAAwB,IAAxB,CAA8B,YAA9B,CAAlD,CAH8C,CAI9CE,QAAQC,IAAR,CAAa,+BAAb,EAA8CC,KAA9C,CAAoD,KAAKZ,aAAL,CAAmBQ,IAAnB,CAAwB,IAAxB,CAA8B,cAA9B,CAApD,CAJ8C,CAK9CE,QAAQC,IAAR,CAAa,6BAAb,EAA4CC,KAA5C,CAAkD,KAAKZ,aAAL,CAAmBQ,IAAnB,CAAwB,IAAxB,CAA8B,YAA9B,CAAlD,CAL8C,CAM9CE,QAAQC,IAAR,CAAa,6BAAb,EAA4CC,KAA5C,CAAkD,KAAKZ,aAAL,CAAmBQ,IAAnB,CAAwB,IAAxB,CAA8B,YAA9B,CAAlD,CAN8C,CAQ9CE,QAAQC,IAAR,CAAa,qCAAb,EAAoDC,KAApD,CAA0D,KAAKZ,aAAL,CAAmBQ,IAAnB,CAAwB,IAAxB,CAA8B,eAA9B,CAA1D,CAR8C,CAS9CE,QAAQC,IAAR,CAAa,4CAAb,EAA2DC,KAA3D,CAAiE,KAAKZ,aAAL,CAAmBQ,IAAnB,CAAwB,IAAxB,CAA8B,qBAA9B,CAAjE,CAT8C,CAU9CE,QAAQC,IAAR,CAAa,mCAAb,EAAkDC,KAAlD,CAAwD,KAAKZ,aAAL,CAAmBQ,IAAnB,CAAwB,IAAxB,CAA8B,aAA9B,CAAxD,CAV8C,CAW9CE,QAAQC,IAAR,CAAa,kCAAb,EAAiDC,KAAjD,CAAuD,KAAKZ,aAAL,CAAmBQ,IAAnB,CAAwB,IAAxB,CAA8B,YAA9B,CAAvD,CAX8C,CAY9CE,QAAQC,IAAR,CAAa,8BAAb,EAA6CC,KAA7C,CAAmD,KAAKZ,aAAL,CAAmBQ,IAAnB,CAAwB,IAAxB,CAA8B,SAA9B,CAAnD,CAZ8C,CAa9CE,QAAQC,IAAR,CAAa,gCAAb,EAA+CC,KAA/C,CAAqD,KAAKZ,aAAL,CAAmBQ,IAAnB,CAAwB,IAAxB,CAA8B,WAA9B,CAArD,CAb8C,CAe9CE,QAAQC,IAAR,CAAa,mCAAb,EAAkDC,KAAlD,CAAwD,KAAKtB,yBAAL,CAA+BkB,IAA/B,CAAoC,IAApC,CAAxD,CACH,CAED,CAAO/F,WACV,CAxkBD,C","file":"planactions.min.js","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Plan actions via ajax.\n *\n * @module     tool_lp/planactions\n * @package    tool_lp\n * @copyright  2015 David Monllao\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery',\n        'core/templates',\n        'core/ajax',\n        'core/notification',\n        'core/str',\n        'tool_lp/menubar',\n        'tool_lp/dialogue'],\n        function($, templates, ajax, notification, str, Menubar, Dialogue) {\n\n    /**\n     * PlanActions class.\n     *\n     * Note that presently this cannot be instantiated more than once per page.\n     *\n     * @param {String} type The type of page we're in.\n     */\n    var PlanActions = function(type) {\n        this._type = type;\n\n        if (type === 'plan') {\n            // This is the page to view one plan.\n            this._region = '[data-region=\"plan-page\"]';\n            this._planNode = '[data-region=\"plan-page\"]';\n            this._template = 'tool_lp/plan_page';\n            this._contextMethod = 'tool_lp_data_for_plan_page';\n\n        } else if (type === 'plans') {\n            // This is the page to view a list of plans.\n            this._region = '[data-region=\"plans\"]';\n            this._planNode = '[data-region=\"plan-node\"]';\n            this._template = 'tool_lp/plans_page';\n            this._contextMethod = 'tool_lp_data_for_plans_page';\n\n        } else {\n            throw new TypeError('Unexpected type.');\n        }\n    };\n\n    /** @type {String} Ajax method to fetch the page data from. */\n    PlanActions.prototype._contextMethod = null;\n    /** @type {String} Selector to find the node describing the plan. */\n    PlanActions.prototype._planNode = null;\n    /** @type {String} Selector mapping to the region to update. Usually similar to wrapper. */\n    PlanActions.prototype._region = null;\n    /** @type {String} Name of the template used to render the region. */\n    PlanActions.prototype._template = null;\n    /** @type {String} Type of page/region we're in. */\n    PlanActions.prototype._type = null;\n\n    /**\n     * Resolve the arguments to refresh the region.\n     *\n     * @param  {Object} planData Plan data from plan node.\n     * @return {Object} List of arguments.\n     */\n    PlanActions.prototype._getContextArgs = function(planData) {\n        var self = this,\n            args = {};\n\n        if (self._type === 'plan') {\n            args = {\n                planid: planData.id\n            };\n\n        } else if (self._type === 'plans') {\n            args = {\n                userid: planData.userid\n            };\n        }\n\n        return args;\n    };\n\n    /**\n     * Refresh the plan view.\n     *\n     * This is useful when you only want to refresh the view.\n     *\n     * @param  {String} selector The node to search the plan data from.\n     */\n    PlanActions.prototype.refresh = function(selector) {\n        var planData = this._findPlanData($(selector));\n        this._callAndRefresh([], planData);\n    };\n\n    /**\n     * Callback to render the region template.\n     *\n     * @param {Object} context The context for the template.\n     * @return {Promise}\n     */\n    PlanActions.prototype._renderView = function(context) {\n        var self = this;\n        return templates.render(self._template, context)\n            .then(function(newhtml, newjs) {\n                $(self._region).replaceWith(newhtml);\n                templates.runTemplateJS(newjs);\n                return;\n            });\n    };\n\n    /**\n     * Call multiple ajax methods, and refresh.\n     *\n     * @param  {Array}  calls    List of Ajax calls.\n     * @param  {Object} planData Plan data from plan node.\n     * @return {Promise}\n     */\n    PlanActions.prototype._callAndRefresh = function(calls, planData) {\n        // Because this function causes a refresh, we must track the JS completion from start to finish to prevent\n        // stale reference issues in Behat.\n        var callKey = 'tool_lp/planactions:_callAndRefresh-' + Math.floor(Math.random() * Math.floor(1000));\n        M.util.js_pending(callKey);\n\n        var self = this;\n        calls.push({\n            methodname: self._contextMethod,\n            args: self._getContextArgs(planData)\n        });\n\n        // Apply all the promises, and refresh when the last one is resolved.\n        return $.when.apply($, ajax.call(calls))\n            .then(function() {\n                return self._renderView(arguments[arguments.length - 1]);\n            })\n            .fail(notification.exception)\n            .always(function() {\n                return M.util.js_complete(callKey);\n            });\n    };\n\n    /**\n     * Delete a plan and reload the region.\n     *\n     * @param  {Object} planData Plan data from plan node.\n     */\n    PlanActions.prototype._doDelete = function(planData) {\n        var self = this,\n            calls = [{\n                methodname: 'core_competency_delete_plan',\n                args: {id: planData.id}\n            }];\n        self._callAndRefresh(calls, planData);\n    };\n\n    /**\n     * Delete a plan.\n     *\n     * @param  {Object} planData Plan data from plan node.\n     */\n    PlanActions.prototype.deletePlan = function(planData) {\n        var self = this,\n            requests;\n\n        requests = ajax.call([{\n            methodname: 'core_competency_read_plan',\n            args: {id: planData.id}\n        }]);\n\n        requests[0].done(function(plan) {\n            str.get_strings([\n                {key: 'confirm', component: 'moodle'},\n                {key: 'deleteplan', component: 'tool_lp', param: plan.name},\n                {key: 'delete', component: 'moodle'},\n                {key: 'cancel', component: 'moodle'}\n            ]).done(function(strings) {\n                notification.confirm(\n                    strings[0], // Confirm.\n                    strings[1], // Delete plan X?\n                    strings[2], // Delete.\n                    strings[3], // Cancel.\n                    function() {\n                        self._doDelete(planData);\n                    }\n                );\n            }).fail(notification.exception);\n        }).fail(notification.exception);\n\n    };\n\n    /**\n     * Reopen plan and reload the region.\n     *\n     * @param  {Object} planData Plan data from plan node.\n     */\n    PlanActions.prototype._doReopenPlan = function(planData) {\n        var self = this,\n            calls = [{\n                methodname: 'core_competency_reopen_plan',\n                args: {planid: planData.id}\n            }];\n        self._callAndRefresh(calls, planData);\n    };\n\n    /**\n     * Reopen a plan.\n     *\n     * @param  {Object} planData Plan data from plan node.\n     */\n    PlanActions.prototype.reopenPlan = function(planData) {\n        var self = this,\n            requests = ajax.call([{\n                methodname: 'core_competency_read_plan',\n                args: {id: planData.id}\n            }]);\n\n        requests[0].done(function(plan) {\n            str.get_strings([\n                {key: 'confirm', component: 'moodle'},\n                {key: 'reopenplanconfirm', component: 'tool_lp', param: plan.name},\n                {key: 'reopenplan', component: 'tool_lp'},\n                {key: 'cancel', component: 'moodle'}\n            ]).done(function(strings) {\n                notification.confirm(\n                    strings[0], // Confirm.\n                    strings[1], // Reopen plan X?\n                    strings[2], // Reopen.\n                    strings[3], // Cancel.\n                    function() {\n                        self._doReopenPlan(planData);\n                    }\n                );\n            }).fail(notification.exception);\n        }).fail(notification.exception);\n\n    };\n\n    /**\n     * Complete plan and reload the region.\n     *\n     * @param  {Object} planData Plan data from plan node.\n     */\n    PlanActions.prototype._doCompletePlan = function(planData) {\n        var self = this,\n            calls = [{\n                methodname: 'core_competency_complete_plan',\n                args: {planid: planData.id}\n            }];\n        self._callAndRefresh(calls, planData);\n    };\n\n    /**\n     * Complete a plan process.\n     *\n     * @param  {Object} planData Plan data from plan node.\n     */\n    PlanActions.prototype.completePlan = function(planData) {\n        var self = this,\n            requests = ajax.call([{\n                methodname: 'core_competency_read_plan',\n                args: {id: planData.id}\n            }]);\n\n        requests[0].done(function(plan) {\n            str.get_strings([\n                {key: 'confirm', component: 'moodle'},\n                {key: 'completeplanconfirm', component: 'tool_lp', param: plan.name},\n                {key: 'completeplan', component: 'tool_lp'},\n                {key: 'cancel', component: 'moodle'}\n            ]).done(function(strings) {\n                notification.confirm(\n                    strings[0], // Confirm.\n                    strings[1], // Complete plan X?\n                    strings[2], // Complete.\n                    strings[3], // Cancel.\n                    function() {\n                        self._doCompletePlan(planData);\n                    }\n                );\n            }).fail(notification.exception);\n        }).fail(notification.exception);\n    };\n\n    /**\n     * Unlink plan and reload the region.\n     *\n     * @param  {Object} planData Plan data from plan node.\n     */\n    PlanActions.prototype._doUnlinkPlan = function(planData) {\n        var self = this,\n            calls = [{\n                methodname: 'core_competency_unlink_plan_from_template',\n                args: {planid: planData.id}\n            }];\n        self._callAndRefresh(calls, planData);\n    };\n\n    /**\n     * Unlink a plan process.\n     *\n     * @param  {Object} planData Plan data from plan node.\n     */\n    PlanActions.prototype.unlinkPlan = function(planData) {\n        var self = this,\n            requests = ajax.call([{\n                methodname: 'core_competency_read_plan',\n                args: {id: planData.id}\n            }]);\n\n        requests[0].done(function(plan) {\n            str.get_strings([\n                {key: 'confirm', component: 'moodle'},\n                {key: 'unlinkplantemplateconfirm', component: 'tool_lp', param: plan.name},\n                {key: 'unlinkplantemplate', component: 'tool_lp'},\n                {key: 'cancel', component: 'moodle'}\n            ]).done(function(strings) {\n                notification.confirm(\n                    strings[0], // Confirm.\n                    strings[1], // Unlink plan X?\n                    strings[2], // Unlink.\n                    strings[3], // Cancel.\n                    function() {\n                        self._doUnlinkPlan(planData);\n                    }\n                );\n            }).fail(notification.exception);\n        }).fail(notification.exception);\n    };\n\n    /**\n     * Request review of a plan.\n     *\n     * @param  {Object} planData Plan data from plan node.\n     * @method _doRequestReview\n     */\n    PlanActions.prototype._doRequestReview = function(planData) {\n        var calls = [{\n            methodname: 'core_competency_plan_request_review',\n            args: {\n                id: planData.id\n            }\n        }];\n        this._callAndRefresh(calls, planData);\n    };\n\n    /**\n     * Request review of a plan.\n     *\n     * @param  {Object} planData Plan data from plan node.\n     * @method requestReview\n     */\n    PlanActions.prototype.requestReview = function(planData) {\n        this._doRequestReview(planData);\n    };\n\n    /**\n     * Cancel review request of a plan.\n     *\n     * @param  {Object} planData Plan data from plan node.\n     * @method _doCancelReviewRequest\n     */\n    PlanActions.prototype._doCancelReviewRequest = function(planData) {\n        var calls = [{\n            methodname: 'core_competency_plan_cancel_review_request',\n            args: {\n                id: planData.id\n            }\n        }];\n        this._callAndRefresh(calls, planData);\n    };\n\n    /**\n     * Cancel review request of a plan.\n     *\n     * @param  {Object} planData Plan data from plan node.\n     * @method cancelReviewRequest\n     */\n    PlanActions.prototype.cancelReviewRequest = function(planData) {\n        this._doCancelReviewRequest(planData);\n    };\n\n    /**\n     * Start review of a plan.\n     *\n     * @param  {Object} planData Plan data from plan node.\n     * @method _doStartReview\n     */\n    PlanActions.prototype._doStartReview = function(planData) {\n        var calls = [{\n            methodname: 'core_competency_plan_start_review',\n            args: {\n                id: planData.id\n            }\n        }];\n        this._callAndRefresh(calls, planData);\n    };\n\n    /**\n     * Start review of a plan.\n     *\n     * @param  {Object} planData Plan data from plan node.\n     * @method startReview\n     */\n    PlanActions.prototype.startReview = function(planData) {\n        this._doStartReview(planData);\n    };\n\n    /**\n     * Stop review of a plan.\n     *\n     * @param  {Object} planData Plan data from plan node.\n     * @method _doStopReview\n     */\n    PlanActions.prototype._doStopReview = function(planData) {\n        var calls = [{\n            methodname: 'core_competency_plan_stop_review',\n            args: {\n                id: planData.id\n            }\n        }];\n        this._callAndRefresh(calls, planData);\n    };\n\n    /**\n     * Stop review of a plan.\n     *\n     * @param  {Object} planData Plan data from plan node.\n     * @method stopReview\n     */\n    PlanActions.prototype.stopReview = function(planData) {\n        this._doStopReview(planData);\n    };\n\n    /**\n     * Approve a plan.\n     *\n     * @param  {Object} planData Plan data from plan node.\n     * @method _doApprove\n     */\n    PlanActions.prototype._doApprove = function(planData) {\n        var calls = [{\n            methodname: 'core_competency_approve_plan',\n            args: {\n                id: planData.id\n            }\n        }];\n        this._callAndRefresh(calls, planData);\n    };\n\n    /**\n     * Approve a plan.\n     *\n     * @param  {Object} planData Plan data from plan node.\n     * @method approve\n     */\n    PlanActions.prototype.approve = function(planData) {\n        this._doApprove(planData);\n    };\n\n    /**\n     * Unapprove a plan.\n     *\n     * @param  {Object} planData Plan data from plan node.\n     * @method _doUnapprove\n     */\n    PlanActions.prototype._doUnapprove = function(planData) {\n        var calls = [{\n            methodname: 'core_competency_unapprove_plan',\n            args: {\n                id: planData.id\n            }\n        }];\n        this._callAndRefresh(calls, planData);\n    };\n\n    /**\n     * Unapprove a plan.\n     *\n     * @param  {Object} planData Plan data from plan node.\n     * @method unapprove\n     */\n    PlanActions.prototype.unapprove = function(planData) {\n        this._doUnapprove(planData);\n    };\n\n    /**\n     * Display list of linked courses on a modal dialogue.\n     *\n     * @param  {Event} e The event.\n     */\n    PlanActions.prototype._showLinkedCoursesHandler = function(e) {\n        e.preventDefault();\n\n        var competencyid = $(e.target).data('id');\n        var requests = ajax.call([{\n            methodname: 'tool_lp_list_courses_using_competency',\n            args: {id: competencyid}\n        }]);\n\n        requests[0].done(function(courses) {\n            var context = {\n                courses: courses\n            };\n            templates.render('tool_lp/linked_courses_summary', context).done(function(html) {\n                str.get_string('linkedcourses', 'tool_lp').done(function(linkedcourses) {\n                    new Dialogue(\n                        linkedcourses, // Title.\n                        html // The linked courses.\n                    );\n                }).fail(notification.exception);\n            }).fail(notification.exception);\n        }).fail(notification.exception);\n    };\n\n    /**\n     * Plan event handler.\n     *\n     * @param  {String} method The method to call.\n     * @param  {Event} e The event.\n     * @method _eventHandler\n     */\n    PlanActions.prototype._eventHandler = function(method, e) {\n        e.preventDefault();\n        var data = this._findPlanData($(e.target));\n        this[method](data);\n    };\n\n    /**\n     * Find the plan data from the plan node.\n     *\n     * @param  {Node} node The node to search from.\n     * @return {Object} Plan data.\n     */\n    PlanActions.prototype._findPlanData = function(node) {\n        var parent = node.parentsUntil($(this._region).parent(), this._planNode),\n            data;\n\n        if (parent.length != 1) {\n            throw new Error('The plan node was not located.');\n        }\n\n        data = parent.data();\n        if (typeof data === 'undefined' || typeof data.id === 'undefined') {\n            throw new Error('Plan data could not be found.');\n        }\n\n        return data;\n    };\n\n    /**\n     * Enhance a menu bar.\n     *\n     * @param  {String} selector Menubar selector.\n     */\n    PlanActions.prototype.enhanceMenubar = function(selector) {\n        Menubar.enhance(selector, {\n            '[data-action=\"plan-delete\"]': this._eventHandler.bind(this, 'deletePlan'),\n            '[data-action=\"plan-complete\"]': this._eventHandler.bind(this, 'completePlan'),\n            '[data-action=\"plan-reopen\"]': this._eventHandler.bind(this, 'reopenPlan'),\n            '[data-action=\"plan-unlink\"]': this._eventHandler.bind(this, 'unlinkPlan'),\n            '[data-action=\"plan-request-review\"]': this._eventHandler.bind(this, 'requestReview'),\n            '[data-action=\"plan-cancel-review-request\"]': this._eventHandler.bind(this, 'cancelReviewRequest'),\n            '[data-action=\"plan-start-review\"]': this._eventHandler.bind(this, 'startReview'),\n            '[data-action=\"plan-stop-review\"]': this._eventHandler.bind(this, 'stopReview'),\n            '[data-action=\"plan-approve\"]': this._eventHandler.bind(this, 'approve'),\n            '[data-action=\"plan-unapprove\"]': this._eventHandler.bind(this, 'unapprove'),\n        });\n    };\n\n    /**\n     * Register the events in the region.\n     *\n     * At this stage this cannot be used with enhanceMenubar or multiple handlers\n     * will be added to the same node.\n     */\n    PlanActions.prototype.registerEvents = function() {\n        var wrapper = $(this._region);\n\n        wrapper.find('[data-action=\"plan-delete\"]').click(this._eventHandler.bind(this, 'deletePlan'));\n        wrapper.find('[data-action=\"plan-complete\"]').click(this._eventHandler.bind(this, 'completePlan'));\n        wrapper.find('[data-action=\"plan-reopen\"]').click(this._eventHandler.bind(this, 'reopenPlan'));\n        wrapper.find('[data-action=\"plan-unlink\"]').click(this._eventHandler.bind(this, 'unlinkPlan'));\n\n        wrapper.find('[data-action=\"plan-request-review\"]').click(this._eventHandler.bind(this, 'requestReview'));\n        wrapper.find('[data-action=\"plan-cancel-review-request\"]').click(this._eventHandler.bind(this, 'cancelReviewRequest'));\n        wrapper.find('[data-action=\"plan-start-review\"]').click(this._eventHandler.bind(this, 'startReview'));\n        wrapper.find('[data-action=\"plan-stop-review\"]').click(this._eventHandler.bind(this, 'stopReview'));\n        wrapper.find('[data-action=\"plan-approve\"]').click(this._eventHandler.bind(this, 'approve'));\n        wrapper.find('[data-action=\"plan-unapprove\"]').click(this._eventHandler.bind(this, 'unapprove'));\n\n        wrapper.find('[data-action=\"find-courses-link\"]').click(this._showLinkedCoursesHandler.bind(this));\n    };\n\n    return PlanActions;\n});\n"]}