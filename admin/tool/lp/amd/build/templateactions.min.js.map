{"version":3,"sources":["../src/templateactions.js"],"names":["define","$","templates","ajax","notification","str","Actionselector","pagecontextid","templateid","deleteplans","updatePage","newhtml","newjs","replaceWith","runTemplateJS","reloadList","context","render","done","fail","exception","doDelete","requests","call","methodname","args","id","pagecontext","contextid","doDuplicate","e","preventDefault","attr","confirmDelete","template","templatehasrelateddata","get_strings","key","component","param","shortname","strings","actions","actionselector","display","on","data","action","confirm","deleteHandler","duplicateHandler","init"],"mappings":"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","file":"templateactions.min.js","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Handle actions on learning plan templates via ajax.\n *\n * @module     tool_lp/templateactions\n * @package    tool_lp\n * @copyright  2015 Damyon Wiese <damyon@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/templates', 'core/ajax', 'core/notification', 'core/str', 'tool_lp/actionselector'],\n       function($, templates, ajax, notification, str, Actionselector) {\n    // Private variables and functions.\n\n    /** @var {Number} pagecontextid The id of the context */\n    var pagecontextid = 0;\n\n    /** @var {Number} templateid The id of the template */\n    var templateid = 0;\n\n    /** @var {Boolean} Action to apply to plans when deleting a template */\n    var deleteplans = true;\n\n    /**\n     * Callback to replace the dom element with the rendered template.\n     *\n     * @method updatePage\n     * @param {String} newhtml The new html to insert.\n     * @param {String} newjs The new js to run.\n     */\n    var updatePage = function(newhtml, newjs) {\n        $('[data-region=\"managetemplates\"]').replaceWith(newhtml);\n        templates.runTemplateJS(newjs);\n    };\n\n    /**\n     * Callback to render the page template again and update the page.\n     *\n     * @method reloadList\n     * @param {Object} context The context for the template.\n     */\n    var reloadList = function(context) {\n        templates.render('tool_lp/manage_templates_page', context)\n            .done(updatePage)\n            .fail(notification.exception);\n    };\n\n    /**\n     * Delete a template and reload the page.\n     * @method doDelete\n     */\n    var doDelete = function() {\n\n        // We are chaining ajax requests here.\n        var requests = ajax.call([{\n            methodname: 'core_competency_delete_template',\n            args: {id: templateid,\n                    deleteplans: deleteplans}\n        }, {\n            methodname: 'tool_lp_data_for_templates_manage_page',\n            args: {\n                pagecontext: {\n                    contextid: pagecontextid\n                }\n            }\n        }]);\n        requests[1].done(reloadList).fail(notification.exception);\n    };\n\n    /**\n     * Duplicate a template and reload the page.\n     * @method doDuplicate\n     * @param {Event} e\n     */\n    var doDuplicate = function(e) {\n        e.preventDefault();\n\n        templateid = $(this).attr('data-templateid');\n\n        // We are chaining ajax requests here.\n        var requests = ajax.call([{\n            methodname: 'core_competency_duplicate_template',\n            args: {id: templateid}\n        }, {\n            methodname: 'tool_lp_data_for_templates_manage_page',\n            args: {\n                pagecontext: {\n                    contextid: pagecontextid\n                }\n            }\n        }]);\n        requests[1].done(reloadList).fail(notification.exception);\n    };\n\n    /**\n     * Handler for \"Delete learning plan template\" actions.\n     * @method confirmDelete\n     * @param {Event} e\n     */\n    var confirmDelete = function(e) {\n        e.preventDefault();\n\n        var id = $(this).attr('data-templateid');\n        templateid = id;\n        deleteplans = true;\n\n        var requests = ajax.call([{\n            methodname: 'core_competency_read_template',\n            args: {id: templateid}\n        }, {\n            methodname: 'core_competency_template_has_related_data',\n            args: {id: templateid}\n        }]);\n\n        requests[0].done(function(template) {\n            requests[1].done(function(templatehasrelateddata) {\n                if (templatehasrelateddata) {\n                    str.get_strings([\n                        {key: 'deletetemplate', component: 'tool_lp', param: template.shortname},\n                        {key: 'deletetemplatewithplans', component: 'tool_lp'},\n                        {key: 'deleteplans', component: 'tool_lp'},\n                        {key: 'unlinkplanstemplate', component: 'tool_lp'},\n                        {key: 'confirm', component: 'moodle'},\n                        {key: 'cancel', component: 'moodle'}\n                    ]).done(function(strings) {\n                        var actions = [{'text': strings[2], 'value': 'delete'},\n                                       {'text': strings[3], 'value': 'unlink'}];\n                        var actionselector = new Actionselector(\n                                strings[0], // Title.\n                                strings[1], // Message\n                                actions, // Radio button options.\n                                strings[4], // Confirm.\n                                strings[5]); // Cancel.\n                        actionselector.display();\n                        actionselector.on('save', function(e, data) {\n                            if (data.action != 'delete') {\n                                deleteplans = false;\n                            }\n                            doDelete();\n                        });\n                    }).fail(notification.exception);\n                } else {\n                    str.get_strings([\n                        {key: 'confirm', component: 'moodle'},\n                        {key: 'deletetemplate', component: 'tool_lp', param: template.shortname},\n                        {key: 'delete', component: 'moodle'},\n                        {key: 'cancel', component: 'moodle'}\n                    ]).done(function(strings) {\n                        notification.confirm(\n                        strings[0], // Confirm.\n                        strings[1], // Delete learning plan template X?\n                        strings[2], // Delete.\n                        strings[3], // Cancel.\n                        doDelete\n                        );\n                    }).fail(notification.exception);\n                }\n            }).fail(notification.exception);\n        }).fail(notification.exception);\n\n    };\n\n    return /** @alias module:tool_lp/templateactions */ {\n        // Public variables and functions.\n        /**\n         * Expose the event handler for the delete.\n         * @method deleteHandler\n         * @param {Event} e\n         */\n        deleteHandler: confirmDelete,\n\n        /**\n         * Expose the event handler for the duplicate.\n         * @method duplicateHandler\n         * @param {Event} e\n         */\n        duplicateHandler: doDuplicate,\n\n        /**\n         * Initialise the module.\n         * @method init\n         * @param {Number} contextid The context id of the page.\n         */\n        init: function(contextid) {\n            pagecontextid = contextid;\n        }\n    };\n});\n"]}