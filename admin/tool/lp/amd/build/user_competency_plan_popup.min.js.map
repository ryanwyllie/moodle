{"version":3,"sources":["../src/user_competency_plan_popup.js"],"names":["define","$","notification","str","ajax","templates","Dialogue","UserCompetencyPopup","regionSelector","userCompetencySelector","planId","_regionSelector","_userCompetencySelector","_planId","on","_handleClick","bind","prototype","e","preventDefault","tr","target","closest","competencyId","data","userId","requests","call","methodname","args","competencyid","planid","done","_contextLoaded","fail","exception","then","result","eventMethodName","plan","iscompleted","userid","catch","context","self","render","html","js","get_string","title","runTemplateJS","_refresh","_pageContextLoaded","replaceNode"],"mappings":"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","file":"user_competency_plan_popup.min.js","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module to open user competency plan in popup\n *\n * @package    report_competency\n * @copyright  2016 Issam Taboubi <issam.taboubi@umontreal.ca>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/notification', 'core/str', 'core/ajax', 'core/templates', 'tool_lp/dialogue'],\n       function($, notification, str, ajax, templates, Dialogue) {\n\n    /**\n     * UserCompetencyPopup\n     *\n     * @param {String} regionSelector The regionSelector\n     * @param {String} userCompetencySelector The userCompetencySelector\n     * @param {Number} planId The plan ID\n     */\n    var UserCompetencyPopup = function(regionSelector, userCompetencySelector, planId) {\n        this._regionSelector = regionSelector;\n        this._userCompetencySelector = userCompetencySelector;\n        this._planId = planId;\n\n        $(this._regionSelector).on('click', this._userCompetencySelector, this._handleClick.bind(this));\n    };\n\n    /**\n     * Get the data from the closest TR and open the popup.\n     *\n     * @method _handleClick\n     * @param {Event} e\n     */\n    UserCompetencyPopup.prototype._handleClick = function(e) {\n        e.preventDefault();\n        var tr = $(e.target).closest('tr');\n        var competencyId = $(tr).data('competencyid');\n        var userId = $(tr).data('userid');\n        var planId = this._planId;\n\n        var requests = ajax.call([{\n            methodname: 'tool_lp_data_for_user_competency_summary_in_plan',\n            args: {competencyid: competencyId, planid: planId},\n            done: this._contextLoaded.bind(this),\n            fail: notification.exception\n        }]);\n        // Log the user competency viewed in plan event.\n        requests[0].then(function(result) {\n            var eventMethodName = 'core_competency_user_competency_viewed_in_plan';\n            // Trigger core_competency_user_competency_plan_viewed event instead if plan is already completed.\n            if (result.plan.iscompleted) {\n                eventMethodName = 'core_competency_user_competency_plan_viewed';\n            }\n            return ajax.call([{\n                methodname: eventMethodName,\n                args: {competencyid: competencyId, userid: userId, planid: planId}\n            }])[0];\n        }).catch(notification.exception);\n    };\n\n    /**\n     * We loaded the context, now render the template.\n     *\n     * @method _contextLoaded\n     * @param {Object} context\n     */\n    UserCompetencyPopup.prototype._contextLoaded = function(context) {\n        var self = this;\n        templates.render('tool_lp/user_competency_summary_in_plan', context).done(function(html, js) {\n            str.get_string('usercompetencysummary', 'report_competency').done(function(title) {\n                (new Dialogue(title, html, templates.runTemplateJS.bind(templates, js), self._refresh.bind(self), true));\n            }).fail(notification.exception);\n        }).fail(notification.exception);\n    };\n\n    /**\n     * Refresh the page.\n     *\n     * @method _refresh\n     */\n    UserCompetencyPopup.prototype._refresh = function() {\n        var planId = this._planId;\n\n        ajax.call([{\n            methodname: 'tool_lp_data_for_plan_page',\n            args: {planid: planId},\n            done: this._pageContextLoaded.bind(this),\n            fail: notification.exception\n        }]);\n    };\n\n    /**\n     * We loaded the context, now render the template.\n     *\n     * @method _pageContextLoaded\n     * @param {Object} context\n     */\n    UserCompetencyPopup.prototype._pageContextLoaded = function(context) {\n        var self = this;\n        templates.render('tool_lp/plan_page', context).done(function(html, js) {\n            templates.replaceNode(self._regionSelector, html, js);\n        }).fail(notification.exception);\n    };\n\n    /** @type {String} The selector for the region with the user competencies */\n    UserCompetencyPopup.prototype._regionSelector = null;\n    /** @type {String} The selector for the region with a single user competencies */\n    UserCompetencyPopup.prototype._userCompetencySelector = null;\n    /** @type {Number} The plan Id */\n    UserCompetencyPopup.prototype._planId = null;\n\n    return /** @alias module:tool_lp/user_competency_plan_popup */ UserCompetencyPopup;\n\n});\n"]}