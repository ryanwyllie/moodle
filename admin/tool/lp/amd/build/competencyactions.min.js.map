{"version":3,"sources":["../src/competencyactions.js"],"names":["define","$","url","templates","notification","str","ajax","dragdrop","Ariatree","Dialogue","menubar","Picker","Outcomes","RuleConfig","pageContextId","pickerInstance","ruleConfigInstance","relatedTarget","taxonomiesConstants","rulesModules","treeModel","moveSource","moveTarget","selectedCompetencyId","addHandler","parent","data","params","competencyframeworkid","getCompetencyFrameworkId","pagecontextid","parentid","id","relocate","queryparams","param","window","location","relativeUrl","hasRule","get_strings","key","component","shortname","done","strings","confirm","fail","exception","doMove","frameworkid","requests","call","methodname","args","competencyid","search","val","reloadPage","confirmMove","targetComp","getCompetency","sourceComp","confirmMessage","showConfirm","path","indexOf","initMovePopup","popup","body","getContent","treeRoot","find","tree","on","evt","target","selected","show","close","addCompetencyChildren","competencies","i","length","haschildren","children","moveHandler","e","preventDefault","competency","searchtext","when","apply","framework","competenciestree","onecompetency","render","editHandler","context","newhtml","newjs","replaceWith","runTemplateJS","updateSearchHandler","moveUpHandler","moveDownHandler","seeCoursesHandler","courses","html","get_string","linkedcourses","relateCompetenciesHandler","compIds","competencyIds","calls","each","index","value","push","relatedcompetencyid","promises","then","js","updatedRelatedCompetencies","catch","setDisallowedCompetencyIDs","display","ruleConfigHandler","setTargetCompetencyId","ruleConfigSaveHandler","config","update","idnumber","description","descriptionformat","ruletype","ruleoutcome","ruleconfig","promise","result","renderCompetencySummary","doDelete","success","alert","deleteCompetencyHandler","dragStart","originalEvent","dataTransfer","setData","allowDrop","dropEffect","dragEnter","addClass","dragLeave","removeClass","dropOver","getData","deleteRelatedHandler","relatedid","substr","removeRelated","triggerCompetencyViewedEvent","getTaxonomyAtLevel","level","constant","Deferred","resolve","showdeleterelatedaction","showrelatedcompetencies","showrule","NONE","getString","name","modInfo","type","strs","rule","outcome","replaceNodeContents","strAddTaxonomy","strSelectedTaxonomy","selectionChanged","node","btn","actionMenu","selectedTitle","sublevel","closeAll","clone","remove","end","text","hide","getCompetencyLevel","parseTaxonomies","taxonomiesstr","all","split","unshift","init","model","pagectxid","taxonomies","rulesMods","enhance","bind","top"],"mappings":"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","file":"competencyactions.min.js","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Handle selection changes and actions on the competency tree.\n *\n * @module     tool_lp/competencyactions\n * @package    tool_lp\n * @copyright  2015 Damyon Wiese <damyon@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery',\n        'core/url',\n        'core/templates',\n        'core/notification',\n        'core/str',\n        'core/ajax',\n        'tool_lp/dragdrop-reorder',\n        'tool_lp/tree',\n        'tool_lp/dialogue',\n        'tool_lp/menubar',\n        'tool_lp/competencypicker',\n        'tool_lp/competency_outcomes',\n        'tool_lp/competencyruleconfig'],\n       function($, url, templates, notification, str, ajax, dragdrop, Ariatree, Dialogue, menubar, Picker, Outcomes, RuleConfig) {\n\n    // Private variables and functions.\n    /** @var {Object} treeModel - This is an object representing the nodes in the tree. */\n    var treeModel = null;\n    /** @var {Node} moveSource - The start of a drag operation */\n    var moveSource = null;\n    /** @var {Node} moveTarget - The end of a drag operation */\n    var moveTarget = null;\n    /** @var {Number} pageContextId The page context ID. */\n    var pageContextId;\n    /** @type {Object} Picker instance. */\n    var pickerInstance;\n    /** @type {Object} Rule config instance. */\n    var ruleConfigInstance;\n    /** @type {Object} The competency we're picking a relation to. */\n    var relatedTarget;\n    /** @type {Object} Taxonomy constants indexed per level. */\n    var taxonomiesConstants;\n    /** @type {Array} The rules modules. Values are object containing type, namd and amd. */\n    var rulesModules;\n    /** @type {Number} the selected competency ID. */\n    var selectedCompetencyId = null;\n\n    /**\n     * Respond to choosing the \"Add\" menu item for the selected node in the tree.\n     * @method addHandler\n     */\n    var addHandler = function() {\n        var parent = $('[data-region=\"competencyactions\"]').data('competency');\n\n        var params = {\n            competencyframeworkid: treeModel.getCompetencyFrameworkId(),\n            pagecontextid: pageContextId\n        };\n\n        if (parent !== null) {\n            // We are adding at a sub node.\n            params.parentid = parent.id;\n        }\n\n        var relocate = function() {\n            var queryparams = $.param(params);\n            window.location = url.relativeUrl('/admin/tool/lp/editcompetency.php?' + queryparams);\n        };\n\n        if (parent !== null && treeModel.hasRule(parent.id)) {\n            str.get_strings([\n                {key: 'confirm', component: 'moodle'},\n                {key: 'addingcompetencywillresetparentrule', component: 'tool_lp', param: parent.shortname},\n                {key: 'yes', component: 'core'},\n                {key: 'no', component: 'core'}\n            ]).done(function(strings) {\n                notification.confirm(\n                    strings[0],\n                    strings[1],\n                    strings[2],\n                    strings[3],\n                    relocate\n                );\n            }).fail(notification.exception);\n        } else {\n            relocate();\n        }\n    };\n\n    /**\n     * A source and destination has been chosen - so time to complete a move.\n     * @method doMove\n     */\n    var doMove = function() {\n        var frameworkid = $('[data-region=\"filtercompetencies\"]').data('frameworkid');\n        var requests = ajax.call([{\n            methodname: 'core_competency_set_parent_competency',\n            args: {competencyid: moveSource, parentid: moveTarget}\n        }, {\n            methodname: 'tool_lp_data_for_competencies_manage_page',\n            args: {competencyframeworkid: frameworkid,\n                    search: $('[data-region=\"filtercompetencies\"] input').val()}\n        }]);\n        requests[1].done(reloadPage).fail(notification.exception);\n    };\n\n    /**\n     * Confirms a competency move.\n     *\n     * @method confirmMove\n     */\n    var confirmMove = function() {\n        moveTarget = typeof moveTarget === \"undefined\" ? 0 : moveTarget;\n        if (moveTarget == moveSource) {\n            // No move to do.\n            return;\n        }\n\n        var targetComp = treeModel.getCompetency(moveTarget) || {},\n            sourceComp = treeModel.getCompetency(moveSource) || {},\n            confirmMessage = 'movecompetencywillresetrules',\n            showConfirm = false;\n\n        // We shouldn't be moving the competency to the same parent.\n        if (sourceComp.parentid == moveTarget) {\n            return;\n        }\n\n        // If we are moving to a child of self.\n        if (targetComp.path && targetComp.path.indexOf('/' + sourceComp.id + '/') >= 0) {\n            confirmMessage = 'movecompetencytochildofselfwillresetrules';\n\n            // Show a confirmation if self has rules, as they'll disappear.\n            showConfirm = showConfirm || treeModel.hasRule(sourceComp.id);\n        }\n\n        // Show a confirmation if the current parent, or the destination have rules.\n        showConfirm = showConfirm || (treeModel.hasRule(targetComp.id) || treeModel.hasRule(sourceComp.parentid));\n\n        // Show confirm, and/or do the things.\n        if (showConfirm) {\n            str.get_strings([\n                {key: 'confirm', component: 'moodle'},\n                {key: confirmMessage, component: 'tool_lp'},\n                {key: 'yes', component: 'moodle'},\n                {key: 'no', component: 'moodle'}\n            ]).done(function(strings) {\n                notification.confirm(\n                    strings[0], // Confirm.\n                    strings[1], // Delete competency X?\n                    strings[2], // Delete.\n                    strings[3], // Cancel.\n                    doMove\n                );\n            }).fail(notification.exception);\n\n        } else {\n            doMove();\n        }\n    };\n\n    /**\n     * A move competency popup was opened - initialise the aria tree in it.\n     * @method initMovePopup\n     * @param {dialogue} popup The tool_lp/dialogue that was created.\n     */\n    var initMovePopup = function(popup) {\n        var body = $(popup.getContent());\n        var treeRoot = body.find('[data-enhance=movetree]');\n        var tree = new Ariatree(treeRoot, false);\n        tree.on('selectionchanged', function(evt, params) {\n            var target = params.selected;\n            moveTarget = $(target).data('id');\n        });\n        treeRoot.show();\n\n        body.on('click', '[data-action=\"move\"]', function() {\n          popup.close();\n          confirmMove();\n        });\n        body.on('click', '[data-action=\"cancel\"]', function() {\n          popup.close();\n        });\n    };\n\n    /**\n     * Turn a flat list of competencies into a tree structure (recursive).\n     * @method addCompetencyChildren\n     * @param {Object} parent The current parent node in the tree\n     * @param {Object[]} competencies The flat list of competencies\n     */\n    var addCompetencyChildren = function(parent, competencies) {\n        var i;\n\n        for (i = 0; i < competencies.length; i++) {\n            if (competencies[i].parentid == parent.id) {\n                parent.haschildren = true;\n                competencies[i].children = [];\n                competencies[i].haschildren = false;\n                parent.children[parent.children.length] = competencies[i];\n                addCompetencyChildren(competencies[i], competencies);\n            }\n        }\n    };\n\n    /**\n     * A node was chosen and \"Move\" was selected from the menu. Open a popup to select the target.\n     * @param {Event} e\n     * @method moveHandler\n     */\n    var moveHandler = function(e) {\n        e.preventDefault();\n        var competency = $('[data-region=\"competencyactions\"]').data('competency');\n\n        // Remember what we are moving.\n        moveSource = competency.id;\n\n        // Load data for the template.\n        var requests = ajax.call([\n            {\n                methodname: 'core_competency_search_competencies',\n                args: {\n                    competencyframeworkid: competency.competencyframeworkid,\n                    searchtext: ''\n                }\n            }, {\n                methodname: 'core_competency_read_competency_framework',\n                args: {\n                    id: competency.competencyframeworkid\n                }\n            }\n        ]);\n\n        // When all data has arrived, continue.\n        $.when.apply(null, requests).done(function(competencies, framework) {\n\n            // Expand the list of competencies into a tree.\n            var i;\n            var competenciestree = [];\n            for (i = 0; i < competencies.length; i++) {\n                var onecompetency = competencies[i];\n                if (onecompetency.parentid == \"0\") {\n                    onecompetency.children = [];\n                    onecompetency.haschildren = 0;\n                    competenciestree[competenciestree.length] = onecompetency;\n                    addCompetencyChildren(onecompetency, competencies);\n                }\n            }\n\n            str.get_strings([\n                {key: 'movecompetency', component: 'tool_lp', param: competency.shortname},\n                {key: 'move', component: 'tool_lp'},\n                {key: 'cancel', component: 'moodle'}\n            ]).done(function(strings) {\n\n                var context = {\n                    framework: framework,\n                    competencies: competenciestree\n                };\n\n                templates.render('tool_lp/competencies_move_tree', context)\n                   .done(function(tree) {\n                       new Dialogue(\n                           strings[0], // Move competency x.\n                           tree, // The move tree.\n                           initMovePopup\n                       );\n\n                   }).fail(notification.exception);\n\n           }).fail(notification.exception);\n\n        }).fail(notification.exception);\n\n    };\n\n    /**\n     * Edit the selected competency.\n     * @method editHandler\n     */\n    var editHandler = function() {\n        var competency = $('[data-region=\"competencyactions\"]').data('competency');\n\n        var params = {\n            competencyframeworkid: treeModel.getCompetencyFrameworkId(),\n            id: competency.id,\n            parentid: competency.parentid,\n            pagecontextid: pageContextId\n        };\n\n        var queryparams = $.param(params);\n        window.location = url.relativeUrl('/admin/tool/lp/editcompetency.php?' + queryparams);\n    };\n\n    /**\n     * Re-render the page with the latest data.\n     * @param {Object} context\n     * @method reloadPage\n     */\n    var reloadPage = function(context) {\n        templates.render('tool_lp/manage_competencies_page', context)\n            .done(function(newhtml, newjs) {\n                $('[data-region=\"managecompetencies\"]').replaceWith(newhtml);\n                templates.runTemplateJS(newjs);\n            })\n           .fail(notification.exception);\n    };\n\n    /**\n     * Perform a search and render the page with the new search results.\n     * @param {Event} e\n     * @method updateSearchHandler\n     */\n    var updateSearchHandler = function(e) {\n        e.preventDefault();\n\n        var frameworkid = $('[data-region=\"filtercompetencies\"]').data('frameworkid');\n\n        var requests = ajax.call([{\n            methodname: 'tool_lp_data_for_competencies_manage_page',\n            args: {competencyframeworkid: frameworkid,\n                    search: $('[data-region=\"filtercompetencies\"] input').val()}\n        }]);\n        requests[0].done(reloadPage).fail(notification.exception);\n    };\n\n    /**\n     * Move a competency \"up\". This only affects the sort order within the same branch of the tree.\n     * @method moveUpHandler\n     */\n    var moveUpHandler = function() {\n        // We are chaining ajax requests here.\n        var competency = $('[data-region=\"competencyactions\"]').data('competency');\n        var requests = ajax.call([{\n            methodname: 'core_competency_move_up_competency',\n            args: {id: competency.id}\n        }, {\n            methodname: 'tool_lp_data_for_competencies_manage_page',\n            args: {competencyframeworkid: competency.competencyframeworkid,\n                    search: $('[data-region=\"filtercompetencies\"] input').val()}\n        }]);\n        requests[1].done(reloadPage).fail(notification.exception);\n    };\n\n    /**\n     * Move a competency \"down\". This only affects the sort order within the same branch of the tree.\n     * @method moveDownHandler\n     */\n    var moveDownHandler = function() {\n        // We are chaining ajax requests here.\n        var competency = $('[data-region=\"competencyactions\"]').data('competency');\n        var requests = ajax.call([{\n            methodname: 'core_competency_move_down_competency',\n            args: {id: competency.id}\n        }, {\n            methodname: 'tool_lp_data_for_competencies_manage_page',\n            args: {competencyframeworkid: competency.competencyframeworkid,\n                    search: $('[data-region=\"filtercompetencies\"] input').val()}\n        }]);\n        requests[1].done(reloadPage).fail(notification.exception);\n    };\n\n    /**\n     * Open a dialogue to show all the courses using the selected competency.\n     * @method seeCoursesHandler\n     */\n    var seeCoursesHandler = function() {\n        var competency = $('[data-region=\"competencyactions\"]').data('competency');\n\n        var requests = ajax.call([{\n            methodname: 'tool_lp_list_courses_using_competency',\n            args: {id: competency.id}\n        }]);\n\n        requests[0].done(function(courses) {\n            var context = {\n                courses: courses\n            };\n            templates.render('tool_lp/linked_courses_summary', context).done(function(html) {\n                str.get_string('linkedcourses', 'tool_lp').done(function(linkedcourses) {\n                    new Dialogue(\n                        linkedcourses, // Title.\n                        html, // The linked courses.\n                        initMovePopup\n                    );\n                }).fail(notification.exception);\n            }).fail(notification.exception);\n        }).fail(notification.exception);\n    };\n\n    /**\n     * Open a competencies popup to relate competencies.\n     *\n     * @method relateCompetenciesHandler\n     */\n    var relateCompetenciesHandler = function() {\n        relatedTarget = $('[data-region=\"competencyactions\"]').data('competency');\n\n        if (!pickerInstance) {\n            pickerInstance = new Picker(pageContextId, relatedTarget.competencyframeworkid);\n            pickerInstance.on('save', function(e, data) {\n                var compIds = data.competencyIds;\n\n                var calls = [];\n                $.each(compIds, function(index, value) {\n                    calls.push({\n                        methodname: 'core_competency_add_related_competency',\n                        args: {competencyid: value, relatedcompetencyid: relatedTarget.id}\n                    });\n                });\n\n                calls.push({\n                    methodname: 'tool_lp_data_for_related_competencies_section',\n                    args: {competencyid: relatedTarget.id}\n                });\n\n                var promises = ajax.call(calls);\n\n                promises[calls.length - 1].then(function(context) {\n                    return templates.render('tool_lp/related_competencies', context);\n                }).then(function(html, js) {\n                    $('[data-region=\"relatedcompetencies\"]').replaceWith(html);\n                    templates.runTemplateJS(js);\n                    updatedRelatedCompetencies();\n                    return;\n                }).catch(notification.exception);\n            });\n        }\n\n        pickerInstance.setDisallowedCompetencyIDs([relatedTarget.id]);\n        pickerInstance.display();\n    };\n\n    var ruleConfigHandler = function(e) {\n        e.preventDefault();\n        relatedTarget = $('[data-region=\"competencyactions\"]').data('competency');\n        ruleConfigInstance.setTargetCompetencyId(relatedTarget.id);\n        ruleConfigInstance.display();\n    };\n\n    var ruleConfigSaveHandler = function(e, config) {\n        var update = {\n            id: relatedTarget.id,\n            shortname: relatedTarget.shortname,\n            idnumber: relatedTarget.idnumber,\n            description: relatedTarget.description,\n            descriptionformat: relatedTarget.descriptionformat,\n            ruletype: config.ruletype,\n            ruleoutcome: config.ruleoutcome,\n            ruleconfig: config.ruleconfig\n        };\n        var promise = ajax.call([{\n            methodname: 'core_competency_update_competency',\n            args: {competency: update}\n        }]);\n        promise[0].then(function(result) {\n            if (result) {\n                relatedTarget.ruletype = config.ruletype;\n                relatedTarget.ruleoutcome = config.ruleoutcome;\n                relatedTarget.ruleconfig = config.ruleconfig;\n                renderCompetencySummary(relatedTarget);\n            }\n            return;\n        }).catch(notification.exception);\n    };\n\n    /**\n     * Delete a competency.\n     * @method doDelete\n     */\n    var doDelete = function() {\n        // We are chaining ajax requests here.\n        var competency = $('[data-region=\"competencyactions\"]').data('competency');\n        var requests = ajax.call([{\n            methodname: 'core_competency_delete_competency',\n            args: {id: competency.id}\n        }, {\n            methodname: 'tool_lp_data_for_competencies_manage_page',\n            args: {competencyframeworkid: competency.competencyframeworkid,\n                    search: $('[data-region=\"filtercompetencies\"] input').val()}\n        }]);\n        requests[0].done(function(success) {\n            if (success === false) {\n                str.get_strings([\n                {key: 'competencycannotbedeleted', component: 'tool_lp', param: competency.shortname},\n                {key: 'cancel', component: 'moodle'}\n                ]).done(function(strings) {\n                    notification.alert(\n                        null,\n                        strings[0]\n                    );\n                }).fail(notification.exception);\n            }\n        }).fail(notification.exception);\n        requests[1].done(reloadPage).fail(notification.exception);\n    };\n\n    /**\n     * Show a confirm dialogue before deleting a competency.\n     * @method deleteCompetencyHandler\n     */\n    var deleteCompetencyHandler = function() {\n        var competency = $('[data-region=\"competencyactions\"]').data('competency'),\n            confirmMessage = 'deletecompetency';\n\n        if (treeModel.hasRule(competency.parentid)) {\n            confirmMessage = 'deletecompetencyparenthasrule';\n        }\n\n        str.get_strings([\n            {key: 'confirm', component: 'moodle'},\n            {key: confirmMessage, component: 'tool_lp', param: competency.shortname},\n            {key: 'delete', component: 'moodle'},\n            {key: 'cancel', component: 'moodle'}\n        ]).done(function(strings) {\n            notification.confirm(\n                strings[0], // Confirm.\n                strings[1], // Delete competency X?\n                strings[2], // Delete.\n                strings[3], // Cancel.\n                doDelete\n            );\n        }).fail(notification.exception);\n    };\n\n    /**\n     * HTML5 implementation of drag/drop (there is an accesible alternative in the menus).\n     * @method dragStart\n     * @param {Event} e\n     */\n    var dragStart = function(e) {\n        e.originalEvent.dataTransfer.setData('text', $(e.target).parent().data('id'));\n    };\n\n    /**\n     * HTML5 implementation of drag/drop (there is an accesible alternative in the menus).\n     * @method allowDrop\n     * @param {Event} e\n     */\n    var allowDrop = function(e) {\n        e.originalEvent.dataTransfer.dropEffect = 'move';\n        e.preventDefault();\n    };\n\n    /**\n     * HTML5 implementation of drag/drop (there is an accesible alternative in the menus).\n     * @method dragEnter\n     * @param {Event} e\n     */\n    var dragEnter = function(e) {\n        e.preventDefault();\n        $(this).addClass('currentdragtarget');\n    };\n\n    /**\n     * HTML5 implementation of drag/drop (there is an accesible alternative in the menus).\n     * @method dragLeave\n     * @param {Event} e\n     */\n    var dragLeave = function(e) {\n        e.preventDefault();\n        $(this).removeClass('currentdragtarget');\n    };\n\n    /**\n     * HTML5 implementation of drag/drop (there is an accesible alternative in the menus).\n     * @method dropOver\n     * @param {Event} e\n     */\n    var dropOver = function(e) {\n        e.preventDefault();\n        moveSource = e.originalEvent.dataTransfer.getData('text');\n        moveTarget = $(e.target).parent().data('id');\n        $(this).removeClass('currentdragtarget');\n\n        confirmMove();\n    };\n\n    /**\n     * Deletes a related competency without confirmation.\n     *\n     * @param {Event} e The event that triggered the action.\n     * @method deleteRelatedHandler\n     */\n    var deleteRelatedHandler = function(e) {\n        e.preventDefault();\n\n        var relatedid = this.id.substr(11);\n        var competency = $('[data-region=\"competencyactions\"]').data('competency');\n        var removeRelated = ajax.call([\n            {methodname: 'core_competency_remove_related_competency',\n              args: {relatedcompetencyid: relatedid, competencyid: competency.id}},\n            {methodname: 'tool_lp_data_for_related_competencies_section',\n              args: {competencyid: competency.id}}\n        ]);\n\n        removeRelated[1].done(function(context) {\n            templates.render('tool_lp/related_competencies', context).done(function(html) {\n                $('[data-region=\"relatedcompetencies\"]').replaceWith(html);\n                updatedRelatedCompetencies();\n            }).fail(notification.exception);\n        }).fail(notification.exception);\n    };\n\n    /**\n     * Updates the competencies list (with relations) and add listeners.\n     *\n     * @method updatedRelatedCompetencies\n     */\n    var updatedRelatedCompetencies = function() {\n\n        // Listeners to newly loaded related competencies.\n        $('[data-action=\"deleterelation\"]').on('click', deleteRelatedHandler);\n\n    };\n\n    /**\n     * Log the competency viewed event.\n     *\n     * @param  {Object} competency The competency.\n     * @method triggerCompetencyViewedEvent\n     */\n    var triggerCompetencyViewedEvent = function(competency) {\n        if (competency.id !== selectedCompetencyId) {\n            // Set the selected competency id.\n            selectedCompetencyId = competency.id;\n            ajax.call([{\n                    methodname: 'core_competency_competency_viewed',\n                    args: {id: competency.id}\n            }]);\n        }\n    };\n\n    /**\n     * Return the taxonomy constant for a level.\n     *\n     * @param  {Number} level The level.\n     * @return {String}\n     * @function getTaxonomyAtLevel\n     */\n    var getTaxonomyAtLevel = function(level) {\n        var constant = taxonomiesConstants[level];\n        if (!constant) {\n            constant = 'competency';\n        }\n        return constant;\n    };\n\n    /**\n     * Render the competency summary.\n     *\n     * @param  {Object} competency The competency.\n     */\n    var renderCompetencySummary = function(competency) {\n        var promise = $.Deferred().resolve().promise(),\n            context = {};\n\n        context.competency = competency;\n        context.showdeleterelatedaction = true;\n        context.showrelatedcompetencies = true;\n        context.showrule = false;\n\n        if (competency.ruleoutcome != Outcomes.NONE) {\n            // Get the outcome and rule name.\n            promise = Outcomes.getString(competency.ruleoutcome).then(function(str) {\n                var name;\n                $.each(rulesModules, function(index, modInfo) {\n                    if (modInfo.type == competency.ruletype) {\n                        name = modInfo.name;\n                    }\n                });\n                return [str, name];\n            });\n        }\n\n        promise.then(function(strs) {\n            if (typeof strs !== 'undefined') {\n                context.showrule = true;\n                context.rule = {\n                    outcome: strs[0],\n                    type: strs[1]\n                };\n            }\n            return context;\n        }).then(function(context) {\n            return templates.render('tool_lp/competency_summary', context);\n        }).then(function(html) {\n            $('[data-region=\"competencyinfo\"]').html(html);\n            $('[data-action=\"deleterelation\"]').on('click', deleteRelatedHandler);\n            return templates.render('tool_lp/loading', {});\n        }).then(function(html, js) {\n            templates.replaceNodeContents('[data-region=\"relatedcompetencies\"]', html, js);\n            return ajax.call([{\n                methodname: 'tool_lp_data_for_related_competencies_section',\n                args: {competencyid: competency.id}\n            }])[0];\n        }).then(function(context) {\n            return templates.render('tool_lp/related_competencies', context);\n        }).then(function(html, js) {\n            $('[data-region=\"relatedcompetencies\"]').replaceWith(html);\n            templates.runTemplateJS(js);\n            updatedRelatedCompetencies();\n            return;\n        }).catch(notification.exception);\n    };\n\n    /**\n     * Return the string \"Add <taxonomy>\".\n     *\n     * @param  {Number} level The level.\n     * @return {String}\n     * @function strAddTaxonomy\n     */\n    var strAddTaxonomy = function(level) {\n        return str.get_string('taxonomy_add_' + getTaxonomyAtLevel(level), 'tool_lp');\n    };\n\n    /**\n     * Return the string \"Selected <taxonomy>\".\n     *\n     * @param  {Number} level The level.\n     * @return {String}\n     * @function strSelectedTaxonomy\n     */\n    var strSelectedTaxonomy = function(level) {\n        return str.get_string('taxonomy_selected_' + getTaxonomyAtLevel(level), 'tool_lp');\n    };\n\n    /**\n     * Handler when a node in the aria tree is selected.\n     * @method selectionChanged\n     * @param {Event} evt The event that triggered the selection change.\n     * @param {Object} params The parameters for the event. Contains a list of selected nodes.\n     * @return {Boolean}\n     */\n    var selectionChanged = function(evt, params) {\n        var node = params.selected,\n            id = $(node).data('id'),\n            btn = $('[data-region=\"competencyactions\"] [data-action=\"add\"]'),\n            actionMenu = $('[data-region=\"competencyactionsmenu\"]'),\n            selectedTitle = $('[data-region=\"selected-competency\"]'),\n            level = 0,\n            sublevel = 1;\n\n        menubar.closeAll();\n\n        if (typeof id === \"undefined\") {\n            // Assume this is the root of the tree.\n            // Here we are only getting the text from the top of the tree, to do it we clone the tree,\n            // remove all children and then call text on the result.\n            $('[data-region=\"competencyinfo\"]').html(node.clone().children().remove().end().text());\n            $('[data-region=\"competencyactions\"]').data('competency', null);\n            actionMenu.hide();\n\n        } else {\n            var competency = treeModel.getCompetency(id);\n\n            level = treeModel.getCompetencyLevel(id);\n            sublevel = level + 1;\n\n            actionMenu.show();\n            $('[data-region=\"competencyactions\"]').data('competency', competency);\n            renderCompetencySummary(competency);\n            // Log Competency viewed event.\n            triggerCompetencyViewedEvent(competency);\n        }\n        strSelectedTaxonomy(level).then(function(str) {\n            selectedTitle.text(str);\n            return;\n        }).catch(notification.exception);\n\n        strAddTaxonomy(sublevel).then(function(str) {\n            btn.show()\n                .find('[data-region=\"term\"]')\n                .text(str);\n            return;\n        }).catch(notification.exception);\n\n        // We handled this event so consume it.\n        evt.preventDefault();\n        return false;\n    };\n\n    /**\n     * Return the string \"Selected <taxonomy>\".\n     *\n     * @function parseTaxonomies\n     * @param  {String} taxonomiesstr Comma separated list of taxonomies.\n     * @return {Array} of level => taxonomystr\n     */\n    var parseTaxonomies = function(taxonomiesstr) {\n        var all = taxonomiesstr.split(',');\n        all.unshift(\"\");\n        delete all[0];\n\n        // Note we don't need to fill holes, because other functions check for empty anyway.\n        return all;\n    };\n\n    return {\n        /**\n         * Initialise this page (attach event handlers etc).\n         *\n         * @method init\n         * @param {Object} model The tree model provides some useful functions for loading and searching competencies.\n         * @param {Number} pagectxid The page context ID.\n         * @param {Object} taxonomies Constants indexed by level.\n         * @param {Object} rulesMods The modules of the rules.\n         */\n        init: function(model, pagectxid, taxonomies, rulesMods) {\n            treeModel = model;\n            pageContextId = pagectxid;\n            taxonomiesConstants = parseTaxonomies(taxonomies);\n            rulesModules = rulesMods;\n\n            $('[data-region=\"competencyactions\"] [data-action=\"add\"]').on('click', addHandler);\n\n            menubar.enhance('.competencyactionsmenu', {\n                '[data-action=\"edit\"]': editHandler,\n                '[data-action=\"delete\"]': deleteCompetencyHandler,\n                '[data-action=\"move\"]': moveHandler,\n                '[data-action=\"moveup\"]': moveUpHandler,\n                '[data-action=\"movedown\"]': moveDownHandler,\n                '[data-action=\"linkedcourses\"]': seeCoursesHandler,\n                '[data-action=\"relatedcompetencies\"]': relateCompetenciesHandler.bind(this),\n                '[data-action=\"competencyrules\"]': ruleConfigHandler.bind(this)\n            });\n            $('[data-region=\"competencyactionsmenu\"]').hide();\n            $('[data-region=\"competencyactions\"] [data-action=\"add\"]').hide();\n\n            $('[data-region=\"filtercompetencies\"]').on('submit', updateSearchHandler);\n            // Simple html5 drag drop because we already added an accessible alternative.\n            var top = $('[data-region=\"managecompetencies\"] [data-enhance=\"tree\"]');\n            top.on('dragstart', 'li>span', dragStart)\n                .on('dragover', 'li>span', allowDrop)\n                .on('dragenter', 'li>span', dragEnter)\n                .on('dragleave', 'li>span', dragLeave)\n                .on('drop', 'li>span', dropOver);\n\n            model.on('selectionchanged', selectionChanged);\n\n            // Prepare the configuration tool.\n            ruleConfigInstance = new RuleConfig(treeModel, rulesModules);\n            ruleConfigInstance.on('save', ruleConfigSaveHandler.bind(this));\n        }\n    };\n});\n"]}