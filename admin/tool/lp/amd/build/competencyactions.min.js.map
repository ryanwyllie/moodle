{"version":3,"sources":["../src/competencyactions.js"],"names":["define","$","url","templates","notification","str","ajax","dragdrop","Ariatree","Dialogue","menubar","Picker","Outcomes","RuleConfig","treeModel","moveSource","moveTarget","pageContextId","pickerInstance","ruleConfigInstance","relatedTarget","taxonomiesConstants","rulesModules","selectedCompetencyId","addHandler","parent","data","params","competencyframeworkid","getCompetencyFrameworkId","pagecontextid","parentid","id","relocate","queryparams","param","window","location","relativeUrl","hasRule","get_strings","key","component","shortname","done","strings","confirm","fail","exception","doMove","frameworkid","requests","call","methodname","args","competencyid","search","val","reloadPage","confirmMove","targetComp","getCompetency","sourceComp","confirmMessage","showConfirm","path","indexOf","initMovePopup","popup","body","getContent","treeRoot","find","tree","on","evt","target","selected","show","close","addCompetencyChildren","competencies","i","length","haschildren","children","moveHandler","e","preventDefault","competency","searchtext","when","apply","framework","competenciestree","onecompetency","render","editHandler","context","newhtml","newjs","replaceWith","runTemplateJS","updateSearchHandler","moveUpHandler","moveDownHandler","seeCoursesHandler","courses","html","get_string","linkedcourses","relateCompetenciesHandler","compIds","competencyIds","calls","each","index","value","push","relatedcompetencyid","promises","then","js","updatedRelatedCompetencies","catch","setDisallowedCompetencyIDs","display","ruleConfigHandler","setTargetCompetencyId","ruleConfigSaveHandler","config","update","idnumber","description","descriptionformat","ruletype","ruleoutcome","ruleconfig","promise","result","renderCompetencySummary","doDelete","success","alert","deleteCompetencyHandler","dragStart","originalEvent","dataTransfer","setData","allowDrop","dropEffect","dragEnter","addClass","dragLeave","removeClass","dropOver","getData","deleteRelatedHandler","relatedid","substr","removeRelated","triggerCompetencyViewedEvent","getTaxonomyAtLevel","level","constant","Deferred","resolve","showdeleterelatedaction","showrelatedcompetencies","showrule","pluginbaseurl","NONE","getString","name","modInfo","type","strs","rule","outcome","replaceNodeContents","strAddTaxonomy","strSelectedTaxonomy","selectionChanged","node","btn","actionMenu","selectedTitle","sublevel","closeAll","clone","remove","end","text","hide","getCompetencyLevel","parseTaxonomies","taxonomiesstr","all","split","unshift","init","model","pagectxid","taxonomies","rulesMods","enhance","bind","top"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Handle selection changes and actions on the competency tree.\n *\n * @module     tool_lp/competencyactions\n * @package    tool_lp\n * @copyright  2015 Damyon Wiese <damyon@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery',\n        'core/url',\n        'core/templates',\n        'core/notification',\n        'core/str',\n        'core/ajax',\n        'tool_lp/dragdrop-reorder',\n        'tool_lp/tree',\n        'tool_lp/dialogue',\n        'tool_lp/menubar',\n        'tool_lp/competencypicker',\n        'tool_lp/competency_outcomes',\n        'tool_lp/competencyruleconfig'],\n       function($, url, templates, notification, str, ajax, dragdrop, Ariatree, Dialogue, menubar, Picker, Outcomes, RuleConfig) {\n\n    // Private variables and functions.\n    /** @var {Object} treeModel - This is an object representing the nodes in the tree. */\n    var treeModel = null;\n    /** @var {Node} moveSource - The start of a drag operation */\n    var moveSource = null;\n    /** @var {Node} moveTarget - The end of a drag operation */\n    var moveTarget = null;\n    /** @var {Number} pageContextId The page context ID. */\n    var pageContextId;\n    /** @type {Object} Picker instance. */\n    var pickerInstance;\n    /** @type {Object} Rule config instance. */\n    var ruleConfigInstance;\n    /** @type {Object} The competency we're picking a relation to. */\n    var relatedTarget;\n    /** @type {Object} Taxonomy constants indexed per level. */\n    var taxonomiesConstants;\n    /** @type {Array} The rules modules. Values are object containing type, namd and amd. */\n    var rulesModules;\n    /** @type {Number} the selected competency ID. */\n    var selectedCompetencyId = null;\n\n    /**\n     * Respond to choosing the \"Add\" menu item for the selected node in the tree.\n     * @method addHandler\n     */\n    var addHandler = function() {\n        var parent = $('[data-region=\"competencyactions\"]').data('competency');\n\n        var params = {\n            competencyframeworkid: treeModel.getCompetencyFrameworkId(),\n            pagecontextid: pageContextId\n        };\n\n        if (parent !== null) {\n            // We are adding at a sub node.\n            params.parentid = parent.id;\n        }\n\n        var relocate = function() {\n            var queryparams = $.param(params);\n            window.location = url.relativeUrl('/admin/tool/lp/editcompetency.php?' + queryparams);\n        };\n\n        if (parent !== null && treeModel.hasRule(parent.id)) {\n            str.get_strings([\n                {key: 'confirm', component: 'moodle'},\n                {key: 'addingcompetencywillresetparentrule', component: 'tool_lp', param: parent.shortname},\n                {key: 'yes', component: 'core'},\n                {key: 'no', component: 'core'}\n            ]).done(function(strings) {\n                notification.confirm(\n                    strings[0],\n                    strings[1],\n                    strings[2],\n                    strings[3],\n                    relocate\n                );\n            }).fail(notification.exception);\n        } else {\n            relocate();\n        }\n    };\n\n    /**\n     * A source and destination has been chosen - so time to complete a move.\n     * @method doMove\n     */\n    var doMove = function() {\n        var frameworkid = $('[data-region=\"filtercompetencies\"]').data('frameworkid');\n        var requests = ajax.call([{\n            methodname: 'core_competency_set_parent_competency',\n            args: {competencyid: moveSource, parentid: moveTarget}\n        }, {\n            methodname: 'tool_lp_data_for_competencies_manage_page',\n            args: {competencyframeworkid: frameworkid,\n                    search: $('[data-region=\"filtercompetencies\"] input').val()}\n        }]);\n        requests[1].done(reloadPage).fail(notification.exception);\n    };\n\n    /**\n     * Confirms a competency move.\n     *\n     * @method confirmMove\n     */\n    var confirmMove = function() {\n        moveTarget = typeof moveTarget === \"undefined\" ? 0 : moveTarget;\n        if (moveTarget == moveSource) {\n            // No move to do.\n            return;\n        }\n\n        var targetComp = treeModel.getCompetency(moveTarget) || {},\n            sourceComp = treeModel.getCompetency(moveSource) || {},\n            confirmMessage = 'movecompetencywillresetrules',\n            showConfirm = false;\n\n        // We shouldn't be moving the competency to the same parent.\n        if (sourceComp.parentid == moveTarget) {\n            return;\n        }\n\n        // If we are moving to a child of self.\n        if (targetComp.path && targetComp.path.indexOf('/' + sourceComp.id + '/') >= 0) {\n            confirmMessage = 'movecompetencytochildofselfwillresetrules';\n\n            // Show a confirmation if self has rules, as they'll disappear.\n            showConfirm = showConfirm || treeModel.hasRule(sourceComp.id);\n        }\n\n        // Show a confirmation if the current parent, or the destination have rules.\n        showConfirm = showConfirm || (treeModel.hasRule(targetComp.id) || treeModel.hasRule(sourceComp.parentid));\n\n        // Show confirm, and/or do the things.\n        if (showConfirm) {\n            str.get_strings([\n                {key: 'confirm', component: 'moodle'},\n                {key: confirmMessage, component: 'tool_lp'},\n                {key: 'yes', component: 'moodle'},\n                {key: 'no', component: 'moodle'}\n            ]).done(function(strings) {\n                notification.confirm(\n                    strings[0], // Confirm.\n                    strings[1], // Delete competency X?\n                    strings[2], // Delete.\n                    strings[3], // Cancel.\n                    doMove\n                );\n            }).fail(notification.exception);\n\n        } else {\n            doMove();\n        }\n    };\n\n    /**\n     * A move competency popup was opened - initialise the aria tree in it.\n     * @method initMovePopup\n     * @param {dialogue} popup The tool_lp/dialogue that was created.\n     */\n    var initMovePopup = function(popup) {\n        var body = $(popup.getContent());\n        var treeRoot = body.find('[data-enhance=movetree]');\n        var tree = new Ariatree(treeRoot, false);\n        tree.on('selectionchanged', function(evt, params) {\n            var target = params.selected;\n            moveTarget = $(target).data('id');\n        });\n        treeRoot.show();\n\n        body.on('click', '[data-action=\"move\"]', function() {\n          popup.close();\n          confirmMove();\n        });\n        body.on('click', '[data-action=\"cancel\"]', function() {\n          popup.close();\n        });\n    };\n\n    /**\n     * Turn a flat list of competencies into a tree structure (recursive).\n     * @method addCompetencyChildren\n     * @param {Object} parent The current parent node in the tree\n     * @param {Object[]} competencies The flat list of competencies\n     */\n    var addCompetencyChildren = function(parent, competencies) {\n        var i;\n\n        for (i = 0; i < competencies.length; i++) {\n            if (competencies[i].parentid == parent.id) {\n                parent.haschildren = true;\n                competencies[i].children = [];\n                competencies[i].haschildren = false;\n                parent.children[parent.children.length] = competencies[i];\n                addCompetencyChildren(competencies[i], competencies);\n            }\n        }\n    };\n\n    /**\n     * A node was chosen and \"Move\" was selected from the menu. Open a popup to select the target.\n     * @param {Event} e\n     * @method moveHandler\n     */\n    var moveHandler = function(e) {\n        e.preventDefault();\n        var competency = $('[data-region=\"competencyactions\"]').data('competency');\n\n        // Remember what we are moving.\n        moveSource = competency.id;\n\n        // Load data for the template.\n        var requests = ajax.call([\n            {\n                methodname: 'core_competency_search_competencies',\n                args: {\n                    competencyframeworkid: competency.competencyframeworkid,\n                    searchtext: ''\n                }\n            }, {\n                methodname: 'core_competency_read_competency_framework',\n                args: {\n                    id: competency.competencyframeworkid\n                }\n            }\n        ]);\n\n        // When all data has arrived, continue.\n        $.when.apply(null, requests).done(function(competencies, framework) {\n\n            // Expand the list of competencies into a tree.\n            var i;\n            var competenciestree = [];\n            for (i = 0; i < competencies.length; i++) {\n                var onecompetency = competencies[i];\n                if (onecompetency.parentid == \"0\") {\n                    onecompetency.children = [];\n                    onecompetency.haschildren = 0;\n                    competenciestree[competenciestree.length] = onecompetency;\n                    addCompetencyChildren(onecompetency, competencies);\n                }\n            }\n\n            str.get_strings([\n                {key: 'movecompetency', component: 'tool_lp', param: competency.shortname},\n                {key: 'move', component: 'tool_lp'},\n                {key: 'cancel', component: 'moodle'}\n            ]).done(function(strings) {\n\n                var context = {\n                    framework: framework,\n                    competencies: competenciestree\n                };\n\n                templates.render('tool_lp/competencies_move_tree', context)\n                   .done(function(tree) {\n                       new Dialogue(\n                           strings[0], // Move competency x.\n                           tree, // The move tree.\n                           initMovePopup\n                       );\n\n                   }).fail(notification.exception);\n\n           }).fail(notification.exception);\n\n        }).fail(notification.exception);\n\n    };\n\n    /**\n     * Edit the selected competency.\n     * @method editHandler\n     */\n    var editHandler = function() {\n        var competency = $('[data-region=\"competencyactions\"]').data('competency');\n\n        var params = {\n            competencyframeworkid: treeModel.getCompetencyFrameworkId(),\n            id: competency.id,\n            parentid: competency.parentid,\n            pagecontextid: pageContextId\n        };\n\n        var queryparams = $.param(params);\n        window.location = url.relativeUrl('/admin/tool/lp/editcompetency.php?' + queryparams);\n    };\n\n    /**\n     * Re-render the page with the latest data.\n     * @param {Object} context\n     * @method reloadPage\n     */\n    var reloadPage = function(context) {\n        templates.render('tool_lp/manage_competencies_page', context)\n            .done(function(newhtml, newjs) {\n                $('[data-region=\"managecompetencies\"]').replaceWith(newhtml);\n                templates.runTemplateJS(newjs);\n            })\n           .fail(notification.exception);\n    };\n\n    /**\n     * Perform a search and render the page with the new search results.\n     * @param {Event} e\n     * @method updateSearchHandler\n     */\n    var updateSearchHandler = function(e) {\n        e.preventDefault();\n\n        var frameworkid = $('[data-region=\"filtercompetencies\"]').data('frameworkid');\n\n        var requests = ajax.call([{\n            methodname: 'tool_lp_data_for_competencies_manage_page',\n            args: {competencyframeworkid: frameworkid,\n                    search: $('[data-region=\"filtercompetencies\"] input').val()}\n        }]);\n        requests[0].done(reloadPage).fail(notification.exception);\n    };\n\n    /**\n     * Move a competency \"up\". This only affects the sort order within the same branch of the tree.\n     * @method moveUpHandler\n     */\n    var moveUpHandler = function() {\n        // We are chaining ajax requests here.\n        var competency = $('[data-region=\"competencyactions\"]').data('competency');\n        var requests = ajax.call([{\n            methodname: 'core_competency_move_up_competency',\n            args: {id: competency.id}\n        }, {\n            methodname: 'tool_lp_data_for_competencies_manage_page',\n            args: {competencyframeworkid: competency.competencyframeworkid,\n                    search: $('[data-region=\"filtercompetencies\"] input').val()}\n        }]);\n        requests[1].done(reloadPage).fail(notification.exception);\n    };\n\n    /**\n     * Move a competency \"down\". This only affects the sort order within the same branch of the tree.\n     * @method moveDownHandler\n     */\n    var moveDownHandler = function() {\n        // We are chaining ajax requests here.\n        var competency = $('[data-region=\"competencyactions\"]').data('competency');\n        var requests = ajax.call([{\n            methodname: 'core_competency_move_down_competency',\n            args: {id: competency.id}\n        }, {\n            methodname: 'tool_lp_data_for_competencies_manage_page',\n            args: {competencyframeworkid: competency.competencyframeworkid,\n                    search: $('[data-region=\"filtercompetencies\"] input').val()}\n        }]);\n        requests[1].done(reloadPage).fail(notification.exception);\n    };\n\n    /**\n     * Open a dialogue to show all the courses using the selected competency.\n     * @method seeCoursesHandler\n     */\n    var seeCoursesHandler = function() {\n        var competency = $('[data-region=\"competencyactions\"]').data('competency');\n\n        var requests = ajax.call([{\n            methodname: 'tool_lp_list_courses_using_competency',\n            args: {id: competency.id}\n        }]);\n\n        requests[0].done(function(courses) {\n            var context = {\n                courses: courses\n            };\n            templates.render('tool_lp/linked_courses_summary', context).done(function(html) {\n                str.get_string('linkedcourses', 'tool_lp').done(function(linkedcourses) {\n                    new Dialogue(\n                        linkedcourses, // Title.\n                        html, // The linked courses.\n                        initMovePopup\n                    );\n                }).fail(notification.exception);\n            }).fail(notification.exception);\n        }).fail(notification.exception);\n    };\n\n    /**\n     * Open a competencies popup to relate competencies.\n     *\n     * @method relateCompetenciesHandler\n     */\n    var relateCompetenciesHandler = function() {\n        relatedTarget = $('[data-region=\"competencyactions\"]').data('competency');\n\n        if (!pickerInstance) {\n            pickerInstance = new Picker(pageContextId, relatedTarget.competencyframeworkid);\n            pickerInstance.on('save', function(e, data) {\n                var compIds = data.competencyIds;\n\n                var calls = [];\n                $.each(compIds, function(index, value) {\n                    calls.push({\n                        methodname: 'core_competency_add_related_competency',\n                        args: {competencyid: value, relatedcompetencyid: relatedTarget.id}\n                    });\n                });\n\n                calls.push({\n                    methodname: 'tool_lp_data_for_related_competencies_section',\n                    args: {competencyid: relatedTarget.id}\n                });\n\n                var promises = ajax.call(calls);\n\n                promises[calls.length - 1].then(function(context) {\n                    return templates.render('tool_lp/related_competencies', context);\n                }).then(function(html, js) {\n                    $('[data-region=\"relatedcompetencies\"]').replaceWith(html);\n                    templates.runTemplateJS(js);\n                    updatedRelatedCompetencies();\n                    return;\n                }).catch(notification.exception);\n            });\n        }\n\n        pickerInstance.setDisallowedCompetencyIDs([relatedTarget.id]);\n        pickerInstance.display();\n    };\n\n    var ruleConfigHandler = function(e) {\n        e.preventDefault();\n        relatedTarget = $('[data-region=\"competencyactions\"]').data('competency');\n        ruleConfigInstance.setTargetCompetencyId(relatedTarget.id);\n        ruleConfigInstance.display();\n    };\n\n    var ruleConfigSaveHandler = function(e, config) {\n        var update = {\n            id: relatedTarget.id,\n            shortname: relatedTarget.shortname,\n            idnumber: relatedTarget.idnumber,\n            description: relatedTarget.description,\n            descriptionformat: relatedTarget.descriptionformat,\n            ruletype: config.ruletype,\n            ruleoutcome: config.ruleoutcome,\n            ruleconfig: config.ruleconfig\n        };\n        var promise = ajax.call([{\n            methodname: 'core_competency_update_competency',\n            args: {competency: update}\n        }]);\n        promise[0].then(function(result) {\n            if (result) {\n                relatedTarget.ruletype = config.ruletype;\n                relatedTarget.ruleoutcome = config.ruleoutcome;\n                relatedTarget.ruleconfig = config.ruleconfig;\n                renderCompetencySummary(relatedTarget);\n            }\n            return;\n        }).catch(notification.exception);\n    };\n\n    /**\n     * Delete a competency.\n     * @method doDelete\n     */\n    var doDelete = function() {\n        // We are chaining ajax requests here.\n        var competency = $('[data-region=\"competencyactions\"]').data('competency');\n        var requests = ajax.call([{\n            methodname: 'core_competency_delete_competency',\n            args: {id: competency.id}\n        }, {\n            methodname: 'tool_lp_data_for_competencies_manage_page',\n            args: {competencyframeworkid: competency.competencyframeworkid,\n                    search: $('[data-region=\"filtercompetencies\"] input').val()}\n        }]);\n        requests[0].done(function(success) {\n            if (success === false) {\n                str.get_strings([\n                {key: 'competencycannotbedeleted', component: 'tool_lp', param: competency.shortname},\n                {key: 'cancel', component: 'moodle'}\n                ]).done(function(strings) {\n                    notification.alert(\n                        null,\n                        strings[0]\n                    );\n                }).fail(notification.exception);\n            }\n        }).fail(notification.exception);\n        requests[1].done(reloadPage).fail(notification.exception);\n    };\n\n    /**\n     * Show a confirm dialogue before deleting a competency.\n     * @method deleteCompetencyHandler\n     */\n    var deleteCompetencyHandler = function() {\n        var competency = $('[data-region=\"competencyactions\"]').data('competency'),\n            confirmMessage = 'deletecompetency';\n\n        if (treeModel.hasRule(competency.parentid)) {\n            confirmMessage = 'deletecompetencyparenthasrule';\n        }\n\n        str.get_strings([\n            {key: 'confirm', component: 'moodle'},\n            {key: confirmMessage, component: 'tool_lp', param: competency.shortname},\n            {key: 'delete', component: 'moodle'},\n            {key: 'cancel', component: 'moodle'}\n        ]).done(function(strings) {\n            notification.confirm(\n                strings[0], // Confirm.\n                strings[1], // Delete competency X?\n                strings[2], // Delete.\n                strings[3], // Cancel.\n                doDelete\n            );\n        }).fail(notification.exception);\n    };\n\n    /**\n     * HTML5 implementation of drag/drop (there is an accesible alternative in the menus).\n     * @method dragStart\n     * @param {Event} e\n     */\n    var dragStart = function(e) {\n        e.originalEvent.dataTransfer.setData('text', $(e.target).parent().data('id'));\n    };\n\n    /**\n     * HTML5 implementation of drag/drop (there is an accesible alternative in the menus).\n     * @method allowDrop\n     * @param {Event} e\n     */\n    var allowDrop = function(e) {\n        e.originalEvent.dataTransfer.dropEffect = 'move';\n        e.preventDefault();\n    };\n\n    /**\n     * HTML5 implementation of drag/drop (there is an accesible alternative in the menus).\n     * @method dragEnter\n     * @param {Event} e\n     */\n    var dragEnter = function(e) {\n        e.preventDefault();\n        $(this).addClass('currentdragtarget');\n    };\n\n    /**\n     * HTML5 implementation of drag/drop (there is an accesible alternative in the menus).\n     * @method dragLeave\n     * @param {Event} e\n     */\n    var dragLeave = function(e) {\n        e.preventDefault();\n        $(this).removeClass('currentdragtarget');\n    };\n\n    /**\n     * HTML5 implementation of drag/drop (there is an accesible alternative in the menus).\n     * @method dropOver\n     * @param {Event} e\n     */\n    var dropOver = function(e) {\n        e.preventDefault();\n        moveSource = e.originalEvent.dataTransfer.getData('text');\n        moveTarget = $(e.target).parent().data('id');\n        $(this).removeClass('currentdragtarget');\n\n        confirmMove();\n    };\n\n    /**\n     * Deletes a related competency without confirmation.\n     *\n     * @param {Event} e The event that triggered the action.\n     * @method deleteRelatedHandler\n     */\n    var deleteRelatedHandler = function(e) {\n        e.preventDefault();\n\n        var relatedid = this.id.substr(11);\n        var competency = $('[data-region=\"competencyactions\"]').data('competency');\n        var removeRelated = ajax.call([\n            {methodname: 'core_competency_remove_related_competency',\n              args: {relatedcompetencyid: relatedid, competencyid: competency.id}},\n            {methodname: 'tool_lp_data_for_related_competencies_section',\n              args: {competencyid: competency.id}}\n        ]);\n\n        removeRelated[1].done(function(context) {\n            templates.render('tool_lp/related_competencies', context).done(function(html) {\n                $('[data-region=\"relatedcompetencies\"]').replaceWith(html);\n                updatedRelatedCompetencies();\n            }).fail(notification.exception);\n        }).fail(notification.exception);\n    };\n\n    /**\n     * Updates the competencies list (with relations) and add listeners.\n     *\n     * @method updatedRelatedCompetencies\n     */\n    var updatedRelatedCompetencies = function() {\n\n        // Listeners to newly loaded related competencies.\n        $('[data-action=\"deleterelation\"]').on('click', deleteRelatedHandler);\n\n    };\n\n    /**\n     * Log the competency viewed event.\n     *\n     * @param  {Object} competency The competency.\n     * @method triggerCompetencyViewedEvent\n     */\n    var triggerCompetencyViewedEvent = function(competency) {\n        if (competency.id !== selectedCompetencyId) {\n            // Set the selected competency id.\n            selectedCompetencyId = competency.id;\n            ajax.call([{\n                    methodname: 'core_competency_competency_viewed',\n                    args: {id: competency.id}\n            }]);\n        }\n    };\n\n    /**\n     * Return the taxonomy constant for a level.\n     *\n     * @param  {Number} level The level.\n     * @return {String}\n     * @function getTaxonomyAtLevel\n     */\n    var getTaxonomyAtLevel = function(level) {\n        var constant = taxonomiesConstants[level];\n        if (!constant) {\n            constant = 'competency';\n        }\n        return constant;\n    };\n\n    /**\n     * Render the competency summary.\n     *\n     * @param  {Object} competency The competency.\n     */\n    var renderCompetencySummary = function(competency) {\n        var promise = $.Deferred().resolve().promise(),\n            context = {};\n\n        context.competency = competency;\n        context.showdeleterelatedaction = true;\n        context.showrelatedcompetencies = true;\n        context.showrule = false;\n        context.pluginbaseurl = url.relativeUrl('/admin/tool/lp');\n\n        if (competency.ruleoutcome != Outcomes.NONE) {\n            // Get the outcome and rule name.\n            promise = Outcomes.getString(competency.ruleoutcome).then(function(str) {\n                var name;\n                $.each(rulesModules, function(index, modInfo) {\n                    if (modInfo.type == competency.ruletype) {\n                        name = modInfo.name;\n                    }\n                });\n                return [str, name];\n            });\n        }\n\n        promise.then(function(strs) {\n            if (typeof strs !== 'undefined') {\n                context.showrule = true;\n                context.rule = {\n                    outcome: strs[0],\n                    type: strs[1]\n                };\n            }\n            return context;\n        }).then(function(context) {\n            return templates.render('tool_lp/competency_summary', context);\n        }).then(function(html) {\n            $('[data-region=\"competencyinfo\"]').html(html);\n            $('[data-action=\"deleterelation\"]').on('click', deleteRelatedHandler);\n            return templates.render('tool_lp/loading', {});\n        }).then(function(html, js) {\n            templates.replaceNodeContents('[data-region=\"relatedcompetencies\"]', html, js);\n            return ajax.call([{\n                methodname: 'tool_lp_data_for_related_competencies_section',\n                args: {competencyid: competency.id}\n            }])[0];\n        }).then(function(context) {\n            return templates.render('tool_lp/related_competencies', context);\n        }).then(function(html, js) {\n            $('[data-region=\"relatedcompetencies\"]').replaceWith(html);\n            templates.runTemplateJS(js);\n            updatedRelatedCompetencies();\n            return;\n        }).catch(notification.exception);\n    };\n\n    /**\n     * Return the string \"Add <taxonomy>\".\n     *\n     * @param  {Number} level The level.\n     * @return {String}\n     * @function strAddTaxonomy\n     */\n    var strAddTaxonomy = function(level) {\n        return str.get_string('taxonomy_add_' + getTaxonomyAtLevel(level), 'tool_lp');\n    };\n\n    /**\n     * Return the string \"Selected <taxonomy>\".\n     *\n     * @param  {Number} level The level.\n     * @return {String}\n     * @function strSelectedTaxonomy\n     */\n    var strSelectedTaxonomy = function(level) {\n        return str.get_string('taxonomy_selected_' + getTaxonomyAtLevel(level), 'tool_lp');\n    };\n\n    /**\n     * Handler when a node in the aria tree is selected.\n     * @method selectionChanged\n     * @param {Event} evt The event that triggered the selection change.\n     * @param {Object} params The parameters for the event. Contains a list of selected nodes.\n     * @return {Boolean}\n     */\n    var selectionChanged = function(evt, params) {\n        var node = params.selected,\n            id = $(node).data('id'),\n            btn = $('[data-region=\"competencyactions\"] [data-action=\"add\"]'),\n            actionMenu = $('[data-region=\"competencyactionsmenu\"]'),\n            selectedTitle = $('[data-region=\"selected-competency\"]'),\n            level = 0,\n            sublevel = 1;\n\n        menubar.closeAll();\n\n        if (typeof id === \"undefined\") {\n            // Assume this is the root of the tree.\n            // Here we are only getting the text from the top of the tree, to do it we clone the tree,\n            // remove all children and then call text on the result.\n            $('[data-region=\"competencyinfo\"]').html(node.clone().children().remove().end().text());\n            $('[data-region=\"competencyactions\"]').data('competency', null);\n            actionMenu.hide();\n\n        } else {\n            var competency = treeModel.getCompetency(id);\n\n            level = treeModel.getCompetencyLevel(id);\n            sublevel = level + 1;\n\n            actionMenu.show();\n            $('[data-region=\"competencyactions\"]').data('competency', competency);\n            renderCompetencySummary(competency);\n            // Log Competency viewed event.\n            triggerCompetencyViewedEvent(competency);\n        }\n        strSelectedTaxonomy(level).then(function(str) {\n            selectedTitle.text(str);\n            return;\n        }).catch(notification.exception);\n\n        strAddTaxonomy(sublevel).then(function(str) {\n            btn.show()\n                .find('[data-region=\"term\"]')\n                .text(str);\n            return;\n        }).catch(notification.exception);\n\n        // We handled this event so consume it.\n        evt.preventDefault();\n        return false;\n    };\n\n    /**\n     * Return the string \"Selected <taxonomy>\".\n     *\n     * @function parseTaxonomies\n     * @param  {String} taxonomiesstr Comma separated list of taxonomies.\n     * @return {Array} of level => taxonomystr\n     */\n    var parseTaxonomies = function(taxonomiesstr) {\n        var all = taxonomiesstr.split(',');\n        all.unshift(\"\");\n        delete all[0];\n\n        // Note we don't need to fill holes, because other functions check for empty anyway.\n        return all;\n    };\n\n    return {\n        /**\n         * Initialise this page (attach event handlers etc).\n         *\n         * @method init\n         * @param {Object} model The tree model provides some useful functions for loading and searching competencies.\n         * @param {Number} pagectxid The page context ID.\n         * @param {Object} taxonomies Constants indexed by level.\n         * @param {Object} rulesMods The modules of the rules.\n         */\n        init: function(model, pagectxid, taxonomies, rulesMods) {\n            treeModel = model;\n            pageContextId = pagectxid;\n            taxonomiesConstants = parseTaxonomies(taxonomies);\n            rulesModules = rulesMods;\n\n            $('[data-region=\"competencyactions\"] [data-action=\"add\"]').on('click', addHandler);\n\n            menubar.enhance('.competencyactionsmenu', {\n                '[data-action=\"edit\"]': editHandler,\n                '[data-action=\"delete\"]': deleteCompetencyHandler,\n                '[data-action=\"move\"]': moveHandler,\n                '[data-action=\"moveup\"]': moveUpHandler,\n                '[data-action=\"movedown\"]': moveDownHandler,\n                '[data-action=\"linkedcourses\"]': seeCoursesHandler,\n                '[data-action=\"relatedcompetencies\"]': relateCompetenciesHandler.bind(this),\n                '[data-action=\"competencyrules\"]': ruleConfigHandler.bind(this)\n            });\n            $('[data-region=\"competencyactionsmenu\"]').hide();\n            $('[data-region=\"competencyactions\"] [data-action=\"add\"]').hide();\n\n            $('[data-region=\"filtercompetencies\"]').on('submit', updateSearchHandler);\n            // Simple html5 drag drop because we already added an accessible alternative.\n            var top = $('[data-region=\"managecompetencies\"] [data-enhance=\"tree\"]');\n            top.on('dragstart', 'li>span', dragStart)\n                .on('dragover', 'li>span', allowDrop)\n                .on('dragenter', 'li>span', dragEnter)\n                .on('dragleave', 'li>span', dragLeave)\n                .on('drop', 'li>span', dropOver);\n\n            model.on('selectionchanged', selectionChanged);\n\n            // Prepare the configuration tool.\n            ruleConfigInstance = new RuleConfig(treeModel, rulesModules);\n            ruleConfigInstance.on('save', ruleConfigSaveHandler.bind(this));\n        }\n    };\n});\n"],"file":"competencyactions.min.js"}