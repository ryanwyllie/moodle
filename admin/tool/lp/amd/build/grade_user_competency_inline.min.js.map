{"version":3,"sources":["../src/grade_user_competency_inline.js"],"names":["define","$","notification","ajax","log","GradeDialogue","EventBase","ScaleValues","InlineEditor","selector","scaleId","competencyId","userId","planId","courseId","chooseStr","prototype","constructor","apply","trigger","length","Error","_scaleId","_competencyId","_userId","_planId","_courseId","_chooseStr","_setUp","click","e","preventDefault","_dialogue","display","bind","_methodName","_args","competencyid","planid","courseid","userid","Object","create","options","self","promise","get_values","done","scalevalues","push","value","name","optionConfig","i","id","on","data","args","grade","rating","note","call","methodname","evidence","_trigger","fail","exception"],"mappings":"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","file":"grade_user_competency_inline.min.js","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module to enable inline editing of a comptency grade.\n *\n * @package    tool_lp\n * @copyright  2015 Damyon Wiese\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery',\n        'core/notification',\n        'core/ajax',\n        'core/log',\n        'tool_lp/grade_dialogue',\n        'tool_lp/event_base',\n        'tool_lp/scalevalues',\n    ], function($, notification, ajax, log, GradeDialogue, EventBase, ScaleValues) {\n\n    /**\n     * InlineEditor\n     *\n     * @param {String} selector The selector to trigger the grading.\n     * @param {Number} scaleId The id of the scale for this competency.\n     * @param {Number} competencyId The id of the competency.\n     * @param {Number} userId The id of the user.\n     * @param {Number} planId The id of the plan.\n     * @param {Number} courseId The id of the course.\n     * @param {String} chooseStr Language string for choose a rating.\n     */\n    var InlineEditor = function(selector, scaleId, competencyId, userId, planId, courseId, chooseStr) {\n        EventBase.prototype.constructor.apply(this, []);\n\n        var trigger = $(selector);\n        if (!trigger.length) {\n            throw new Error('Could not find the trigger');\n        }\n\n        this._scaleId = scaleId;\n        this._competencyId = competencyId;\n        this._userId = userId;\n        this._planId = planId;\n        this._courseId = courseId;\n        this._chooseStr = chooseStr;\n        this._setUp();\n\n        trigger.click(function(e) {\n            e.preventDefault();\n            this._dialogue.display();\n        }.bind(this));\n\n        if (this._planId) {\n            this._methodName = 'core_competency_grade_competency_in_plan';\n            this._args = {\n                competencyid: this._competencyId,\n                planid: this._planId\n            };\n        } else if (this._courseId) {\n            this._methodName = 'core_competency_grade_competency_in_course';\n            this._args = {\n                competencyid: this._competencyId,\n                courseid: this._courseId,\n                userid: this._userId\n            };\n        } else {\n            this._methodName = 'core_competency_grade_competency';\n            this._args = {\n                userid: this._userId,\n                competencyid: this._competencyId\n            };\n        }\n    };\n    InlineEditor.prototype = Object.create(EventBase.prototype);\n\n    /**\n     * Setup.\n     *\n     * @method _setUp\n     */\n    InlineEditor.prototype._setUp = function() {\n        var options = [],\n            self = this;\n\n        var promise = ScaleValues.get_values(self._scaleId);\n        promise.done(function(scalevalues) {\n            options.push({\n                value: '',\n                name: self._chooseStr\n            });\n\n            for (var i = 0; i < scalevalues.length; i++) {\n                var optionConfig = scalevalues[i];\n                options.push({\n                    value: optionConfig.id,\n                    name: optionConfig.name\n                });\n            }\n\n            self._dialogue = new GradeDialogue(options);\n            self._dialogue.on('rated', function(e, data) {\n                var args = self._args;\n                args.grade = data.rating;\n                args.note = data.note;\n                ajax.call([{\n                    methodname: self._methodName,\n                    args: args,\n                    done: function(evidence) {\n                        self._trigger('competencyupdated', {args: args, evidence: evidence});\n                    },\n                    fail: notification.exception\n                }]);\n            });\n        }).fail(notification.exception);\n    };\n\n    /** @type {Number} The scale id for this competency. */\n    InlineEditor.prototype._scaleId = null;\n    /** @type {Number} The id of the competency. */\n    InlineEditor.prototype._competencyId = null;\n    /** @type {Number} The id of the user. */\n    InlineEditor.prototype._userId = null;\n    /** @type {Number} The id of the plan. */\n    InlineEditor.prototype._planId = null;\n    /** @type {Number} The id of the course. */\n    InlineEditor.prototype._courseId = null;\n    /** @type {String} The text for Choose rating. */\n    InlineEditor.prototype._chooseStr = null;\n    /** @type {GradeDialogue} The grading dialogue. */\n    InlineEditor.prototype._dialogue = null;\n\n    return /** @alias module:tool_lp/grade_user_competency_inline */ InlineEditor;\n\n});\n"]}