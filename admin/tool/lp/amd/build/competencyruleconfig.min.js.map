{"version":3,"sources":["../src/competencyruleconfig.js"],"names":["define","$","Notification","Templates","Dialogue","Outcomes","Str","RuleConfig","tree","rulesModules","_eventNode","_tree","_rulesModules","_setUp","prototype","_competency","_outcomesOption","_popup","_ready","_rules","_afterChange","_isValid","_find","prop","_afterRuleConfigChange","e","rule","_getRule","_afterRender","self","on","_switchedOutcome","trigger","_switchedRule","_trigger","_getConfig","close","canBeConfigured","can","each","index","canConfig","display","when","get_string","_render","then","title","render","bind","fail","exception","selector","getContent","find","_getApplicableOutcomesOptions","options","outcome","push","code","name","selected","ruleoutcome","_getApplicableRulesOptions","_getRuleName","getType","type","ruletype","ruleconfig","getConfig","_getOutcome","val","result","modInfo","_initOutcomes","getAll","outcomes","_initRules","promises","promise","init","setTargetCompetency","splice","apply","NONE","isValid","handler","_preRender","ready","config","rules","context","competencyshortname","shortname","setTargetCompetencyId","competencyId","getCompetency","modules","Deferred","amd","require","arguments","Module","always","resolve","hide","empty","show","container","injectTemplate","catch","data"],"mappings":"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","file":"competencyruleconfig.min.js","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Competency rule config.\n *\n * @package    tool_lp\n * @copyright  2015 Frédéric Massart - FMCorz.net\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery',\n        'core/notification',\n        'core/templates',\n        'tool_lp/dialogue',\n        'tool_lp/competency_outcomes',\n        'core/str'],\n        function($, Notification, Templates, Dialogue, Outcomes, Str) {\n\n    /**\n     * Competency rule class.\n     *\n     * When implementing this you should attach a listener to the event 'save'\n     * on the instance. E.g.\n     *\n     * var config = new RuleConfig(tree, modules);\n     * config.on('save', function(e, config) { ... });\n     *\n     * @param {competencytree} tree The competency tree.\n     * @param {Array} rulesModules The modules containing the rules: [{ typeName: { amd: amdModule, name: ruleName }}].\n     */\n    var RuleConfig = function(tree, rulesModules) {\n        this._eventNode = $('<div></div>');\n        this._tree = tree;\n        this._rulesModules = rulesModules;\n        this._setUp();\n    };\n\n    /** @type {Object} The current competency. */\n    RuleConfig.prototype._competency = null;\n    /** @type {Node} The node we attach the events to. */\n    RuleConfig.prototype._eventNode = null;\n    /** @type {Array} Outcomes options. */\n    RuleConfig.prototype._outcomesOption = null;\n    /** @type {Dialogue} The dialogue. */\n    RuleConfig.prototype._popup = null;\n    /** @type {Promise} Resolved when the module is ready. */\n    RuleConfig.prototype._ready = null;\n    /** @type {Array} The rules. */\n    RuleConfig.prototype._rules = null;\n    /** @type {Array} The rules modules. */\n    RuleConfig.prototype._rulesModules = null;\n    /** @type {competencytree} The competency tree. */\n    RuleConfig.prototype._tree = null;\n\n    /**\n     * After change.\n     *\n     * Triggered when a change occured.\n     *\n     * @method _afterChange\n     * @protected\n     */\n    RuleConfig.prototype._afterChange = function() {\n        if (!this._isValid()) {\n            this._find('[data-action=\"save\"]').prop('disabled', true);\n        } else {\n            this._find('[data-action=\"save\"]').prop('disabled', false);\n        }\n    };\n\n    /**\n     * After change in rule's config.\n     *\n     * Triggered when a change occured in a specific rule config.\n     *\n     * @method _afterRuleConfigChange\n     * @protected\n     * @param {Event} e\n     * @param {Rule} rule\n     */\n    RuleConfig.prototype._afterRuleConfigChange = function(e, rule) {\n        if (rule != this._getRule()) {\n            // This rule is not the current one any more, we can ignore.\n            return;\n        }\n        this._afterChange();\n    };\n\n    /**\n     * After render hook.\n     *\n     * @method _afterRender\n     * @protected\n     */\n    RuleConfig.prototype._afterRender = function() {\n        var self = this;\n\n        self._find('[name=\"outcome\"]').on('change', function() {\n            self._switchedOutcome();\n        }).trigger('change');\n\n        self._find('[name=\"rule\"]').on('change', function() {\n            self._switchedRule();\n        }).trigger('change');\n\n        self._find('[data-action=\"save\"]').on('click', function() {\n            self._trigger('save', self._getConfig());\n            self.close();\n        });\n\n        self._find('[data-action=\"cancel\"]').on('click', function() {\n            self.close();\n        });\n    };\n\n    /**\n     * Whether the current competency can be configured.\n     *\n     * @return {Boolean}\n     * @method canBeConfigured\n     */\n    RuleConfig.prototype.canBeConfigured = function() {\n        var can = false;\n        $.each(this._rules, function(index, rule) {\n            if (rule.canConfig()) {\n                can = true;\n                return;\n            }\n        });\n        return can;\n    };\n\n    /**\n     * Close the dialogue.\n     *\n     * @method close\n     */\n    RuleConfig.prototype.close = function() {\n        this._popup.close();\n        this._popup = null;\n    };\n\n    /**\n     * Opens the picker.\n     *\n     * @param {Number} competencyId The competency ID of the competency to work on.\n     * @method display\n     * @return {Promise}\n     */\n    RuleConfig.prototype.display = function() {\n        var self = this;\n        if (!self._competency) {\n            return false;\n        }\n        return $.when(Str.get_string('competencyrule', 'tool_lp'), self._render())\n        .then(function(title, render) {\n            self._popup = new Dialogue(\n                title,\n                render[0],\n                self._afterRender.bind(self)\n            );\n            return;\n        }).fail(Notification.exception);\n    };\n\n    /**\n     * Find a node in the dialogue.\n     *\n     * @param {String} selector\n     * @return {JQuery}\n     * @method _find\n     * @protected\n     */\n    RuleConfig.prototype._find = function(selector) {\n        return $(this._popup.getContent()).find(selector);\n    };\n\n    /**\n     * Get the applicable outcome options.\n     *\n     * @return {Array}\n     * @method _getApplicableOutcomesOptions\n     * @protected\n     */\n    RuleConfig.prototype._getApplicableOutcomesOptions = function() {\n        var self = this,\n            options = [];\n\n        $.each(self._outcomesOption, function(index, outcome) {\n            options.push({\n                code: outcome.code,\n                name: outcome.name,\n                selected: (outcome.code == self._competency.ruleoutcome) ? true : false,\n            });\n        });\n\n        return options;\n    };\n\n    /**\n     * Get the applicable rules options.\n     *\n     * @return {Array}\n     * @method _getApplicableRulesOptions\n     * @protected\n     */\n    RuleConfig.prototype._getApplicableRulesOptions = function() {\n        var self = this,\n            options = [];\n\n        $.each(self._rules, function(index, rule) {\n            if (!rule.canConfig()) {\n                return;\n            }\n            options.push({\n                name: self._getRuleName(rule.getType()),\n                type: rule.getType(),\n                selected: (rule.getType() == self._competency.ruletype) ? true : false,\n            });\n        });\n\n        return options;\n    };\n\n    /**\n     * Get the full config for the competency.\n     *\n     * @return {Object} Contains rule, ruleoutcome and ruleconfig.\n     * @method _getConfig\n     * @protected\n     */\n    RuleConfig.prototype._getConfig = function() {\n        var rule = this._getRule();\n        return {\n            ruletype: rule ? rule.getType() : null,\n            ruleconfig: rule ? rule.getConfig() : null,\n            ruleoutcome: this._getOutcome()\n        };\n    };\n\n    /**\n     * Get the selected outcome code.\n     *\n     * @return {String}\n     * @method _getOutcome\n     * @protected\n     */\n    RuleConfig.prototype._getOutcome = function() {\n        return this._find('[name=\"outcome\"]').val();\n    };\n\n    /**\n     * Get the selected rule.\n     *\n     * @return {null|Rule}\n     * @method _getRule\n     * @protected\n     */\n    RuleConfig.prototype._getRule = function() {\n        var result,\n            type = this._find('[name=\"rule\"]').val();\n\n        $.each(this._rules, function(index, rule) {\n            if (rule.getType() == type) {\n                result = rule;\n                return;\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Return the name of a rule.\n     *\n     * @param  {String} type The type of a rule.\n     * @return {String}\n     * @method _getRuleName\n     * @protected\n     */\n    RuleConfig.prototype._getRuleName = function(type) {\n        var self = this,\n            name;\n        $.each(self._rulesModules, function(index, modInfo) {\n            if (modInfo.type == type) {\n                name = modInfo.name;\n                return;\n            }\n        });\n        return name;\n    };\n\n    /**\n     * Initialise the outcomes.\n     *\n     * @return {Promise}\n     * @method _initOutcomes\n     * @protected\n     */\n    RuleConfig.prototype._initOutcomes = function() {\n        var self = this;\n        return Outcomes.getAll().then(function(outcomes) {\n            self._outcomesOption = outcomes;\n            return;\n        });\n    };\n\n    /**\n     * Initialise the rules.\n     *\n     * @return {Promise}\n     * @method _initRules\n     * @protected\n     */\n    RuleConfig.prototype._initRules = function() {\n        var self = this,\n            promises = [];\n        $.each(self._rules, function(index, rule) {\n            var promise = rule.init().then(function() {\n                rule.setTargetCompetency(self._competency);\n                rule.on('change', self._afterRuleConfigChange.bind(self));\n                return;\n            }, function() {\n                // Upon failure remove the rule, and resolve the promise.\n                self._rules.splice(index, 1);\n                return $.when();\n            });\n            promises.push(promise);\n        });\n\n        return $.when.apply($.when, promises);\n    };\n\n    /**\n     * Whether or not the current config is valid.\n     *\n     * @return {Boolean}\n     * @method _isValid\n     * @protected\n     */\n    RuleConfig.prototype._isValid = function() {\n        var outcome = this._getOutcome(),\n            rule = this._getRule();\n\n        if (outcome == Outcomes.NONE) {\n            return true;\n        } else if (!rule) {\n            return false;\n        }\n\n        return rule.isValid();\n    };\n\n    /**\n     * Register an event listener.\n     *\n     * @param {String} type The event type.\n     * @param {Function} handler The event listener.\n     * @method on\n     */\n    RuleConfig.prototype.on = function(type, handler) {\n        this._eventNode.on(type, handler);\n    };\n\n    /**\n     * Hook to executed before render.\n     *\n     * @method _preRender\n     * @protected\n     * @return {Promise}\n     */\n    RuleConfig.prototype._preRender = function() {\n        // We need to have all the information about the rule plugins first.\n        return this.ready();\n    };\n\n    /**\n     * Returns a promise that is resolved when the module is ready.\n     *\n     * @return {Promise}\n     * @method ready\n     * @protected\n     */\n    RuleConfig.prototype.ready = function() {\n        return this._ready.promise();\n    };\n\n    /**\n     * Render the dialogue.\n     *\n     * @method _render\n     * @protected\n     * @return {Promise}\n     */\n    RuleConfig.prototype._render = function() {\n        var self = this;\n        return this._preRender().then(function() {\n            var config;\n\n            if (!self.canBeConfigured()) {\n                config = false;\n            } else {\n                config = {};\n                config.outcomes = self._getApplicableOutcomesOptions();\n                config.rules = self._getApplicableRulesOptions();\n            }\n\n            var context = {\n                competencyshortname: self._competency.shortname,\n                config: config\n            };\n\n            return Templates.render('tool_lp/competency_rule_config', context);\n        });\n    };\n\n    /**\n     * Set the target competency.\n     *\n     * @param {Number} competencyId The target competency Id.\n     * @method setTargetCompetencyId\n     */\n    RuleConfig.prototype.setTargetCompetencyId = function(competencyId) {\n        var self = this;\n        self._competency = self._tree.getCompetency(competencyId);\n        $.each(self._rules, function(index, rule) {\n            rule.setTargetCompetency(self._competency);\n        });\n    };\n\n    /**\n     * Set up the instance.\n     *\n     * @method _setUp\n     * @protected\n     */\n    RuleConfig.prototype._setUp = function() {\n        var self = this,\n            promises = [],\n            modules = [];\n\n        self._ready = $.Deferred();\n        self._rules = [];\n\n        $.each(self._rulesModules, function(index, rule) {\n            modules.push(rule.amd);\n        });\n\n        // Load all the modules.\n        require(modules, function() {\n            $.each(arguments, function(index, Module) {\n                // Instantiate the rule and listen to it.\n                var rule = new Module(self._tree);\n                self._rules.push(rule);\n            });\n\n            // Load all the option values.\n            promises.push(self._initRules());\n            promises.push(self._initOutcomes());\n\n            // Ready when everything is done.\n            $.when.apply($.when, promises).always(function() {\n                self._ready.resolve();\n            });\n        });\n    };\n\n    /**\n     * Called when the user switches outcome.\n     *\n     * @method _switchedOutcome\n     * @protected\n     */\n    RuleConfig.prototype._switchedOutcome = function() {\n        var self = this,\n            type = self._getOutcome();\n\n        if (type == Outcomes.NONE) {\n            // Reset to defaults.\n            self._find('[data-region=\"rule-type\"]').hide()\n                .find('[name=\"rule\"]').val(-1);\n            self._find('[data-region=\"rule-config\"]').empty().hide();\n            self._afterChange();\n            return;\n        }\n\n        self._find('[data-region=\"rule-type\"]').show();\n        self._find('[data-region=\"rule-config\"]').show();\n        self._afterChange();\n    };\n\n    /**\n     * Called when the user switches rule.\n     *\n     * @method _switchedRule\n     * @protected\n     */\n    RuleConfig.prototype._switchedRule = function() {\n        var self = this,\n            container = self._find('[data-region=\"rule-config\"]'),\n            rule = self._getRule();\n\n        if (!rule) {\n            container.empty().hide();\n            self._afterChange();\n            return;\n        }\n        rule.injectTemplate(container).then(function() {\n            container.show();\n            return;\n        }).always(function() {\n            self._afterChange();\n        }).catch(function() {\n            container.empty().hide();\n        });\n    };\n\n    /**\n     * Trigger an event.\n     *\n     * @param {String} type The type of event.\n     * @param {Object} data The data to pass to the listeners.\n     * @method _trigger\n     * @protected\n     */\n    RuleConfig.prototype._trigger = function(type, data) {\n        this._eventNode.trigger(type, [data]);\n    };\n\n    return /** @alias module:tool_lp/competencyruleconfig */ RuleConfig;\n\n});\n"]}