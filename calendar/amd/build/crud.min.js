'use strict';define('core_calendar/crud',['jquery','core/str','core/notification','core/custom_interaction_events','core/modal','core/modal_registry','core/modal_factory','core/modal_events','core_calendar/modal_event_form','core_calendar/repository','core_calendar/events','core_calendar/modal_delete','core_calendar/selectors'],function($,Str,Notification,CustomEvents,Modal,ModalRegistry,ModalFactory,ModalEvents,ModalEventForm,CalendarRepository,CalendarEvents,ModalDelete,CalendarSelectors){function confirmDeletion(eventId,eventTitle,eventCount){var deleteStrings=[{key:'deleteevent',component:'calendar'}];eventCount=parseInt(eventCount,10);var deletePromise,isRepeatedEvent=1<eventCount;isRepeatedEvent?(deleteStrings.push({key:'confirmeventseriesdelete',component:'calendar',param:{name:eventTitle,count:eventCount}}),deletePromise=ModalFactory.create({type:ModalDelete.TYPE})):(deleteStrings.push({key:'confirmeventdelete',component:'calendar',param:eventTitle}),deletePromise=ModalFactory.create({type:ModalFactory.types.SAVE_CANCEL})),deletePromise.then(function(deleteModal){deleteModal.show()}).fail(Notification.exception);var stringsPromise=Str.get_strings(deleteStrings),finalPromise=$.when(stringsPromise,deletePromise).then(function(strings,deleteModal){return deleteModal.setTitle(strings[0]),deleteModal.setBody(strings[1]),isRepeatedEvent||deleteModal.setSaveButtonText(strings[0]),deleteModal.getRoot().on(ModalEvents.save,function(){CalendarRepository.deleteEvent(eventId,!1).then(function(){$('body').trigger(CalendarEvents.deleted,[eventId,!1])}).catch(Notification.exception)}),deleteModal.getRoot().on(CalendarEvents.deleteAll,function(){CalendarRepository.deleteEvent(eventId,!0).then(function(){$('body').trigger(CalendarEvents.deleted,[eventId,!0])}).catch(Notification.exception)}),deleteModal}).fail(Notification.exception);return finalPromise}return{registerRemove:function(root){root.on('click',CalendarSelectors.actions.remove,function(e){var eventSource=$(this).closest(CalendarSelectors.eventItem),eventId=eventSource.data('eventId'),eventTitle=eventSource.data('eventTitle'),eventCount=eventSource.data('eventCount');confirmDeletion(eventId,eventTitle,eventCount),e.preventDefault()})},registerEditListeners:function(root,eventFormModalPromise){return eventFormModalPromise.then(function(modal){$('body').on(CalendarEvents.editEvent,function(e,eventId){var calendarWrapper=root.find(CalendarSelectors.wrapper);modal.setEventId(eventId),modal.setContextId(calendarWrapper.data('contextId')),modal.show(),e.stopImmediatePropagation()})}).fail(Notification.exception),eventFormModalPromise},registerEventFormModal:function registerEventFormModal(root){var eventFormPromise=ModalFactory.create({type:ModalEventForm.TYPE,large:!0});return root.on('click',CalendarSelectors.actions.create,function(e){eventFormPromise.then(function(modal){var wrapper=root.find(CalendarSelectors.wrapper),categoryId=wrapper.data('categoryid');'undefined'!=typeof categoryId&&modal.setCategoryId(categoryId);var today=root.find(CalendarSelectors.today),firstDay=root.find(CalendarSelectors.day);return!today.length&&firstDay.length&&modal.setStartTime(firstDay.data('newEventTimestamp')),modal.setContextId(wrapper.data('contextId')),modal.setCourseId(wrapper.data('courseid')),void modal.show()}).fail(Notification.exception),e.preventDefault()}),root.on('click',CalendarSelectors.actions.edit,function(e){e.preventDefault();var target=$(e.currentTarget),calendarWrapper=target.closest(CalendarSelectors.wrapper),eventWrapper=target.closest(CalendarSelectors.eventItem);eventFormPromise.then(function(modal){return modal.setEventId(eventWrapper.data('eventId')),modal.setContextId(calendarWrapper.data('contextId')),modal.show(),void e.stopImmediatePropagation()}).fail(Notification.exception)}),eventFormPromise}}});
//# sourceMappingURL=crud.min.js.map
