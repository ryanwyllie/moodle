{"version":3,"sources":["../src/event_form.js"],"names":["define","$","SELECTORS","EVENT_GROUP_COURSE_ID","EVENT_GROUP_ID","SELECT_OPTION","parseGroupSelect","formElement","find","each","index","element","value","attr","splits","split","courseId","addCourseGroupSelectListeners","courseGroupSelect","groupSelect","groupSelectOptions","filterGroupSelectOptions","selectedCourseId","val","selectedIndex","hasGroups","removeClass","prop","addClass","on","init","formId"],"mappings":"aAuBAA,kCAAO,CAAC,QAAD,CAAP,CAAmB,SAASC,CAAT,CAAY,IAEvBC,WAAY,CACZC,sBAAuB,wBADX,CAEZC,eAAgB,kBAFJ,CAGZC,cAAe,QAHH,CAFW,CAyBvBC,iBAAmB,SAASC,WAAT,CAAsB,CACzCA,YAAYC,IAAZ,CAAiBN,UAAUE,cAA3B,EACKI,IADL,CACUN,UAAUG,aADpB,EAEKI,IAFL,CAEU,SAASC,KAAT,CAAgBC,OAAhB,CAAyB,CAC3BA,QAAUV,EAAEU,OAAF,CADiB,IAEvBC,OAAQD,QAAQE,IAAR,CAAa,OAAb,CAFe,CAGvBC,OAASF,MAAMG,KAAN,CAAY,GAAZ,CAHc,CAIvBC,SAAWF,OAAO,CAAP,CAJY,CAM3BH,QAAQE,IAAR,CAAa,gBAAb,CAA+BG,QAA/B,CACH,CATL,CAUH,CApC0B,CA8CvBC,8BAAgC,SAASV,WAAT,CAAsB,IAClDW,mBAAoBX,YAAYC,IAAZ,CAAiBN,UAAUC,qBAA3B,CAD8B,CAElDgB,YAAcZ,YAAYC,IAAZ,CAAiBN,UAAUE,cAA3B,CAFoC,CAGlDgB,mBAAqBD,YAAYX,IAAZ,CAAiBN,UAAUG,aAA3B,CAH6B,CAIlDgB,yBAA2B,UAAW,IAClCC,kBAAmBJ,kBAAkBK,GAAlB,EADe,CAElCC,cAAgB,IAFkB,CAGlCC,YAHkC,CAItCL,mBAAmBX,IAAnB,CAAwB,SAASC,KAAT,CAAgBC,OAAhB,CAAyB,CAC7CA,QAAUV,EAAEU,OAAF,CADmC,CAGzCA,QAAQE,IAAR,CAAa,gBAAb,GAAkCS,gBAHO,EAIzCX,QAAQe,WAAR,CAAoB,QAApB,CAJyC,CAKzCf,QAAQgB,IAAR,CAAa,UAAb,IALyC,CAMzCF,YANyC,EAOnB,IAAlB,kBAA0Bd,QAAQE,IAAR,CAAa,UAAb,CAPW,IAQrCW,cAAgBd,KARqB,IAWzCC,QAAQiB,QAAR,CAAiB,QAAjB,CAXyC,CAYzCjB,QAAQgB,IAAR,CAAa,UAAb,IAZyC,CAchD,CAdD,CAJsC,CAoBlCF,SApBkC,CAqBlCN,YAAYQ,IAAZ,CAAiB,UAAjB,IArBkC,CAuBlCR,YAAYQ,IAAZ,CAAiB,UAAjB,IAvBkC,CA0BtCR,YAAYQ,IAAZ,CAAiB,eAAjB,CAAkCH,aAAlC,CACH,CA/BqD,CAiCtDN,kBAAkBW,EAAlB,CAAqB,QAArB,CAA+BR,wBAA/B,CAjCsD,CAkCtDA,0BACH,CAjF0B,CAgG3B,MAAO,CACHS,KARO,QAAPA,KAAO,CAASC,MAAT,CAAiB,CACxB,GAAIxB,aAAcN,EAAE,IAAM8B,MAAR,CAAlB,CAEAzB,iBAAiBC,WAAjB,CAHwB,CAIxBU,8BAA8BV,WAA9B,CACH,CAEM,CAGV,CAnGD,C","file":"event_form.min.js","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A javascript module to enhance the event form.\n *\n * @module     core_calendar/event_form\n * @package    core_calendar\n * @copyright  2017 Ryan Wyllie <ryan@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery'], function($) {\n\n    var SELECTORS = {\n        EVENT_GROUP_COURSE_ID: '[name=\"groupcourseid\"]',\n        EVENT_GROUP_ID: '[name=\"groupid\"]',\n        SELECT_OPTION: 'option',\n    };\n\n    /**\n     * Parse the group id select element in the event form and pull out\n     * the course id from the value to allow us to toggle other select\n     * elements based on the course id for the group a user selects.\n     *\n     * This is a little hacky but I couldn't find a better way to pass\n     * the course id for each group id with the limitations of mforms.\n     *\n     * The group id options are rendered with a value like:\n     * \"<courseid>-<groupid>\"\n     * E.g.\n     * For a group with id 10 in a course with id 3 the value of the\n     * option will be 3-10.\n     *\n     * @method parseGroupSelect\n     * @param {object} formElement The root form element\n     */\n    var parseGroupSelect = function(formElement) {\n        formElement.find(SELECTORS.EVENT_GROUP_ID)\n            .find(SELECTORS.SELECT_OPTION)\n            .each(function(index, element) {\n                element = $(element);\n                var value = element.attr('value');\n                var splits = value.split('-');\n                var courseId = splits[0];\n\n                element.attr('data-course-id', courseId);\n            });\n    };\n\n    /**\n     * Listen for when the user changes the group course when configuring\n     * a group event and filter the options in the group select to only\n     * show the groups available within the course the user has selected.\n     *\n     * @method addCourseGroupSelectListeners\n     * @param {object} formElement The root form element\n     */\n    var addCourseGroupSelectListeners = function(formElement) {\n        var courseGroupSelect = formElement.find(SELECTORS.EVENT_GROUP_COURSE_ID);\n        var groupSelect = formElement.find(SELECTORS.EVENT_GROUP_ID);\n        var groupSelectOptions = groupSelect.find(SELECTORS.SELECT_OPTION);\n        var filterGroupSelectOptions = function() {\n            var selectedCourseId = courseGroupSelect.val();\n            var selectedIndex = null;\n            var hasGroups = false;\n            groupSelectOptions.each(function(index, element) {\n                element = $(element);\n\n                if (element.attr('data-course-id') == selectedCourseId) {\n                    element.removeClass('hidden');\n                    element.prop('disabled', false);\n                    hasGroups = true;\n                    if (selectedIndex === null || element.attr('selected')) {\n                        selectedIndex = index;\n                    }\n                } else {\n                    element.addClass('hidden');\n                    element.prop('disabled', true);\n                }\n            });\n\n            if (hasGroups) {\n                groupSelect.prop('disabled', false);\n            } else {\n                groupSelect.prop('disabled', true);\n            }\n\n            groupSelect.prop('selectedIndex', selectedIndex);\n        };\n\n        courseGroupSelect.on('change', filterGroupSelectOptions);\n        filterGroupSelectOptions();\n    };\n\n    /**\n     * Initialise all of the form enhancements.\n     *\n     * @method init\n     * @param {string} formId The value of the form's id attribute\n     */\n    var init = function(formId) {\n        var formElement = $('#' + formId);\n\n        parseGroupSelect(formElement);\n        addCourseGroupSelectListeners(formElement);\n    };\n\n    return {\n        init: init,\n    };\n});\n"]}