{"version":3,"sources":["../src/view_manager.js"],"names":["define","$","Templates","Str","Notification","CalendarRepository","CalendarEvents","CalendarSelectors","ModalFactory","ModalEvents","SummaryModal","registerEventListeners","root","on","links","eventLink","e","target","eventId","is","actions","viewEvent","closest","length","data","find","preventDefault","stopPropagation","renderEventSummaryModal","navLink","wrapper","view","courseId","categoryId","link","currentTarget","changeMonth","attr","changeDay","refreshMonthContent","year","month","courseid","categoryid","startLoading","M","util","js_pending","get","join","includenavigation","mini","getCalendarMonthData","then","context","render","html","js","replaceNode","trigger","viewUpdated","always","js_complete","stopLoading","fail","exception","url","window","history","pushState","arguments","monthChanged","refreshDayContent","day","getCalendarDayData","dayChanged","loadingIconContainer","containers","loadingIcon","removeClass","addClass","normaliseEventType","eventType","getEventTypeClassFromType","typeClass","getEventById","getEventResponse","event","Error","eventData","eventtype","getEventType","modalParams","title","name","type","TYPE","body","templateContext","canedit","candelete","headerclasses","isactionevent","create","done","modal","getRoot","hidden","destroy","show","lang","get_string","langStr","init","reloadCurrentMonth","reloadCurrentDay","reloadCurrentUpcoming","getCalendarUpcomingData"],"mappings":"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","file":"view_manager.min.js","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A javascript module to handler calendar view changes.\n *\n * @module     core_calendar/view_manager\n * @package    core_calendar\n * @copyright  2017 Andrew Nicols <andrew@nicols.co.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n    'jquery',\n    'core/templates',\n    'core/str',\n    'core/notification',\n    'core_calendar/repository',\n    'core_calendar/events',\n    'core_calendar/selectors',\n    'core/modal_factory',\n    'core/modal_events',\n    'core_calendar/summary_modal',\n], function(\n    $,\n    Templates,\n    Str,\n    Notification,\n    CalendarRepository,\n    CalendarEvents,\n    CalendarSelectors,\n    ModalFactory,\n    ModalEvents,\n    SummaryModal\n) {\n\n        /**\n         * Register event listeners for the module.\n         *\n         * @param {object} root The root element.\n         */\n        var registerEventListeners = function(root) {\n            root = $(root);\n\n            // Bind click events to event links.\n            root.on('click', CalendarSelectors.links.eventLink, function(e) {\n                var target = $(e.target);\n                var eventId = null;\n\n                var eventLink;\n                if (target.is(CalendarSelectors.actions.viewEvent)) {\n                    eventLink = target;\n                } else {\n                    eventLink = target.closest(CalendarSelectors.actions.viewEvent);\n                }\n\n                if (eventLink.length) {\n                    eventId = eventLink.data('eventId');\n                } else {\n                    eventId = target.find(CalendarSelectors.actions.viewEvent).data('eventId');\n                }\n\n                if (eventId) {\n                    // A link was found. Show the modal.\n\n                    e.preventDefault();\n                    // We've handled the event so stop it from bubbling\n                    // and causing the day click handler to fire.\n                    e.stopPropagation();\n\n                    renderEventSummaryModal(eventId);\n                }\n            });\n\n\n            root.on('click', CalendarSelectors.links.navLink, function(e) {\n                var wrapper = root.find(CalendarSelectors.wrapper);\n                var view = wrapper.data('view');\n                var courseId = wrapper.data('courseid');\n                var categoryId = wrapper.data('categoryid');\n                var link = $(e.currentTarget);\n\n                if (view === 'month') {\n                    changeMonth(root, link.attr('href'), link.data('year'), link.data('month'), courseId, categoryId);\n                    e.preventDefault();\n                } else if (view === 'day') {\n                    changeDay(root, link.attr('href'), link.data('year'), link.data('month'), link.data('day'),\n                        courseId, categoryId);\n                    e.preventDefault();\n                }\n\n            });\n        };\n\n        /**\n         * Refresh the month content.\n         *\n         * @param {object} root The root element.\n         * @param {Number} year Year\n         * @param {Number} month Month\n         * @param {Number} courseid The id of the course whose events are shown\n         * @param {Number} categoryid The id of the category whose events are shown\n         * @param {object} target The element being replaced. If not specified, the calendarwrapper is used.\n         * @return {promise}\n         */\n        var refreshMonthContent = function(root, year, month, courseid, categoryid, target) {\n            startLoading(root);\n\n            target = target || root.find(CalendarSelectors.wrapper);\n\n            M.util.js_pending([root.get('id'), year, month, courseid].join('-'));\n            var includenavigation = root.data('includenavigation');\n            var mini = root.data('mini');\n            return CalendarRepository.getCalendarMonthData(year, month, courseid, categoryid, includenavigation, mini)\n                .then(function(context) {\n                    return Templates.render(root.attr('data-template'), context);\n                })\n                .then(function(html, js) {\n                    return Templates.replaceNode(target, html, js);\n                })\n                .then(function() {\n                    $('body').trigger(CalendarEvents.viewUpdated);\n                    return;\n                })\n                .always(function() {\n                    M.util.js_complete([root.get('id'), year, month, courseid].join('-'));\n                    return stopLoading(root);\n                })\n                .fail(Notification.exception);\n        };\n\n        /**\n         * Handle changes to the current calendar view.\n         *\n         * @param {object} root The container element\n         * @param {String} url The calendar url to be shown\n         * @param {Number} year Year\n         * @param {Number} month Month\n         * @param {Number} courseid The id of the course whose events are shown\n         * @param {Number} categoryid The id of the category whose events are shown\n         * @return {promise}\n         */\n        var changeMonth = function(root, url, year, month, courseid, categoryid) {\n            return refreshMonthContent(root, year, month, courseid, categoryid)\n                .then(function() {\n                    if (url.length && url !== '#') {\n                        window.history.pushState({}, '', url);\n                    }\n                    return arguments;\n                })\n                .then(function() {\n                    $('body').trigger(CalendarEvents.monthChanged, [year, month, courseid, categoryid]);\n                    return arguments;\n                });\n        };\n\n        /**\n         * Reload the current month view data.\n         *\n         * @param {object} root The container element.\n         * @param {Number} courseId The course id.\n         * @param {Number} categoryId The id of the category whose events are shown\n         * @return {promise}\n         */\n        var reloadCurrentMonth = function(root, courseId, categoryId) {\n            var year = root.find(CalendarSelectors.wrapper).data('year');\n            var month = root.find(CalendarSelectors.wrapper).data('month');\n\n            if (typeof courseId === 'undefined') {\n                courseId = root.find(CalendarSelectors.wrapper).data('courseid');\n            }\n\n            if (typeof categoryId === 'undefined') {\n                categoryId = root.find(CalendarSelectors.wrapper).data('categoryid');\n            }\n\n            return refreshMonthContent(root, year, month, courseId, categoryId);\n        };\n\n\n        /**\n         * Refresh the day content.\n         *\n         * @param {object} root The root element.\n         * @param {Number} year Year\n         * @param {Number} month Month\n         * @param {Number} day Day\n         * @param {Number} courseid The id of the course whose events are shown\n         * @param {Number} categoryId The id of the category whose events are shown\n         * @param {object} target The element being replaced. If not specified, the calendarwrapper is used.\n         * @return {promise}\n         */\n        var refreshDayContent = function(root, year, month, day, courseid, categoryId, target) {\n            startLoading(root);\n\n            target = target || root.find(CalendarSelectors.wrapper);\n\n            M.util.js_pending([root.get('id'), year, month, day, courseid, categoryId].join('-'));\n            var includenavigation = root.data('includenavigation');\n            return CalendarRepository.getCalendarDayData(year, month, day, courseid, categoryId, includenavigation)\n                .then(function(context) {\n                    return Templates.render(root.attr('data-template'), context);\n                })\n                .then(function(html, js) {\n                    return Templates.replaceNode(target, html, js);\n                })\n                .then(function() {\n                    $('body').trigger(CalendarEvents.viewUpdated);\n                    return;\n                })\n                .always(function() {\n                    M.util.js_complete([root.get('id'), year, month, day, courseid, categoryId].join('-'));\n                    return stopLoading(root);\n                })\n                .fail(Notification.exception);\n        };\n\n        /**\n         * Reload the current day view data.\n         *\n         * @param {object} root The container element.\n         * @param {Number} courseId The course id.\n         * @param {Number} categoryId The id of the category whose events are shown\n         * @return {promise}\n         */\n        var reloadCurrentDay = function(root, courseId, categoryId) {\n            var wrapper = root.find(CalendarSelectors.wrapper);\n            var year = wrapper.data('year');\n            var month = wrapper.data('month');\n            var day = wrapper.data('day');\n\n            if (!courseId) {\n                courseId = root.find(CalendarSelectors.wrapper).data('courseid');\n            }\n\n            if (typeof categoryId === 'undefined') {\n                categoryId = root.find(CalendarSelectors.wrapper).data('categoryid');\n            }\n\n            return refreshDayContent(root, year, month, day, courseId, categoryId);\n        };\n\n        /**\n         * Handle changes to the current calendar view.\n         *\n         * @param {object} root The root element.\n         * @param {String} url The calendar url to be shown\n         * @param {Number} year Year\n         * @param {Number} month Month\n         * @param {Number} day Day\n         * @param {Number} courseId The id of the course whose events are shown\n         * @param {Number} categoryId The id of the category whose events are shown\n         * @return {promise}\n         */\n        var changeDay = function(root, url, year, month, day, courseId, categoryId) {\n            return refreshDayContent(root, year, month, day, courseId, categoryId)\n                .then(function() {\n                    if (url.length && url !== '#') {\n                        window.history.pushState({}, '', url);\n                    }\n                    return arguments;\n                })\n                .then(function() {\n                    $('body').trigger(CalendarEvents.dayChanged, [year, month, day, courseId, categoryId]);\n                    return arguments;\n                });\n        };\n\n        /**\n         * Set the element state to loading.\n         *\n         * @param {object} root The container element\n         * @method startLoading\n         */\n        var startLoading = function(root) {\n            var loadingIconContainer = root.find(CalendarSelectors.containers.loadingIcon);\n\n            loadingIconContainer.removeClass('hidden');\n        };\n\n        /**\n         * Remove the loading state from the element.\n         *\n         * @param {object} root The container element\n         * @method stopLoading\n         */\n        var stopLoading = function(root) {\n            var loadingIconContainer = root.find(CalendarSelectors.containers.loadingIcon);\n\n            loadingIconContainer.addClass('hidden');\n        };\n\n        /**\n         * Reload the current month view data.\n         *\n         * @param {object} root The container element.\n         * @param {Number} courseId The course id.\n         * @param {Number} categoryId The id of the category whose events are shown\n         * @return {promise}\n         */\n        var reloadCurrentUpcoming = function(root, courseId, categoryId) {\n            startLoading(root);\n\n            var target = root.find(CalendarSelectors.wrapper);\n\n            if (typeof courseId === 'undefined') {\n                courseId = root.find(CalendarSelectors.wrapper).data('courseid');\n            }\n\n            if (typeof categoryId === 'undefined') {\n                categoryId = root.find(CalendarSelectors.wrapper).data('categoryid');\n            }\n\n            return CalendarRepository.getCalendarUpcomingData(courseId, categoryId)\n                .then(function(context) {\n                    return Templates.render(root.attr('data-template'), context);\n                })\n                .then(function(html, js) {\n                    return Templates.replaceNode(target, html, js);\n                })\n                .then(function() {\n                    $('body').trigger(CalendarEvents.viewUpdated);\n                    return;\n                })\n                .always(function() {\n                    return stopLoading(root);\n                })\n                .fail(Notification.exception);\n        };\n\n        /**\n         * Convert the given event type into one of either user, site,\n         * group, category, or course.\n         *\n         * @param {String} eventType The calendar event type\n         * @return {String}\n         */\n        var normaliseEventType = function(eventType) {\n            switch (eventType) {\n                case 'user':\n                    return 'user';\n                case 'site':\n                    return 'site';\n                case 'group':\n                    return 'group';\n                case 'category':\n                    return 'category';\n                default:\n                    return 'course';\n            }\n        };\n\n        /**\n         * Get the CSS class to apply for the given event type.\n         *\n         * @param {String} eventType The calendar event type\n         * @return {String}\n         */\n        var getEventTypeClassFromType = function(eventType) {\n            return 'calendar_event_' + normaliseEventType(eventType);\n        };\n\n        /**\n         * Render the event summary modal.\n         *\n         * @param {Number} eventId The calendar event id.\n         */\n        var renderEventSummaryModal = function(eventId) {\n            var typeClass = '';\n\n            // Calendar repository promise.\n            CalendarRepository.getEventById(eventId).then(function(getEventResponse) {\n                if (!getEventResponse.event) {\n                    throw new Error('Error encountered while trying to fetch calendar event with ID: ' + eventId);\n                }\n                var eventData = getEventResponse.event;\n                typeClass = getEventTypeClassFromType(eventData.eventtype);\n\n                return getEventType(eventData.eventtype).then(function(eventType) {\n                    eventData.eventtype = eventType;\n                    return eventData;\n                });\n            }).then(function(eventData) {\n                // Build the modal parameters from the event data.\n                var modalParams = {\n                    title: eventData.name,\n                    type: SummaryModal.TYPE,\n                    body: Templates.render('core_calendar/event_summary_body', eventData),\n                    templateContext: {\n                        canedit: eventData.canedit,\n                        candelete: eventData.candelete,\n                        headerclasses: typeClass,\n                        isactionevent: eventData.isactionevent,\n                        url: eventData.url\n                    }\n                };\n\n                // Create the modal.\n                return ModalFactory.create(modalParams);\n\n            }).done(function(modal) {\n                // Handle hidden event.\n                modal.getRoot().on(ModalEvents.hidden, function() {\n                    // Destroy when hidden.\n                    modal.destroy();\n                });\n\n                // Finally, render the modal!\n                modal.show();\n\n            }).fail(Notification.exception);\n        };\n\n        /**\n         * Get the event type lang string.\n         *\n         * @param {String} eventType The event type.\n         * @return {promise} The lang string promise.\n         */\n        var getEventType = function(eventType) {\n            var lang = 'type' + normaliseEventType(eventType);\n            return Str.get_string(lang, 'core_calendar').then(function(langStr) {\n                return langStr;\n            });\n        };\n\n        return {\n            init: function(root) {\n                registerEventListeners(root);\n            },\n            reloadCurrentMonth: reloadCurrentMonth,\n            changeMonth: changeMonth,\n            refreshMonthContent: refreshMonthContent,\n            reloadCurrentDay: reloadCurrentDay,\n            changeDay: changeDay,\n            refreshDayContent: refreshDayContent,\n            reloadCurrentUpcoming: reloadCurrentUpcoming\n        };\n    });\n"]}