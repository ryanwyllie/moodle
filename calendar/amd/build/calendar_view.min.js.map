{"version":3,"sources":["../src/calendar_view.js"],"names":["define","$","Str","Notification","CalendarSelectors","CalendarEvents","CalendarViewManager","CalendarRepository","ModalFactory","ModalEventForm","ModalEvents","CalendarCrud","registerEventListeners","root","type","body","registerRemove","reloadFunction","charAt","toUpperCase","slice","on","created","deleted","updated","courseSelector","selectElement","courseId","val","then","find","window","history","pushState","fail","exception","filterChanged","e","data","daysWithEvent","eventType","hidden","addClass","removeClass","eventFormPromise","registerEventFormModal","registerEditListeners","init"],"mappings":"aAuBAA,qCAAO,CACC,QADD,CAEC,UAFD,CAGC,mBAHD,CAIC,yBAJD,CAKC,sBALD,CAMC,4BAND,CAOC,0BAPD,CAQC,oBARD,CASC,gCATD,CAUC,mBAVD,CAWC,oBAXD,CAAP,CAaI,SACIC,CADJ,CAEIC,GAFJ,CAGIC,YAHJ,CAIIC,iBAJJ,CAKIC,cALJ,CAMIC,mBANJ,CAOIC,kBAPJ,CAQIC,YARJ,CASIC,cATJ,CAUIC,WAVJ,CAWIC,YAXJ,CAYE,CAEE,GAAIC,wBAAyB,SAASC,IAAT,CAAeC,IAAf,CAAqB,CAC9C,GAAIC,MAAOd,EAAE,MAAF,CAAX,CAEAU,aAAaK,cAAb,CAA4BH,IAA5B,CAH8C,CAK9C,GAAII,gBAAiB,gBAAkBH,KAAKI,MAAL,CAAY,CAAZ,EAAeC,WAAf,EAAlB,CAAiDL,KAAKM,KAAL,CAAW,CAAX,CAAtE,CAEAL,KAAKM,EAAL,CAAQhB,eAAeiB,OAAvB,CAAgC,UAAW,CACvChB,oBAAoBW,cAApB,EAAoCJ,IAApC,CACH,CAFD,CAP8C,CAU9CE,KAAKM,EAAL,CAAQhB,eAAekB,OAAvB,CAAgC,UAAW,CACvCjB,oBAAoBW,cAApB,EAAoCJ,IAApC,CACH,CAFD,CAV8C,CAa9CE,KAAKM,EAAL,CAAQhB,eAAemB,OAAvB,CAAgC,UAAW,CACvClB,oBAAoBW,cAApB,EAAoCJ,IAApC,CACH,CAFD,CAb8C,CAiB9CA,KAAKQ,EAAL,CAAQ,QAAR,CAAkBjB,kBAAkBqB,cAApC,CAAoD,UAAW,IACvDC,eAAgBzB,EAAE,IAAF,CADuC,CAEvD0B,SAAWD,cAAcE,GAAd,EAF4C,CAG3DtB,oBAAoBW,cAApB,EAAoCJ,IAApC,CAA0Cc,QAA1C,CAAoD,IAApD,EACKE,IADL,CACU,UAAW,CAEb,MAAOhB,MAAKiB,IAAL,CAAU1B,kBAAkBqB,cAA5B,EAA4CG,GAA5C,CAAgDD,QAAhD,CACV,CAJL,EAKKE,IALL,CAKU,UAAW,CACbE,OAAOC,OAAP,CAAeC,SAAf,CAAyB,EAAzB,CAA6B,EAA7B,CAAiC,yBAA2BN,QAA5D,CAGH,CATL,EAUKO,IAVL,CAUU/B,aAAagC,SAVvB,CAWH,CAdD,CAjB8C,CAiC9CpB,KAAKM,EAAL,CAAQhB,eAAe+B,aAAvB,CAAsC,SAASC,CAAT,CAAYC,IAAZ,CAAkB,CACpD,GAAIC,eAAgB1B,KAAKiB,IAAL,CAAU1B,kBAAkBoC,SAAlB,CAA4BF,KAAKxB,IAAjC,CAAV,CAApB,CACI,SAAK2B,MAF2C,CAGhDF,cAAcG,QAAd,CAAuB,QAAvB,CAHgD,CAKhDH,cAAcI,WAAd,CAA0B,QAA1B,CAEP,CAPD,CAjC8C,CA0C9C,GAAIC,kBAAmBjC,aAAakC,sBAAb,CAAoChC,IAApC,CAAvB,CACAF,aAAamC,qBAAb,CAAmCjC,IAAnC,CAAyC+B,gBAAzC,CACH,CA5CD,CA8CA,MAAO,CACHG,KAAM,cAASlC,IAAT,CAAeC,IAAf,CAAqB,CACvBD,KAAOZ,EAAEY,IAAF,CADgB,CAGvBP,oBAAoByC,IAApB,CAAyBlC,IAAzB,CAA+BC,IAA/B,CAHuB,CAIvBF,uBAAuBC,IAAvB,CAA6BC,IAA7B,CACH,CANE,CAQV,CAjFL,C","file":"calendar_view.min.js","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module is responsible for handle calendar day and upcoming view.\n *\n * @module     core_calendar/calendar\n * @package    core_calendar\n * @copyright  2017 Simey Lameze <simey@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n        'jquery',\n        'core/str',\n        'core/notification',\n        'core_calendar/selectors',\n        'core_calendar/events',\n        'core_calendar/view_manager',\n        'core_calendar/repository',\n        'core/modal_factory',\n        'core_calendar/modal_event_form',\n        'core/modal_events',\n        'core_calendar/crud'\n    ],\n    function(\n        $,\n        Str,\n        Notification,\n        CalendarSelectors,\n        CalendarEvents,\n        CalendarViewManager,\n        CalendarRepository,\n        ModalFactory,\n        ModalEventForm,\n        ModalEvents,\n        CalendarCrud\n    ) {\n\n        var registerEventListeners = function(root, type) {\n            var body = $('body');\n\n            CalendarCrud.registerRemove(root);\n\n            var reloadFunction = 'reloadCurrent' + type.charAt(0).toUpperCase() + type.slice(1);\n\n            body.on(CalendarEvents.created, function() {\n                CalendarViewManager[reloadFunction](root);\n            });\n            body.on(CalendarEvents.deleted, function() {\n                CalendarViewManager[reloadFunction](root);\n            });\n            body.on(CalendarEvents.updated, function() {\n                CalendarViewManager[reloadFunction](root);\n            });\n\n            root.on('change', CalendarSelectors.courseSelector, function() {\n                var selectElement = $(this);\n                var courseId = selectElement.val();\n                CalendarViewManager[reloadFunction](root, courseId, null)\n                    .then(function() {\n                        // We need to get the selector again because the content has changed.\n                        return root.find(CalendarSelectors.courseSelector).val(courseId);\n                    })\n                    .then(function() {\n                        window.history.pushState({}, '', '?view=upcoming&course=' + courseId);\n\n                        return;\n                    })\n                    .fail(Notification.exception);\n            });\n\n            body.on(CalendarEvents.filterChanged, function(e, data) {\n                var daysWithEvent = root.find(CalendarSelectors.eventType[data.type]);\n                if (data.hidden == true) {\n                    daysWithEvent.addClass('hidden');\n                } else {\n                    daysWithEvent.removeClass('hidden');\n                }\n            });\n\n            var eventFormPromise = CalendarCrud.registerEventFormModal(root);\n            CalendarCrud.registerEditListeners(root, eventFormPromise);\n        };\n\n        return {\n            init: function(root, type) {\n                root = $(root);\n\n                CalendarViewManager.init(root, type);\n                registerEventListeners(root, type);\n            }\n        };\n    });\n"]}