{"version":3,"sources":["../../../../../src/local/grades/local/grader/user_picker.js"],"names":["UserPicker","userList","showUserCallback","preChangeUserCallback","currentUserIndex","render","bind","setUserId","userId","userIndex","findIndex","user","id","parseInt","Error","root","document","createElement","renderNavigator","html","js","Templates","replaceNodeContents","showUser","currentUser","registerEventListeners","renderForPromise","context","Promise","all","renderUserChange","userRegion","querySelector","Selectors","regions","addEventListener","e","button","target","closest","actions","changeUser","input","searchUserInput","graderRegion","result","spinner","failed","updateIndex","dataset","direction","resolve","timeout","onkeyup","clearTimeout","setTimeout","userInput","value","results","filter","fullname","toLowerCase","includes","renderSearch","preventDefault","selectUser","foundUser","item","userid","replaceNode","searchUserBox","specificIndex","length","total","displayIndex","users","initialUserId","userPicker"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module will tie together all of the different calls the gradable module will make.\n *\n * @module     mod_forum/local/grades/local/grader/user_picker\n * @package    mod_forum\n * @copyright  2019 Mathew May <mathew.solutions>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Templates from 'core/templates';\nimport Selectors from './user_picker/selectors';\nimport {addIconToContainerWithPromise} from 'core/loadingicon';\n\nconst templatePath = 'mod_forum/local/grades/local/grader';\n\nclass UserPicker {\n\n    /**\n     * Constructor for the User Picker.\n     *\n     * @param {Array} userList List of users\n     * @param {Function} showUserCallback The callback used to display the user\n     * @param {Function} preChangeUserCallback The callback to use before changing user\n     */\n    constructor(userList, showUserCallback, preChangeUserCallback) {\n        this.userList = userList;\n        this.showUserCallback = showUserCallback;\n        this.preChangeUserCallback = preChangeUserCallback;\n        this.currentUserIndex = 0;\n\n        // Ensure that render is bound correctly.\n        this.render = this.render.bind(this);\n        this.setUserId = this.setUserId.bind(this);\n    }\n\n    /**\n     * Set the current userid without rendering the change.\n     * To show the user, call showUser too.\n     *\n     * @param {Number} userId\n     */\n    setUserId(userId) {\n        // Determine the current index based on the user ID.\n        const userIndex = this.userList.findIndex(user => {\n            return user.id === parseInt(userId);\n        });\n\n        if (userIndex === -1) {\n            throw Error(`User with id ${userId} not found`);\n        }\n\n        this.currentUserIndex = userIndex;\n    }\n\n    /**\n     * Render the user picker.\n     */\n    async render() {\n        // Create the root node.\n        this.root = document.createElement('div');\n\n        const {html, js} = await this.renderNavigator();\n        Templates.replaceNodeContents(this.root, html, js);\n\n        // Call the showUser function to show the first user immediately.\n        await this.showUser(this.currentUser);\n\n        // Ensure that the event listeners are all bound.\n        this.registerEventListeners();\n    }\n\n    /**\n     * Render the navigator itself.\n     *\n     * @returns {Promise}\n     */\n    renderNavigator() {\n        return Templates.renderForPromise(`${templatePath}/user_picker`, {});\n    }\n\n    /**\n     * Render the current user details for the picker.\n     *\n     * @param {Object} context The data used to render the user picker.\n     * @returns {Promise}\n     */\n    renderUserChange(context) {\n        return Templates.renderForPromise(`${templatePath}/user_picker/user`, context);\n    }\n\n    /**\n     * Show the specified user in the picker.\n     *\n     * @param {Object} user\n     */\n    async showUser(user) {\n        const [{html, js}] = await Promise.all([this.renderUserChange(user), this.showUserCallback(user)]);\n        const userRegion = this.root.querySelector(Selectors.regions.userRegion);\n        Templates.replaceNodeContents(userRegion, html, js);\n    }\n\n    /**\n     * Register the event listeners for the user picker.\n     */\n    async registerEventListeners() {\n        this.root.addEventListener('click', async e => {\n            const button = e.target.closest(Selectors.actions.changeUser);\n            const input = e.target.closest(Selectors.actions.searchUserInput);\n\n            const graderRegion = document.querySelector('[data-region=\"unified-grader\"]');\n            if (button) {\n                const result = await this.preChangeUserCallback(this.currentUser);\n                const spinner = addIconToContainerWithPromise(graderRegion);\n\n                if (!result.failed) {\n                    this.updateIndex(parseInt(button.dataset.direction));\n                    await this.showUser(this.currentUser);\n                }\n\n                spinner.resolve();\n            }\n            if (input) {\n                // Init a timeout variable to be used below\n                let timeout = null;\n                // Listen for keystroke events\n                input.onkeyup = () => {\n                    // Clear the timeout if it has already been set.\n                    clearTimeout(timeout);\n                    // Make a new timeout set to go off in 500ms\n                    timeout = setTimeout(async(userList) => {\n                        const userInput = input.value;\n                        let results = userList.filter((user) => {\n                            return user.fullname.toLowerCase().includes(userInput.toLowerCase());\n                        });\n                        await this.renderSearch(results);\n                        this.root.querySelector('[data-action=\"search-user-box\"]').addEventListener('click', async(e) => {\n                            e.preventDefault();\n                            const user = e.target.closest(Selectors.actions.selectUser);\n                            const foundUser = userList.findIndex(item => parseInt(item.id) === parseInt(user.dataset.userid));\n                            const result = await this.preChangeUserCallback(this.currentUser);\n                            const spinner = addIconToContainerWithPromise(graderRegion);\n\n                            if (!result.failed) {\n                                this.updateIndex(0, parseInt(foundUser));\n                                await this.showUser(this.currentUser);\n                            }\n                            spinner.resolve();\n                        });\n                    }, 300, this.userList);\n                };\n            }\n        });\n    }\n\n    /**\n     * Render the user search results.\n     */\n    async renderSearch(results) {\n        const {html, js} = await Templates.renderForPromise(`${templatePath}/user_picker/user_search`, results);\n        Templates.replaceNode(Selectors.actions.searchUserBox, html, js);\n    }\n    /**\n     * Update the current user index.\n     *\n     * @param {Number} direction\n     * @param {Number} specificIndex\n     * @returns {Number}}\n     */\n    updateIndex(direction, specificIndex = null) {\n        if (specificIndex) {\n            this.currentUserIndex = specificIndex;\n        } else {\n            this.currentUserIndex += direction;\n        }\n\n        // Loop around the edges.\n        if (this.currentUserIndex < 0) {\n            this.currentUserIndex = this.userList.length - 1;\n        } else if (this.currentUserIndex > this.userList.length - 1) {\n            this.currentUserIndex = 0;\n        }\n\n        return this.currentUserIndex;\n    }\n\n    /**\n     * Get the details of the user currently shown with the total number of users, and the 1-indexed count of the\n     * current user.\n     *\n     * @returns {Object}\n     */\n    get currentUser() {\n        return {\n            ...this.userList[this.currentUserIndex],\n            total: this.userList.length,\n            displayIndex: this.currentUserIndex + 1,\n        };\n    }\n\n    /**\n     * Get the root node for the User Picker.\n     *\n     * @returns {HTMLElement}\n     */\n    get rootNode() {\n        return this.root;\n    }\n}\n\n/**\n * Create a new user picker.\n *\n * @param {Array} users The list of users\n * @param {Function} showUserCallback The function to call to show a specific user\n * @param {Function} preChangeUserCallback The fucntion to call to save the grade for the current user\n * @param {Number} [currentUserID] The userid of the current user\n * @returns {UserPicker}\n */\nexport default async(users, showUserCallback, preChangeUserCallback, {\n        initialUserId = null,\n    } = {}\n) => {\n    const userPicker = new UserPicker(users, showUserCallback, preChangeUserCallback);\n    if (initialUserId) {\n        userPicker.setUserId(initialUserId);\n    }\n    await userPicker.render();\n\n    return userPicker;\n};\n"],"file":"user_picker.min.js"}