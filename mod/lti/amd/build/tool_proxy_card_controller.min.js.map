{"version":3,"sources":["../src/tool_proxy_card_controller.js"],"names":["define","$","ajax","notification","templates","toolProxy","ltiEvents","KEYS","str","SELECTORS","DELETE_BUTTON","CAPABILITIES_CONTAINER","ACTIVATE_BUTTON","getDeleteButton","element","find","getActivateButton","getTypeId","attr","clearAllAnnouncements","removeClass","startLoading","addClass","stopLoading","announceSuccess","promise","Deferred","setTimeout","resolve","announceFailure","deleteType","typeId","get_strings","key","component","done","strs","confirm","delete","remove","fail","exception","error","reject","activateToolType","data","proxyid","document","trigger","START_EXTERNAL_REGISTRATION","registerEventListeners","deleteButton","click","e","preventDefault","keypress","metaKey","shiftKey","altKey","ctrlKey","keyCode","ENTER","SPACE","activateButton","init"],"mappings":"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","file":"tool_proxy_card_controller.min.js","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Controls all of the behaviour and interaction with a tool type card. These are\n * listed on the LTI tool type management page.\n *\n * See template: mod_lti/tool_proxy_card\n *\n * @module     mod_lti/tool_proxy_card_controller\n * @class      tool_card_controller\n * @package    mod_lti\n * @copyright  2016 John Okely <john@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      3.1\n */\ndefine(['jquery', 'core/ajax', 'core/notification', 'core/templates', 'mod_lti/tool_proxy', 'mod_lti/events', 'mod_lti/keys',\n        'core/str'],\n        function($, ajax, notification, templates, toolProxy, ltiEvents, KEYS, str) {\n\n    var SELECTORS = {\n        DELETE_BUTTON: '.delete',\n        CAPABILITIES_CONTAINER: '.capabilities-container',\n        ACTIVATE_BUTTON: '.tool-card-footer a.activate',\n    };\n\n    // Timeout in seconds.\n    var ANNOUNCEMENT_TIMEOUT = 2000;\n\n    /**\n     * Return the delete button element.\n     *\n     * @method getDeleteButton\n     * @private\n     * @param {JQuery} element jQuery object representing the tool card.\n     * @return {JQuery} jQuery object\n     */\n    var getDeleteButton = function(element) {\n        return element.find(SELECTORS.DELETE_BUTTON);\n    };\n\n    /**\n     * Return the activate button for the type.\n     *\n     * @method getActivateButton\n     * @private\n     * @param {JQuery} element jQuery object representing the tool card.\n     * @return {JQuery}  jQuery object\n     */\n    var getActivateButton = function(element) {\n        return element.find(SELECTORS.ACTIVATE_BUTTON);\n    };\n\n    /**\n     * Get the type id.\n     *\n     * @method getTypeId\n     * @private\n     * @param {JQuery} element jQuery object representing the tool card.\n     * @return {String} Type ID\n     */\n    var getTypeId = function(element) {\n        return element.attr('data-proxy-id');\n    };\n\n    /**\n     * Stop any announcement currently visible on the card.\n     *\n     * @method clearAllAnnouncements\n     * @private\n     * @param {JQuery} element jQuery object representing the tool card.\n     */\n    var clearAllAnnouncements = function(element) {\n        element.removeClass('announcement loading success fail capabilities');\n    };\n\n    /**\n     * Show the loading announcement.\n     *\n     * @method startLoading\n     * @private\n     * @param {JQuery} element jQuery object representing the tool card.\n     */\n    var startLoading = function(element) {\n        clearAllAnnouncements(element);\n        element.addClass('announcement loading');\n    };\n\n    /**\n     * Hide the loading announcement.\n     *\n     * @method stopLoading\n     * @private\n     * @param {JQuery} element jQuery object representing the tool card.\n     */\n    var stopLoading = function(element) {\n        element.removeClass('announcement loading');\n    };\n\n    /**\n     * Show the success announcement. The announcement is only\n     * visible for 2 seconds.\n     *\n     * @method announceSuccess\n     * @private\n     * @param {JQuery} element jQuery object representing the tool card.\n     * @return {Promise} jQuery Deferred object\n     */\n    var announceSuccess = function(element) {\n        var promise = $.Deferred();\n\n        clearAllAnnouncements(element);\n        element.addClass('announcement success');\n        setTimeout(function() {\n            element.removeClass('announcement success');\n            promise.resolve();\n        }, ANNOUNCEMENT_TIMEOUT);\n\n        return promise;\n    };\n\n    /**\n     * Show the failure announcement. The announcement is only\n     * visible for 2 seconds.\n     *\n     * @method announceFailure\n     * @private\n     * @param {JQuery} element jQuery object representing the tool card.\n     * @return {Promise} jQuery Deferred object\n     */\n    var announceFailure = function(element) {\n        var promise = $.Deferred();\n\n        clearAllAnnouncements(element);\n        element.addClass('announcement fail');\n        setTimeout(function() {\n                element.removeClass('announcement fail');\n                promise.resolve();\n            }, ANNOUNCEMENT_TIMEOUT);\n\n        return promise;\n    };\n\n    /**\n     * Delete the tool type from the Moodle server. Triggers a success\n     * or failure announcement depending on the result.\n     *\n     * @method deleteType\n     * @private\n     * @param {JQuery} element jQuery object representing the tool card.\n     * @return {Promise} jQuery Deferred object\n     */\n    var deleteType = function(element) {\n        var promise = $.Deferred();\n        var typeId = getTypeId(element);\n        startLoading(element);\n\n        if (typeId === \"\") {\n            return $.Deferred().resolve();\n        }\n\n        str.get_strings([\n                {\n                    key: 'delete',\n                    component: 'mod_lti'\n                },\n                {\n                    key: 'delete_confirmation',\n                    component: 'mod_lti'\n                },\n                {\n                    key: 'delete',\n                    component: 'mod_lti'\n                },\n                {\n                    key: 'cancel',\n                    component: 'core'\n                },\n            ])\n            .done(function(strs) {\n                    notification.confirm(strs[0], strs[1], strs[2], strs[3], function() {\n                            toolProxy.delete(typeId)\n                                .done(function() {\n                                        stopLoading(element);\n                                        announceSuccess(element)\n                                            .done(function() {\n                                                    element.remove();\n                                                    promise.resolve();\n                                                })\n                                            .fail(notification.exception);\n                                    })\n                                .fail(function(error) {\n                                        announceFailure(element);\n                                        promise.reject(error);\n                                    });\n                    }, function() {\n                            stopLoading(element);\n                            promise.resolve();\n                        });\n                })\n            .fail(function(error) {\n                    stopLoading(element);\n                    notification.exception(error);\n                    promise.reject(error);\n                });\n\n        return promise;\n    };\n\n    /**\n     * The user wishes to activate this tool so show them the capabilities that\n     * they need to agree to or if there are none then set the tool type's state\n     * to active.\n     *\n     * @method activateToolType\n     * @private\n     * @param {JQuery} element jQuery object representing the tool card.\n     */\n    var activateToolType = function(element) {\n        var data = {proxyid: getTypeId(element)};\n        $(document).trigger(ltiEvents.START_EXTERNAL_REGISTRATION, data);\n    };\n\n    /**\n     * Sets up the listeners for user interaction on this tool type card.\n     *\n     * @method registerEventListeners\n     * @private\n     * @param {JQuery} element jQuery object representing the tool card.\n     */\n    var registerEventListeners = function(element) {\n        var deleteButton = getDeleteButton(element);\n        deleteButton.click(function(e) {\n                e.preventDefault();\n                deleteType(element);\n            });\n        deleteButton.keypress(function(e) {\n                if (!e.metaKey && !e.shiftKey && !e.altKey && !e.ctrlKey) {\n                    if (e.keyCode == KEYS.ENTER || e.keyCode == KEYS.SPACE) {\n                        e.preventDefault();\n                        deleteButton.click();\n                    }\n                }\n            });\n\n        var activateButton = getActivateButton(element);\n        activateButton.click(function(e) {\n                e.preventDefault();\n                activateToolType(element);\n            });\n        activateButton.keypress(function(e) {\n                if (!e.metaKey && !e.shiftKey && !e.altKey && !e.ctrlKey) {\n                    if (e.keyCode == KEYS.ENTER || e.keyCode == KEYS.SPACE) {\n                        e.preventDefault();\n                        activateButton.click();\n                    }\n                }\n            });\n    };\n\n    return /** @alias module:mod_lti/tool_card_controller */ {\n\n        /**\n         * Initialise this module.\n         *\n         * @param {JQuery} element jQuery object representing the tool card.\n         */\n        init: function(element) {\n            registerEventListeners(element);\n        }\n    };\n});\n"]}