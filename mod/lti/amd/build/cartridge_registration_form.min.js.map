{"version":3,"sources":["../src/cartridge_registration_form.js"],"names":["define","$","ajax","notification","toolType","ltiEvents","KEYS","str","SELECTORS","CARTRIDGE_URL","CONSUMER_KEY","SHARED_SECRET","REGISTRATION_FORM","REGISTRATION_SUBMIT_BUTTON","REGISTRATION_CANCEL_BUTTON","getCartridgeURL","attr","getSubmitButton","getCancelButton","getConsumerKey","val","getSharedSecret","startLoading","addClass","stopLoading","removeClass","isLoading","hasClass","submitCartridgeURL","url","consumerKey","sharedSecret","promise","create","cartridgeurl","key","secret","done","get_string","s","document","trigger","NEW_TOOL_TYPE","STOP_CARTRIDGE_REGISTRATION","REGISTRATION_FEEDBACK","message","fail","exception","error","always","registerEventListeners","form","submit","e","preventDefault","cancelButton","click","keypress","metaKey","shiftKey","altKey","ctrlKey","keyCode","ENTER","SPACE","init"],"mappings":"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","file":"cartridge_registration_form.min.js","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Encapsules the behavior for creating a tool type from a cartridge URL\n * in Moodle. Manages the UI while operations are occuring.\n *\n * See template: mod_lti/cartridge_registration_form\n *\n * @module     mod_lti/cartridge_registration_form\n * @class      cartridge_registration_form\n * @package    mod_lti\n * @copyright  2015 Ryan Wyllie <ryan@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      3.1\n */\ndefine(['jquery', 'core/ajax', 'core/notification', 'mod_lti/tool_type', 'mod_lti/events', 'mod_lti/keys', 'core/str'],\n        function($, ajax, notification, toolType, ltiEvents, KEYS, str) {\n\n    var SELECTORS = {\n        CARTRIDGE_URL: '#cartridge-url',\n        CONSUMER_KEY: '#registration-key',\n        SHARED_SECRET: '#registration-secret',\n        REGISTRATION_FORM: '#cartridge-registration-form',\n        REGISTRATION_SUBMIT_BUTTON: '#cartridge-registration-submit',\n        REGISTRATION_CANCEL_BUTTON: '#cartridge-registration-cancel',\n    };\n\n    /**\n     * Return the URL the user entered for the cartridge.\n     *\n     * @method getCartridgeURL\n     * @private\n     * @return {String}\n     */\n    var getCartridgeURL = function() {\n        return $(SELECTORS.REGISTRATION_FORM).attr('data-cartridge-url');\n    };\n\n    /**\n     * Return the submit button element.\n     *\n     * @method getSubmitButton\n     * @private\n     * @return {JQuery} jQuery object\n     */\n    var getSubmitButton = function() {\n        return $(SELECTORS.REGISTRATION_SUBMIT_BUTTON);\n    };\n\n    /**\n     * Return the cancel button element.\n     *\n     * @method getCancelButton\n     * @private\n     * @return {JQuery} jQuery object\n     */\n    var getCancelButton = function() {\n        return $(SELECTORS.REGISTRATION_CANCEL_BUTTON);\n    };\n\n    /**\n     * Return the value that the user entered for the consumer key.\n     *\n     * @method getConsumerKey\n     * @private\n     * @return {String} the value entered for consumer key.\n     */\n    var getConsumerKey = function() {\n        return $(SELECTORS.CONSUMER_KEY).val();\n    };\n\n    /**\n     * Return the value that the user entered for the shared secret.\n     *\n     * @method getSharedSecret\n     * @private\n     * @return {String} the value entered for shared secret\n     */\n    var getSharedSecret = function() {\n        return $(SELECTORS.SHARED_SECRET).val();\n    };\n\n    /**\n     * Trigger a visual loading indicator.\n     *\n     * @method startLoading\n     * @private\n     */\n    var startLoading = function() {\n        getSubmitButton().addClass('loading');\n    };\n\n    /**\n     * Stop the visual loading indicator.\n     *\n     * @method stopLoading\n     * @private\n     */\n    var stopLoading = function() {\n        getSubmitButton().removeClass('loading');\n    };\n\n    /**\n     * Check if the page is currently loading.\n     *\n     * @method isLoading\n     * @private\n     * @return {Boolean}\n     */\n    var isLoading = function() {\n        return getSubmitButton().hasClass('loading');\n    };\n\n    /**\n     * Create a tool type from the cartridge URL that the user input. This will\n     * send an ajax request to the Moodle server to create the Type. The request will\n     * include the consumer key and secret, if any.\n     *\n     * On success the page will be re-rendered to take the user back to the original\n     * page with the list of tools and an alert notifying them of success.\n     *\n     * @method submitCartridgeURL\n     * @private\n     * @return {Promise} jQuery Deferred object\n     */\n    var submitCartridgeURL = function() {\n        if (isLoading()) {\n            return false;\n        }\n\n        var url = getCartridgeURL();\n        // No URL? Do nothing.\n        if (url === \"\") {\n            return false;\n        }\n\n        startLoading();\n        var consumerKey = getConsumerKey();\n        var sharedSecret = getSharedSecret();\n        var promise = toolType.create({cartridgeurl: url, key: consumerKey, secret: sharedSecret});\n\n        promise.done(function() {\n            str.get_string('successfullycreatedtooltype', 'mod_lti').done(function(s) {\n                $(document).trigger(ltiEvents.NEW_TOOL_TYPE);\n                $(document).trigger(ltiEvents.STOP_CARTRIDGE_REGISTRATION);\n                $(document).trigger(ltiEvents.REGISTRATION_FEEDBACK, {\n                    message: s\n                });\n            }).fail(notification.exception);\n        }).fail(function() {\n            str.get_string('failedtocreatetooltype', 'mod_lti').done(function(s) {\n                $(document).trigger(ltiEvents.NEW_TOOL_TYPE);\n                $(document).trigger(ltiEvents.STOP_CARTRIDGE_REGISTRATION);\n                $(document).trigger(ltiEvents.REGISTRATION_FEEDBACK, {\n                    message: s,\n                    error: true\n                });\n            }).fail(notification.exception);\n        }).always(function() {\n          stopLoading();\n        });\n\n        return promise;\n    };\n\n    /**\n     * Sets up the listeners for user interaction on the page.\n     *\n     * @method registerEventListeners\n     * @private\n     */\n    var registerEventListeners = function() {\n        var form = $(SELECTORS.REGISTRATION_FORM);\n        form.submit(function(e) {\n            e.preventDefault();\n            submitCartridgeURL();\n        });\n\n        var cancelButton = getCancelButton();\n        cancelButton.click(function(e) {\n            e.preventDefault();\n            $(document).trigger(ltiEvents.STOP_CARTRIDGE_REGISTRATION);\n        });\n        cancelButton.keypress(function(e) {\n            if (!e.metaKey && !e.shiftKey && !e.altKey && !e.ctrlKey) {\n                if (e.keyCode == KEYS.ENTER || e.keyCode == KEYS.SPACE) {\n                    e.preventDefault();\n                    cancelButton.click();\n                }\n            }\n        });\n    };\n\n    return /** @alias module:mod_lti/cartridge_registration_form */ {\n\n        /**\n         * Initialise this module.\n         */\n        init: function() {\n            registerEventListeners();\n        }\n    };\n});\n"]}