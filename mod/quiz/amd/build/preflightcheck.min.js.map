{"version":3,"sources":["../src/preflightcheck.js"],"names":["define","$","Y","t","confirmDialogue","init","startButton","confirmationTitle","confirmationForm","popupoptions","finalStartButton","use","one","M","core","dialogue","headerContent","bodyContent","draggable","visible","center","modal","width","extraClasses","on","displayDialogue","hideDialogue","get","launchQuizPopup","e","halt","show","hide","core_formchangechecker","reset_form_dirty_state","form","target","ancestor","window","openpopup","url","IO","stringify","replace","windowname","options","fullscreen"],"mappings":"aA4BAA,iCAAO,CAAC,QAAD,CAAW,UAAX,CAAP,CAA+B,SAASC,CAAT,CAAYC,CAAZ,CAAe,CAK1C,GAAIC,GAAI,CACJC,gBAAiB,IADb,CAWJC,KAAM,cAASC,WAAT,CAAsBC,iBAAtB,CAAyCC,gBAAzC,CAA2DC,YAA3D,CAAyE,CAC3E,GAAIC,kBAAmBJ,WAAvB,CAEAJ,EAAES,GAAF,CAAM,0BAAN,CAAkC,UAAW,CACrCT,EAAEU,GAAF,CAAMJ,gBAAN,CADqC,GAErCL,EAAEC,eAAF,CAAoB,GAAIS,GAAEC,IAAF,CAAOC,QAAX,CAAoB,CACpCC,cAAeT,iBADqB,CAEpCU,YAAaf,EAAEU,GAAF,CAAMJ,gBAAN,CAFuB,CAGpCU,YAHoC,CAIpCC,UAJoC,CAKpCC,SALoC,CAMpCC,QANoC,CAOpCC,MAAO,IAP6B,CAQpCC,aAAc,CAAC,0BAAD,CARsB,CAApB,CAFiB,CAarCrB,EAAEU,GAAF,CAAMN,WAAN,EAAmBkB,EAAnB,CAAsB,OAAtB,CAA+BrB,EAAEsB,eAAjC,CAbqC,CAcrCvB,EAAEU,GAAF,CAAM,YAAN,EAAoBY,EAApB,CAAuB,OAAvB,CAAgCrB,EAAEuB,YAAlC,CAdqC,CAgBrChB,iBAAmBP,EAAEC,eAAF,CAAkBuB,GAAlB,CAAsB,aAAtB,EAAqCf,GAArC,CAAyC,uBAAzC,CAhBkB,EAmBrCH,YAnBqC,EAoBrCP,EAAEU,GAAF,CAAMF,gBAAN,EAAwBc,EAAxB,CAA2B,OAA3B,CAAoCrB,EAAEyB,eAAtC,CAAuDzB,CAAvD,CAA0DM,YAA1D,CAEP,CAtBD,CAuBH,CArCG,CA2CJgB,gBAAiB,yBAASI,CAAT,CAAY,CACrBA,CADqB,EAErBA,EAAEC,IAAF,EAFqB,CAIzB3B,EAAEC,eAAF,CAAkB2B,IAAlB,EACH,CAhDG,CAsDJL,aAAc,sBAASG,CAAT,CAAY,CAClBA,CADkB,EAElBA,EAAEC,IAAF,EAFkB,CAItB3B,EAAEC,eAAF,CAAkB4B,IAAlB,CAAuBH,CAAvB,CACH,CA3DG,CAkEJD,gBAAiB,yBAASC,CAAT,CAAYpB,YAAZ,CAA0B,CACvCoB,EAAEC,IAAF,EADuC,CAEvC5B,EAAES,GAAF,CAAM,+BAAN,CAAuC,SAAvC,CAAkD,UAAW,CACzDE,EAAEoB,sBAAF,CAAyBC,sBAAzB,EADyD,CAEzD,GAAIC,MAAON,EAAEO,MAAF,CAASC,QAAT,CAAkB,MAAlB,CAAX,CACAC,OAAOC,SAAP,CAAiBV,CAAjB,CAAoB,CAChBW,IAAKL,KAAKR,GAAL,CAAS,QAAT,EAAqB,GAArB,CAA2BzB,EAAEuC,EAAF,CAAKC,SAAL,CAAeP,IAAf,EAAqBQ,OAArB,CAA6B,WAA7B,CAA0C,IAA1C,CADhB,CAEhBC,WAAY,WAFI,CAGhBC,QAASpC,YAHO,CAIhBqC,aAJgB,CAApB,CAMH,CATD,CAUH,CA9EG,CAAR,CAiFA,MAAO3C,EACV,CAvFD,C","file":"preflightcheck.min.js","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This class manages the confirmation pop-up (also called the pre-flight check)\n * that is sometimes shown when a use clicks the start attempt button.\n *\n * This is also responsible for opening the pop-up window, if the quiz requires to be in one.\n *\n * @module    mod_quiz/preflightcheck\n * @class     preflightcheck\n * @package   mod_quiz\n * @copyright 2016 The Open University\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since     3.1\n */\ndefine(['jquery', 'core/yui'], function($, Y) {\n\n    /**\n     * @alias module:mod_quiz/preflightcheck\n     */\n    var t = {\n        confirmDialogue: null,\n\n        /**\n         * Initialise the start attempt button.\n         *\n         * @param {String} startButton the id of the start attempt button that we will be enhancing.\n         * @param {String} confirmationTitle the title of the dialogue.\n         * @param {String} confirmationForm selector for the confirmation form to show in the dialogue.\n         * @param {String} popupoptions If not null, the quiz should be launced in a pop-up.\n         */\n        init: function(startButton, confirmationTitle, confirmationForm, popupoptions) {\n            var finalStartButton = startButton;\n\n            Y.use('moodle-core-notification', function() {\n                if (Y.one(confirmationForm)) {\n                    t.confirmDialogue = new M.core.dialogue({\n                        headerContent: confirmationTitle,\n                        bodyContent: Y.one(confirmationForm),\n                        draggable: true,\n                        visible: false,\n                        center: true,\n                        modal: true,\n                        width: null,\n                        extraClasses: ['mod_quiz_preflight_popup']\n                    });\n\n                    Y.one(startButton).on('click', t.displayDialogue);\n                    Y.one('#id_cancel').on('click', t.hideDialogue);\n\n                    finalStartButton = t.confirmDialogue.get('boundingBox').one('[name=\"submitbutton\"]');\n                }\n\n                if (popupoptions) {\n                    Y.one(finalStartButton).on('click', t.launchQuizPopup, t, popupoptions);\n                }\n            });\n        },\n\n        /**\n         * Display the dialogue.\n         * @param {Y.EventFacade} e the event being responded to, if any.\n         */\n        displayDialogue: function(e) {\n            if (e) {\n                e.halt();\n            }\n            t.confirmDialogue.show();\n        },\n\n        /**\n         * Hide the dialogue.\n         * @param {Y.EventFacade} e the event being responded to, if any.\n         */\n        hideDialogue: function(e) {\n            if (e) {\n                e.halt();\n            }\n            t.confirmDialogue.hide(e);\n        },\n\n        /**\n         * Event handler for the quiz start attempt button.\n          * @param {Event} e the event being responded to\n          * @param {Object} popupoptions\n         */\n        launchQuizPopup: function(e, popupoptions) {\n            e.halt();\n            Y.use('moodle-core-formchangechecker', 'io-form', function() {\n                M.core_formchangechecker.reset_form_dirty_state();\n                var form = e.target.ancestor('form');\n                window.openpopup(e, {\n                    url: form.get('action') + '?' + Y.IO.stringify(form).replace(/\\bcancel=/, 'x='),\n                    windowname: 'quizpopup',\n                    options: popupoptions,\n                    fullscreen: true,\n                });\n            });\n        }\n    };\n\n    return t;\n});\n"]}