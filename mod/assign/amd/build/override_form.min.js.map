{"version":3,"sources":["../src/override_form.js"],"names":["init","formId","selectElementName","duplicateActionElementSelector","formModified","form","document","getElementById","isDuplicate","querySelector","on","e","target","getAttribute","resetElement","createElement","setAttribute","appendChild","userChangeElement","M","core_formchangechecker","reset_form_dirty_state","submit"],"mappings":"kJAsBA,uDAEO,GAAMA,CAAAA,CAAI,CAAG,SAACC,CAAD,CAASC,CAAT,CAA4BC,CAA5B,CAA+D,IAC3EC,CAAAA,CAAY,GAD+D,CAEzEC,CAAI,CAAGC,QAAQ,CAACC,cAAT,CAAwBN,CAAxB,CAFkE,CAIzEO,CAAW,CAA0D,IAAvD,GAAAH,CAAI,CAACI,aAAL,CAAmBN,CAAnB,CAJ2D,CAM/E,cAAEE,CAAF,EAAQK,EAAR,CAAW,QAAX,CAAqB,SAACC,CAAD,CAAO,CAExB,GAAMC,CAAAA,CAAM,CAAGD,CAAC,CAACC,MAAjB,CAEA,GAAIA,CAAM,CAACC,YAAP,CAAoB,MAApB,IAAgCX,CAApC,CAAuD,CAInD,GAAI,CAACE,CAAD,EAAiB,CAACI,CAAtB,CAAmC,CAK/B,GAAMM,CAAAA,CAAY,CAAGR,QAAQ,CAACS,aAAT,CAAuB,OAAvB,CAArB,CACAD,CAAY,CAACE,YAAb,CAA0B,MAA1B,CAAkC,QAAlC,EACAF,CAAY,CAACE,YAAb,CAA0B,MAA1B,CAAkC,aAAlC,EACAF,CAAY,CAACE,YAAb,CAA0B,OAA1B,CAAmC,OAAnC,EACAX,CAAI,CAACY,WAAL,CAAiBH,CAAjB,CACH,CAVD,IAUO,CAGH,GAAMI,CAAAA,CAAiB,CAAGZ,QAAQ,CAACS,aAAT,CAAuB,OAAvB,CAA1B,CACAG,CAAiB,CAACF,YAAlB,CAA+B,MAA/B,CAAuC,QAAvC,EACAE,CAAiB,CAACF,YAAlB,CAA+B,MAA/B,CAAuC,YAAvC,EACAE,CAAiB,CAACF,YAAlB,CAA+B,OAA/B,KACAX,CAAI,CAACY,WAAL,CAAiBC,CAAjB,CACH,CAED,GAAwC,WAApC,QAAOC,CAAAA,CAAC,CAACC,sBAAb,CAAqD,CACjDD,CAAC,CAACC,sBAAF,CAAyBC,sBAAzB,EACH,CAEDhB,CAAI,CAACiB,MAAL,EACH,CA7BD,IA6BO,CAGHlB,CAAY,GACf,CACJ,CAtCD,CAuCH,CA7CM,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A javascript module to enhance the override form.\n *\n * @copyright  2019 Ryan Wyllie <ryan@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\n\nexport const init = (formId, selectElementName, duplicateActionElementSelector) => {\n    let formModified = false;\n    const form = document.getElementById(formId);\n    // Is this form for duplicating an override?\n    const isDuplicate = form.querySelector(duplicateActionElementSelector) !== null;\n\n    $(form).on('change', (e) => {\n        // Grab the element that was modified.\n        const target = e.target;\n\n        if (target.getAttribute('name') === selectElementName) {\n            // If the modified element is the user selector then we need to reload the\n            // page in order to update the user default values.\n\n            if (!formModified && !isDuplicate) {\n                // If the form hasn't been changed (other than the user picker) and this isn't\n                // a duplicate override form then we should also reset the form date elements to\n                // the user defaults. Append the \"resetbutton\" form element to tell the server\n                // to reset the values.\n                const resetElement = document.createElement('input');\n                resetElement.setAttribute('type', 'hidden');\n                resetElement.setAttribute('name', 'resetbutton');\n                resetElement.setAttribute('value', 'reset');\n                form.appendChild(resetElement);\n            } else {\n                // We add a hidden \"userchange\" element to the form before submitting\n                // to tell the server why the form was submitted.\n                const userChangeElement = document.createElement('input');\n                userChangeElement.setAttribute('type', 'hidden');\n                userChangeElement.setAttribute('name', 'userchange');\n                userChangeElement.setAttribute('value', true);\n                form.appendChild(userChangeElement);\n            }\n\n            if (typeof M.core_formchangechecker !== 'undefined') {\n                M.core_formchangechecker.reset_form_dirty_state();\n            }\n\n            form.submit();\n        } else {\n            // The user has modified something other than the user picker so the form is\n            // dirty and we shouldn't reset the values if they modify the user selector.\n            formModified = true;\n        }\n    });\n};"],"file":"override_form.min.js"}