{"version":3,"sources":["../src/shapes.js"],"names":["define","Math","max","min","abs","round","Point","x","y","prototype","toString","move","dx","dy","offset","offsetX","offsetY","parse","coordinates","bits","split","length","Error","Shape","label","centre","getType","getCoordinates","edit","normalizeShape","makeSvg","updateSvg","makeSimilarCircle","makeSimilarRectangle","makeSimilarPolygon","getHandlePositions","Circle","radius","call","svg","svgEl","createSvgShapeGroup","childNodes","setAttribute","textContent","match","maxX","maxY","handleIndex","limit","Rectangle","Polygon","moveHandle","editHandles","width","height","size","points","slice","i","replace","push","bbXMin","bbXMax","bbYMin","bbYMax","addNewPointAfter","pointIndex","splice","p","minX","minY","NullShape","createSvgElement","tagName","ownerDocument","createElementNS","appendChild","make","shapeType","getSimilar","shape"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/* eslint max-depth: [\"error\", 8] */\n\n/**\n * Library of classes for handling simple shapes.\n *\n * These classes can represent shapes, let you alter them, can go to and from a string\n * representation, and can give you an SVG representation.\n *\n * @package    qtype_ddmarker\n * @subpackage shapes\n * @copyright  2018 The Open University\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(function() {\n\n    \"use strict\";\n\n    /**\n     * A point, with x and y coordinates.\n     *\n     * @param {int} x centre X.\n     * @param {int} y centre Y.\n     * @constructor\n     */\n    function Point(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    /**\n     * Standard toString method.\n     * @returns {string} \"x;y\";\n     */\n    Point.prototype.toString = function() {\n        return this.x + ',' + this.y;\n    };\n\n    /**\n     * Move a point\n     * @param {int} dx x offset\n     * @param {int} dy y offset\n     */\n    Point.prototype.move = function(dx, dy) {\n        this.x += dx;\n        this.y += dy;\n    };\n\n    /**\n     * Return a new point that is a certain position relative to this one.\n     *\n     * @param {(int|Point)} offsetX if a point, offset by this points coordinates, else and int x offset.\n     * @param {int} [offsetY] used if offsetX is an int, the corresponding y offset.\n     * @return {Point} the new point.\n     */\n    Point.prototype.offset = function(offsetX, offsetY) {\n        if (offsetX instanceof Point) {\n            offsetY = offsetX.y;\n            offsetX = offsetX.x;\n        }\n        return new Point(this.x + offsetX, this.y + offsetY);\n    };\n\n    /**\n     * Make a point from the string representation.\n     *\n     * @param {String} coordinates \"x,y\".\n     * @return {Point} the point. Throws an exception if input is not valid.\n     */\n    Point.parse = function(coordinates) {\n        var bits = coordinates.split(',');\n        if (bits.length !== 2) {\n            throw new Error(coordinates + ' is not a valid point');\n        }\n        return new Point(Math.round(bits[0]), Math.round(bits[1]));\n    };\n\n\n    /**\n     * Shape constructor. Abstract class to represent the different types of drop zone shapes.\n     *\n     * @param {String} [label] name of this area.\n     * @param {int} [x] centre X.\n     * @param {int} [y] centre Y.\n     * @constructor\n     */\n    function Shape(label, x, y) {\n        this.label = label;\n        this.centre = new Point(x || 0, y || 0);\n    }\n\n    /**\n     * Get the type of shape.\n     *\n     * @return {String} 'circle', 'rectangle' or 'polygon';\n     */\n    Shape.prototype.getType = function() {\n        throw new Error('Not implemented.');\n    };\n\n    /**\n     * Get the string representation of this shape.\n     *\n     * @return {String} coordinates as they need to be typed into the form.\n     */\n    Shape.prototype.getCoordinates = function() {\n        throw new Error('Not implemented.');\n    };\n\n    /**\n     * Update the shape from the string representation.\n     *\n     * @param {String} coordinates in the form returned by getCoordinates.\n     * @return {boolean} true if the string could be parsed and the shape updated, else false.\n     */\n    Shape.prototype.parse = function(coordinates) {\n        void (coordinates);\n        throw new Error('Not implemented.');\n    };\n\n    /**\n     * Move the entire shape by this offset.\n     *\n     * @param {int} dx x offset.\n     * @param {int} dy y offset.\n     * @param {int} maxX ensure that after editing, the shape lies between 0 and maxX on the x-axis.\n     * @param {int} maxY ensure that after editing, the shape lies between 0 and maxX on the y-axis.\n     */\n    Shape.prototype.move = function(dx, dy, maxX, maxY) {\n        void (maxY);\n    };\n\n    /**\n     * Move one of the edit handles by this offset.\n     *\n     * @param {int} handleIndex which handle was moved.\n     * @param {int} dx x offset.\n     * @param {int} dy y offset.\n     * @param {int} maxX ensure that after editing, the shape lies between 0 and maxX on the x-axis.\n     * @param {int} maxY ensure that after editing, the shape lies between 0 and maxX on the y-axis.\n     */\n    Shape.prototype.edit = function(handleIndex, dx, dy, maxX, maxY) {\n        void (maxY);\n    };\n\n    /**\n     * Update the properties of this shape after a sequence of edits.\n     *\n     * For example make sure the circle radius is positive, of the polygon centre is centred.\n     */\n    Shape.prototype.normalizeShape = function() {\n        void (1); // To make CiBoT happy.\n    };\n\n    /**\n     * Get the string representation of this shape.\n     *\n     * @param {SVGElement} svg the SVG graphic to add this shape to.\n     * @return {SVGElement} SVG representation of this shape.\n     */\n    Shape.prototype.makeSvg = function(svg) {\n        void (svg);\n        throw new Error('Not implemented.');\n    };\n\n    /**\n     * Update the SVG representation of this shape.\n     *\n     * @param {SVGElement} svgEl the SVG representation of this shape.\n     */\n    Shape.prototype.updateSvg = function(svgEl) {\n        void (svgEl);\n    };\n\n    /**\n     * Make a circle similar to this shape.\n     *\n     * @return {Circle} a circle that is about the same size and position as this shape.\n     */\n    Shape.prototype.makeSimilarCircle = function() {\n        throw new Error('Not implemented.');\n    };\n\n    /**\n     * Make a rectangle similar to this shape.\n     *\n     * @return {Rectangle} a rectangle that is about the same size and position as this shape.\n     */\n    Shape.prototype.makeSimilarRectangle = function() {\n        throw new Error('Not implemented.');\n    };\n\n    /**\n     * Make a polygon similar to this shape.\n     *\n     * @return {Polygon} a polygon that is about the same size and position as this shape.\n     */\n    Shape.prototype.makeSimilarPolygon = function() {\n        throw new Error('Not implemented.');\n    };\n\n    /**\n     * Get the handles that should be offered to edit this shape, or null if not appropriate.\n     *\n     * @return {[Object]} with properties moveHandle {Point} and editHandles {Point[]}\n     */\n    Shape.prototype.getHandlePositions = function() {\n        return null;\n    };\n\n\n    /**\n     * A shape that is a circle.\n     *\n     * @param {String} label name of this area.\n     * @param {int} [x] centre X.\n     * @param {int} [y] centre Y.\n     * @param {int} [radius] radius.\n     * @constructor\n     */\n    function Circle(label, x, y, radius) {\n        Shape.call(this, label, x, y);\n        this.radius = radius || 15;\n    }\n    Circle.prototype = new Shape();\n\n    Circle.prototype.getType = function() {\n        return 'circle';\n    };\n\n    Circle.prototype.getCoordinates = function() {\n        return this.centre + ';' + Math.abs(this.radius);\n    };\n\n    Circle.prototype.makeSvg = function(svg) {\n        var svgEl = createSvgShapeGroup(svg, 'circle');\n        this.updateSvg(svgEl);\n        return svgEl;\n    };\n\n    Circle.prototype.updateSvg = function(svgEl) {\n        svgEl.childNodes[0].setAttribute('cx', this.centre.x);\n        svgEl.childNodes[0].setAttribute('cy', this.centre.y);\n        svgEl.childNodes[0].setAttribute('r', Math.abs(this.radius));\n        svgEl.childNodes[1].setAttribute('x', this.centre.x);\n        svgEl.childNodes[1].setAttribute('y', this.centre.y + 15);\n        svgEl.childNodes[1].textContent = this.label;\n    };\n\n    Circle.prototype.parse = function(coordinates) {\n        if (!coordinates.match(/^\\d+,\\d+;\\d+$/)) {\n            return false;\n        }\n\n        var bits = coordinates.split(';');\n        this.centre = Point.parse(bits[0]);\n        this.radius = Math.round(bits[1]);\n        return true;\n    };\n\n    Circle.prototype.move = function(dx, dy, maxX, maxY) {\n        this.centre.move(dx, dy);\n        if (this.centre.x < this.radius) {\n            this.centre.x = this.radius;\n        }\n        if (this.centre.x > maxX - this.radius) {\n            this.centre.x = maxX - this.radius;\n        }\n        if (this.centre.y < this.radius) {\n            this.centre.y = this.radius;\n        }\n        if (this.centre.y > maxY - this.radius) {\n            this.centre.y = maxY - this.radius;\n        }\n    };\n\n    Circle.prototype.edit = function(handleIndex, dx, dy, maxX, maxY) {\n        this.radius += dx;\n        var limit = Math.min(this.centre.x, this.centre.y, maxX - this.centre.x, maxY - this.centre.y);\n        if (this.radius > limit) {\n            this.radius = limit;\n        }\n        if (this.radius < -limit) {\n            this.radius = -limit;\n        }\n    };\n\n    /**\n     * Update the properties of this shape after a sequence of edits.\n     *\n     * For example make sure the circle radius is positive, of the polygon centre is centred.\n     */\n    Circle.prototype.normalizeShape = function() {\n        this.radius = Math.abs(this.radius);\n    };\n\n    Circle.prototype.makeSimilarRectangle = function() {\n        return new Rectangle(this.label,\n                this.centre.x - this.radius, this.centre.y - this.radius,\n                this.radius * 2, this.radius * 2);\n    };\n\n    Circle.prototype.makeSimilarPolygon = function() {\n        // We make a similar square, so if you go to and from Rectangle afterwards, it is loss-less.\n        return new Polygon(this.label, [\n                this.centre.offset(-this.radius, -this.radius), this.centre.offset(-this.radius, this.radius),\n                this.centre.offset(this.radius, this.radius), this.centre.offset(this.radius, -this.radius)]);\n    };\n\n    Circle.prototype.getHandlePositions = function() {\n        return {\n            moveHandle: this.centre,\n            editHandles: [this.centre.offset(this.radius, 0)]\n        };\n    };\n\n\n    /**\n     * A shape that is a rectangle.\n     *\n     * @param {String} label name of this area.\n     * @param {int} [x] top left X.\n     * @param {int} [y] top left Y.\n     * @param {int} [width] width.\n     * @param {int} [height] height.\n     * @constructor\n     */\n    function Rectangle(label, x, y, width, height) {\n        Shape.call(this, label, x, y);\n        this.width = width || 30;\n        this.height = height || 30;\n    }\n    Rectangle.prototype = new Shape();\n\n    Rectangle.prototype.getType = function() {\n        return 'rectangle';\n    };\n\n    Rectangle.prototype.getCoordinates = function() {\n        return this.centre + ';' + this.width + ',' + this.height;\n    };\n\n    Rectangle.prototype.makeSvg = function(svg) {\n        var svgEl = createSvgShapeGroup(svg, 'rect');\n        this.updateSvg(svgEl);\n        return svgEl;\n    };\n\n    Rectangle.prototype.updateSvg = function(svgEl) {\n        if (this.width >= 0) {\n            svgEl.childNodes[0].setAttribute('x', this.centre.x);\n            svgEl.childNodes[0].setAttribute('width', this.width);\n        } else {\n            svgEl.childNodes[0].setAttribute('x', this.centre.x + this.width);\n            svgEl.childNodes[0].setAttribute('width', -this.width);\n        }\n        if (this.height >= 0) {\n            svgEl.childNodes[0].setAttribute('y', this.centre.y);\n            svgEl.childNodes[0].setAttribute('height', this.height);\n        } else {\n            svgEl.childNodes[0].setAttribute('y', this.centre.y + this.height);\n            svgEl.childNodes[0].setAttribute('height', -this.height);\n        }\n\n        svgEl.childNodes[1].setAttribute('x', this.centre.x + this.width / 2);\n        svgEl.childNodes[1].setAttribute('y', this.centre.y + this.height / 2 + 15);\n        svgEl.childNodes[1].textContent = this.label;\n    };\n\n    Rectangle.prototype.parse = function(coordinates) {\n        if (!coordinates.match(/^\\d+,\\d+;\\d+,\\d+$/)) {\n            return false;\n        }\n\n        var bits = coordinates.split(';');\n        this.centre = Point.parse(bits[0]);\n        var size = Point.parse(bits[1]);\n        this.width = size.x;\n        this.height = size.y;\n        return true;\n    };\n\n    Rectangle.prototype.move = function(dx, dy, maxX, maxY) {\n        this.centre.move(dx, dy);\n        if (this.centre.x < 0) {\n            this.centre.x = 0;\n        }\n        if (this.centre.x > maxX - this.width) {\n            this.centre.x = maxX - this.width;\n        }\n        if (this.centre.y < 0) {\n            this.centre.y = 0;\n        }\n        if (this.centre.y > maxY - this.height) {\n            this.centre.y = maxY - this.height;\n        }\n    };\n\n    Rectangle.prototype.edit = function(handleIndex, dx, dy, maxX, maxY) {\n        this.width += dx;\n        this.height += dy;\n        if (this.width < -this.centre.x) {\n            this.width = -this.centre.x;\n        }\n        if (this.width > maxX - this.centre.x) {\n            this.width = maxX - this.centre.x;\n        }\n        if (this.height < -this.centre.y) {\n            this.height = -this.centre.y;\n        }\n        if (this.height > maxY - this.centre.y) {\n            this.height = maxY - this.centre.y;\n        }\n    };\n\n    /**\n     * Update the properties of this shape after a sequence of edits.\n     *\n     * For example make sure the circle radius is positive, of the polygon centre is centred.\n     */\n    Rectangle.prototype.normalizeShape = function() {\n        if (this.width < 0) {\n            this.centre.x += this.width;\n            this.width = -this.width;\n        }\n        if (this.height < 0) {\n            this.centre.y += this.height;\n            this.height = -this.height;\n        }\n    };\n\n    Rectangle.prototype.makeSimilarCircle = function() {\n        return new Circle(this.label,\n                Math.round(this.centre.x + this.width / 2),\n                Math.round(this.centre.y + this.height / 2),\n                Math.round((this.width + this.height) / 4));\n    };\n\n    Rectangle.prototype.makeSimilarPolygon = function() {\n        return new Polygon(this.label, [\n            this.centre, this.centre.offset(0, this.height),\n            this.centre.offset(this.width, this.height), this.centre.offset(this.width, 0)]);\n    };\n\n    Rectangle.prototype.getHandlePositions = function() {\n        return {\n            moveHandle: this.centre.offset(this.width / 2, this.height / 2),\n            editHandles: [this.centre.offset(this.width, this.height)]\n        };\n    };\n\n\n    /**\n     * A shape that is a polygon.\n     *\n     * @param {String} label name of this area.\n     * @param {Point[]} [points] position of the vertices relative to (centreX, centreY).\n     *      each object in the array should have two\n     * @constructor\n     */\n    function Polygon(label, points) {\n        Shape.call(this, label, 0, 0);\n        this.points = points ? points.slice() : [new Point(10, 10), new Point(40, 10), new Point(10, 40)];\n        this.normalizeShape();\n    }\n    Polygon.prototype = new Shape();\n\n    Polygon.prototype.getType = function() {\n        return 'polygon';\n    };\n\n    Polygon.prototype.getCoordinates = function() {\n        var coordinates = '';\n        for (var i = 0; i < this.points.length; i++) {\n            coordinates += this.centre.offset(this.points[i]) + ';';\n        }\n        return coordinates.slice(0, coordinates.length - 1); // Strip off the last ';'.\n    };\n\n    Polygon.prototype.makeSvg = function(svg) {\n        var svgEl = createSvgShapeGroup(svg, 'polygon');\n        this.updateSvg(svgEl);\n        return svgEl;\n    };\n\n    Polygon.prototype.updateSvg = function(svgEl) {\n        svgEl.childNodes[0].setAttribute('points', this.getCoordinates().replace(/[,;]/g, ' '));\n        svgEl.childNodes[1].setAttribute('x', this.centre.x);\n        svgEl.childNodes[1].setAttribute('y', this.centre.y + 15);\n        svgEl.childNodes[1].textContent = this.label;\n    };\n\n    Polygon.prototype.parse = function(coordinates) {\n        if (!coordinates.match(/^\\d+,\\d+(?:;\\d+,\\d+)*$/)) {\n            return false;\n        }\n\n        var bits = coordinates.split(';');\n        var points = [];\n        for (var i = 0; i < bits.length; i++) {\n            points.push(Point.parse(bits[i]));\n        }\n\n        this.points = points;\n        this.centre.x = 0;\n        this.centre.y = 0;\n        this.normalizeShape();\n\n        return true;\n    };\n\n    Polygon.prototype.move = function(dx, dy, maxX, maxY) {\n        this.centre.move(dx, dy);\n        var bbXMin = maxX,\n            bbXMax = 0,\n            bbYMin = maxY,\n            bbYMax = 0;\n        // Computer centre.\n        for (var i = 0; i < this.points.length; i++) {\n            bbXMin = Math.min(bbXMin, this.points[i].x);\n            bbXMax = Math.max(bbXMax, this.points[i].x);\n            bbYMin = Math.min(bbYMin, this.points[i].y);\n            bbYMax = Math.max(bbYMax, this.points[i].y);\n        }\n        if (this.centre.x < -bbXMin) {\n            this.centre.x = -bbXMin;\n        }\n        if (this.centre.x > maxX - bbXMax) {\n            this.centre.x = maxX - bbXMax;\n        }\n        if (this.centre.y < -bbYMin) {\n            this.centre.y = -bbYMin;\n        }\n        if (this.centre.y > maxY - bbYMax) {\n            this.centre.y = maxY - bbYMax;\n        }\n    };\n\n    Polygon.prototype.edit = function(handleIndex, dx, dy, maxX, maxY) {\n        this.points[handleIndex].move(dx, dy);\n        if (this.points[handleIndex].x < -this.centre.x) {\n            this.points[handleIndex].x = -this.centre.x;\n        }\n        if (this.points[handleIndex].x > maxX - this.centre.x) {\n            this.points[handleIndex].x = maxX - this.centre.x;\n        }\n        if (this.points[handleIndex].y < -this.centre.y) {\n            this.points[handleIndex].y = -this.centre.y;\n        }\n        if (this.points[handleIndex].y > maxY - this.centre.y) {\n            this.points[handleIndex].y = maxY - this.centre.y;\n        }\n    };\n\n    /**\n     * Add a new point after the given point, with the same co-ordinates.\n     *\n     * This does not automatically normalise.\n     *\n     * @param {int} pointIndex the index of the vertex after which to insert this new one.\n     */\n    Polygon.prototype.addNewPointAfter = function(pointIndex) {\n        this.points.splice(pointIndex, 0,\n                new Point(this.points[pointIndex].x, this.points[pointIndex].y));\n    };\n\n    Polygon.prototype.normalizeShape = function() {\n        var i,\n            x = 0,\n            y = 0;\n\n        if (this.points.length === 0) {\n            return;\n        }\n\n        // Computer centre.\n        for (i = 0; i < this.points.length; i++) {\n            x += this.points[i].x;\n            y += this.points[i].y;\n        }\n        x = Math.round(x / this.points.length);\n        y = Math.round(y / this.points.length);\n\n        if (x === 0 && y === 0) {\n            return;\n        }\n\n        for (i = 0; i < this.points.length; i++) {\n            this.points[i].move(-x, -y);\n        }\n        this.centre.move(x, y);\n    };\n\n    Polygon.prototype.makeSimilarCircle = function() {\n        return this.makeSimilarRectangle().makeSimilarCircle();\n    };\n\n    Polygon.prototype.makeSimilarRectangle = function() {\n        var p,\n            minX = 0,\n            maxX = 0,\n            minY = 0,\n            maxY = 0;\n        for (var i = 0; i < this.points.length; i++) {\n            p = this.points[i];\n            minX = Math.min(minX, p.x);\n            maxX = Math.max(maxX, p.x);\n            minY = Math.min(minY, p.y);\n            maxY = Math.max(maxY, p.y);\n        }\n        return new Rectangle(this.label,\n                this.centre.x + minX, this.centre.y + minY,\n                Math.max(maxX - minX, 10), Math.max(maxY - minY, 10));\n    };\n\n    Polygon.prototype.getHandlePositions = function() {\n        var editHandles = [];\n        for (var i = 0; i < this.points.length; i++) {\n            editHandles.push(this.points[i].offset(this.centre.x, this.centre.y));\n        }\n\n        return {\n            moveHandle: this.centre,\n            editHandles: editHandles\n        };\n    };\n\n\n    /**\n     * Not a shape (null object pattern).\n     *\n     * @param {String} label name of this area.\n     * @constructor\n     */\n    function NullShape(label) {\n        Shape.call(this, label);\n    }\n    NullShape.prototype = new Shape();\n\n    NullShape.prototype.getType = function() {\n        return 'null';\n    };\n\n    NullShape.prototype.getCoordinates = function() {\n        return '';\n    };\n\n    NullShape.prototype.makeSvg = function(svg) {\n        void (svg);\n        return null;\n    };\n\n    NullShape.prototype.updateSvg = function(svgEl) {\n        void (svgEl);\n    };\n\n    NullShape.prototype.parse = function(coordinates) {\n        void (coordinates);\n        return false;\n    };\n\n    NullShape.prototype.makeSimilarCircle = function() {\n        return new Circle(this.label);\n    };\n\n    NullShape.prototype.makeSimilarRectangle = function() {\n        return new Rectangle(this.label);\n    };\n\n    NullShape.prototype.makeSimilarPolygon = function() {\n        return new Polygon(this.label);\n    };\n\n\n    /**\n     * Make a new SVG DOM element as a child of svg.\n     *\n     * @param {SVGElement} svg the parent node.\n     * @param {String} tagName the tag name.\n     * @return {SVGElement} the newly created node.\n     */\n    function createSvgElement(svg, tagName) {\n        var svgEl = svg.ownerDocument.createElementNS('http://www.w3.org/2000/svg', tagName);\n        svg.appendChild(svgEl);\n        return svgEl;\n    }\n\n    /**\n     * Make a group SVG DOM elements containing a shape of the given type as first child,\n     * and a text label as the second child.\n     *\n     * @param {SVGElement} svg the parent node.\n     * @param {String} tagName the tag name.\n     * @return {SVGElement} the newly created g element.\n     */\n    function createSvgShapeGroup(svg, tagName) {\n        var svgEl = createSvgElement(svg, 'g');\n        createSvgElement(svgEl, tagName).setAttribute('class', 'shape');\n        createSvgElement(svgEl, 'text').setAttribute('class', 'shapeLabel');\n        return svgEl;\n    }\n\n    /**\n     * @alias module:qtype_ddmarker/shapes\n     */\n    return {\n        /**\n         * A point, with x and y coordinates.\n         *\n         * @param {int} x centre X.\n         * @param {int} y centre Y.\n         * @constructor\n         */\n        Point: Point,\n\n        /**\n         * A point, with x and y coordinates.\n         *\n         * @param {int} x centre X.\n         * @param {int} y centre Y.\n         * @constructor\n         */\n        Shape: Shape,\n\n        /**\n         * A shape that is a circle.\n         *\n         * @param {String} label name of this area.\n         * @param {int} [x] centre X.\n         * @param {int} [y] centre Y.\n         * @param {int} [radius] radius.\n         * @constructor\n         */\n        Circle: Circle,\n\n        /**\n         * A shape that is a rectangle.\n         *\n         * @param {String} label name of this area.\n         * @param {int} [x] top left X.\n         * @param {int} [y] top left Y.\n         * @param {int} [width] width.\n         * @param {int} [height] height.\n         * @constructor\n         */\n        Rectangle: Rectangle,\n\n        /**\n         * A shape that is a polygon.\n         *\n         * @param {String} label name of this area.\n         * @param {Point[]} [points] position of the vertices relative to (centreX, centreY).\n         *      each object in the array should have two\n         * @constructor\n         */\n        Polygon: Polygon,\n\n        /**\n         * Not a shape (null object pattern).\n         *\n         * @param {String} label name of this area.\n         * @constructor\n         */\n        NullShape: NullShape,\n\n        /**\n         * Make a new SVG DOM element as a child of svg.\n         *\n         * @param {SVGElement} svg the parent node.\n         * @param {String} tagName the tag name.\n         * @return {SVGElement} the newly created node.\n         */\n        createSvgElement: createSvgElement,\n\n        /**\n         * Make a shape of the given type.\n         *\n         * @param {String} shapeType\n         * @param {String} label\n         * @return {Shape} the requested shape.\n         */\n        make: function(shapeType, label) {\n            switch (shapeType) {\n                case 'circle':\n                    return new Circle(label);\n                case 'rectangle':\n                    return new Rectangle(label);\n                case 'polygon':\n                    return new Polygon(label);\n                default:\n                    return new NullShape(label);\n            }\n        },\n\n        /**\n         * Make a shape of the given type that is similar to the shape of the original type.\n         *\n         * @param {String} shapeType the new type of shape to make\n         * @param {Shape} shape the shape to copy\n         * @return {Shape} the similar shape of a different type.\n         */\n        getSimilar: function(shapeType, shape) {\n            if (shapeType === shape.getType()) {\n                return shape;\n            }\n            switch (shapeType) {\n                case 'circle':\n                    return shape.makeSimilarCircle();\n                case 'rectangle':\n                    return shape.makeSimilarRectangle();\n                case 'polygon':\n                    return shape.makeSimilarPolygon();\n                default:\n                    return new NullShape(shape.label);\n            }\n        }\n    };\n});\n"],"file":"shapes.min.js"}