{"version":3,"sources":["../src/chart_output_htmltable.js"],"names":["define","$","Base","Output","prototype","constructor","apply","arguments","_build","Object","create","_node","empty","append","_makeTable","node","value","seriesLabels","tbl","c","_chart","labels","getLabels","hasLabel","length","series","getSeries","rowCount","getCount","addClass","getTitle","text","forEach","serie","getLabel","attr","rowId","serieId","getValues","update"],"mappings":"aAuBAA,qCAAO,CACH,QADG,CAEH,wBAFG,CAAP,CAGG,SAASC,CAAT,CAAYC,IAAZ,CAAkB,CASjB,QAASC,OAAT,EAAkB,CACdD,KAAKE,SAAL,CAAeC,WAAf,CAA2BC,KAA3B,CAAiC,IAAjC,CAAuCC,SAAvC,CADc,CAEd,KAAKC,MAAL,EACH,CAiFD,MAhFAL,QAAOC,SAAP,CAAmBK,OAAOC,MAAP,CAAcR,KAAKE,SAAnB,CAgFnB,CAzEAD,OAAOC,SAAP,CAAiBI,MAAjB,CAA0B,UAAW,CACjC,KAAKG,KAAL,CAAWC,KAAX,EADiC,CAEjC,KAAKD,KAAL,CAAWE,MAAX,CAAkB,KAAKC,UAAL,EAAlB,CACH,CAsED,CA9DAX,OAAOC,SAAP,CAAiBU,UAAjB,CAA8B,UAAW,CACrC,GAEIC,KAFJ,CAGIC,KAHJ,CAOIC,YAPJ,CAAIC,IAAMjB,EAAE,SAAF,CAAV,CACIkB,EAAI,KAAKC,MADb,CAIIC,OAASF,EAAEG,SAAF,EAJb,CAKIC,SAA2B,CAAhB,QAAOC,MALtB,CAMIC,OAASN,EAAEO,SAAF,EANb,CAQIC,SAAWF,OAAO,CAAP,EAAUG,QAAV,EARf,CAWAV,IAAIW,QAAJ,CAAa,qCAAb,CAZqC,CAehB,IAAjB,KAAEC,QAAF,EAfiC,EAgBjCZ,IAAIL,MAAJ,CAAWZ,EAAE,WAAF,EAAe8B,IAAf,CAAoBZ,EAAEW,QAAF,EAApB,CAAX,CAhBiC,CAoBrCf,KAAOd,EAAE,MAAF,CApB8B,CAqBjCsB,QArBiC,EAsBjCR,KAAKF,MAAL,CAAYZ,EAAE,MAAF,CAAZ,CAtBiC,CAwBrCwB,OAAOO,OAAP,CAAe,SAASC,KAAT,CAAgB,CAC3BlB,KAAKF,MAAL,CACIZ,EAAE,MAAF,EACC8B,IADD,CACME,MAAMC,QAAN,EADN,EAECC,IAFD,CAEM,OAFN,CAEe,KAFf,CADJ,CAKH,CAND,CAxBqC,CA+BrCjB,IAAIL,MAAJ,CAAWE,IAAX,CA/BqC,CAkCrC,IAAK,GAAIqB,OAAQ,CAAjB,CAAoBA,MAAQT,QAA5B,CAAsCS,OAAtC,CAA+C,CAC3CrB,KAAOd,EAAE,MAAF,CADoC,CAEvB,CAAhB,QAAOuB,MAFgC,EAGvCT,KAAKF,MAAL,CACIZ,EAAE,MAAF,EACC8B,IADD,CACMV,OAAOe,KAAP,CADN,EAECD,IAFD,CAEM,OAFN,CAEe,KAFf,CADJ,CAHuC,CAS3C,IAAK,GAAIE,SAAU,CAAnB,CAAsBA,QAAUZ,OAAOD,MAAvC,CAA+Ca,SAA/C,CACIrB,MAAQS,OAAOY,OAAP,EAAgBC,SAAhB,GAA4BF,KAA5B,CADZ,CAEInB,aAAeQ,OAAOY,OAAP,EAAgBf,SAAhB,EAFnB,CAGyB,IAAjB,eAHR,GAIQN,MAAQS,OAAOY,OAAP,EAAgBf,SAAhB,GAA4Bc,KAA5B,CAJhB,EAMIrB,KAAKF,MAAL,CAAYZ,EAAE,MAAF,EAAU8B,IAAV,CAAef,KAAf,CAAZ,CANJ,CAQAE,IAAIL,MAAJ,CAAWE,IAAX,CACH,CAED,MAAOG,IACV,CAOD,CAJAf,OAAOC,SAAP,CAAiBmC,MAAjB,CAA0B,UAAW,CACjC,KAAK/B,MAAL,EACH,CAED,CAAOL,MAEV,CAlGD,C","file":"chart_output_htmltable.min.js","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Chart output for HTML table.\n *\n * @package    core\n * @copyright  2016 Frédéric Massart - FMCorz.net\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @module     core/chart_output_htmltable\n */\ndefine([\n    'jquery',\n    'core/chart_output_base',\n], function($, Base) {\n\n    /**\n     * Render a chart as an HTML table.\n     *\n     * @class\n     * @extends {module:core/chart_output_base}\n     * @alias module:core/chart_output_htmltable\n     */\n    function Output() {\n        Base.prototype.constructor.apply(this, arguments);\n        this._build();\n    }\n    Output.prototype = Object.create(Base.prototype);\n\n    /**\n     * Attach the table to the document.\n     *\n     * @protected\n     */\n    Output.prototype._build = function() {\n        this._node.empty();\n        this._node.append(this._makeTable());\n    };\n\n    /**\n     * Builds the table node.\n     *\n     * @protected\n     * @return {Jquery}\n     */\n    Output.prototype._makeTable = function() {\n        var tbl = $('<table>'),\n            c = this._chart,\n            node,\n            value,\n            labels = c.getLabels(),\n            hasLabel = labels.length > 0,\n            series = c.getSeries(),\n            seriesLabels,\n            rowCount = series[0].getCount();\n\n        // Identify the table.\n        tbl.addClass('chart-output-htmltable generaltable');\n\n        // Set the caption.\n        if (c.getTitle() !== null) {\n            tbl.append($('<caption>').text(c.getTitle()));\n        }\n\n        // Write the column headers.\n        node = $('<tr>');\n        if (hasLabel) {\n            node.append($('<td>'));\n        }\n        series.forEach(function(serie) {\n            node.append(\n                $('<th>')\n                .text(serie.getLabel())\n                .attr('scope', 'col')\n            );\n        });\n        tbl.append(node);\n\n        // Write rows.\n        for (var rowId = 0; rowId < rowCount; rowId++) {\n            node = $('<tr>');\n            if (labels.length > 0) {\n                node.append(\n                    $('<th>')\n                    .text(labels[rowId])\n                    .attr('scope', 'row')\n                );\n            }\n            for (var serieId = 0; serieId < series.length; serieId++) {\n                value = series[serieId].getValues()[rowId];\n                seriesLabels = series[serieId].getLabels();\n                if (seriesLabels !== null) {\n                    value = series[serieId].getLabels()[rowId];\n                }\n                node.append($('<td>').text(value));\n            }\n            tbl.append(node);\n        }\n\n        return tbl;\n    };\n\n    /** @override */\n    Output.prototype.update = function() {\n        this._build();\n    };\n\n    return Output;\n\n});\n"]}