{"version":3,"sources":["../src/custom_interaction_events.js"],"names":["define","$","keyCodes","events","activate","keyboardActivate","escape","down","up","home","end","next","previous","asterix","scrollLock","scrollTop","scrollBottom","ctrlPageUp","ctrlPageDown","enter","triggeredEvents","shouldAddEvent","eventType","include","length","indexOf","isModifierPressed","e","shiftKey","metaKey","altKey","ctrlKey","triggerEvent","eventName","eventTypeKey","hasOwnProperty","originalEvent","target","trigger","type","timeStamp","addKeyboardEvent","element","event","keyCode","off","on","addActivateListener","space","addKeyboardActivateListener","addEscapeListener","addDownListener","arrowDown","addUpListener","arrowUp","addHomeListener","addEndListener","addNextListener","attr","arrowLeft","arrowRight","addPreviousListener","addAsterixListener","addScrollTopListener","addScrollBottomListener","innerHeight","scrollHeight","addScrollLockListener","height","delta","detail","wheelDelta","stopPropagation","preventDefault","returnValue","addCtrlPageUpListener","pageUp","addCtrlPageDownListener","pageDown","addEnterListener","getHandlers","handlers","each","handler"],"mappings":"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","file":"custom_interaction_events.min.js","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module provides a wrapper to encapsulate a lot of the common combinations of\n * user interaction we use in Moodle.\n *\n * @module     core/custom_interaction_events\n * @class      custom_interaction_events\n * @package    core\n * @copyright  2016 Ryan Wyllie <ryan@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      3.2\n */\ndefine(['jquery', 'core/key_codes'], function($, keyCodes) {\n    // The list of events provided by this module. Namespaced to avoid clashes.\n    var events = {\n        activate: 'cie:activate',\n        keyboardActivate: 'cie:keyboardactivate',\n        escape: 'cie:escape',\n        down: 'cie:down',\n        up: 'cie:up',\n        home: 'cie:home',\n        end: 'cie:end',\n        next: 'cie:next',\n        previous: 'cie:previous',\n        asterix: 'cie:asterix',\n        scrollLock: 'cie:scrollLock',\n        scrollTop: 'cie:scrollTop',\n        scrollBottom: 'cie:scrollBottom',\n        ctrlPageUp: 'cie:ctrlPageUp',\n        ctrlPageDown: 'cie:ctrlPageDown',\n        enter: 'cie:enter',\n    };\n    // Static cache of jQuery events that have been handled. This should\n    // only be populated by JavaScript generated events (which will keep it\n    // fairly small).\n    var triggeredEvents = {};\n\n    /**\n     * Check if the caller has asked for the given event type to be\n     * registered.\n     *\n     * @method shouldAddEvent\n     * @private\n     * @param {string} eventType name of the event (see events above)\n     * @param {array} include the list of events to be added\n     * @return {bool} true if the event should be added, false otherwise.\n     */\n    var shouldAddEvent = function(eventType, include) {\n        include = include || [];\n\n        if (include.length && include.indexOf(eventType) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    /**\n     * Check if any of the modifier keys have been pressed on the event.\n     *\n     * @method isModifierPressed\n     * @private\n     * @param {event} e jQuery event\n     * @return {bool} true if shift, meta (command on Mac), alt or ctrl are pressed\n     */\n    var isModifierPressed = function(e) {\n        return (e.shiftKey || e.metaKey || e.altKey || e.ctrlKey);\n    };\n\n    /**\n     * Trigger the custom event for the given jQuery event.\n     *\n     * This function will only fire the custom event if one hasn't already been\n     * fired for the jQuery event.\n     *\n     * This is to prevent multiple custom event handlers triggering multiple\n     * custom events for a single jQuery event as it bubbles up the stack.\n     *\n     * @param  {string} eventName The name of the custom event\n     * @param  {event} e          The jQuery event\n     * @return {void}\n     */\n    var triggerEvent = function(eventName, e) {\n        var eventTypeKey = \"\";\n\n        if (!e.hasOwnProperty('originalEvent')) {\n            // This is a jQuery event generated from JavaScript not a browser event so\n            // we need to build the cache key for the event.\n            eventTypeKey = \"\" + eventName + e.type + e.timeStamp;\n\n            if (!triggeredEvents.hasOwnProperty(eventTypeKey)) {\n                // If we haven't seen this jQuery event before then fire a custom\n                // event for it and remember the event for later.\n                triggeredEvents[eventTypeKey] = true;\n                $(e.target).trigger(eventName, [{originalEvent: e}]);\n            }\n            return;\n        }\n\n        eventTypeKey = \"triggeredCustom_\" + eventName;\n        if (!e.originalEvent.hasOwnProperty(eventTypeKey)) {\n            // If this is a jQuery event generated by the browser then set a\n            // property on the original event to track that we've seen it before.\n            // The property is set on the original event because it's the only part\n            // of the jQuery event that is maintained through multiple event handlers.\n            e.originalEvent[eventTypeKey] = true;\n            $(e.target).trigger(eventName, [{originalEvent: e}]);\n            return;\n        }\n    };\n\n    /**\n     * Register a keyboard event that ignores modifier keys.\n     *\n     * @method addKeyboardEvent\n     * @private\n     * @param {object} element A jQuery object of the element to bind events to\n     * @param {string} event The custom interaction event name\n     * @param {int} keyCode The key code.\n     */\n    var addKeyboardEvent = function(element, event, keyCode) {\n        element.off('keydown.' + event).on('keydown.' + event, function(e) {\n            if (!isModifierPressed(e)) {\n                if (e.keyCode == keyCode) {\n                    triggerEvent(event, e);\n                }\n            }\n        });\n    };\n\n    /**\n     * Trigger the activate event on the given element if it is clicked or the enter\n     * or space key are pressed without a modifier key.\n     *\n     * @method addActivateListener\n     * @private\n     * @param {object} element jQuery object to add event listeners to\n     */\n    var addActivateListener = function(element) {\n        element.off('click.cie.activate').on('click.cie.activate', function(e) {\n            triggerEvent(events.activate, e);\n        });\n        element.off('keydown.cie.activate').on('keydown.cie.activate', function(e) {\n            if (!isModifierPressed(e)) {\n                if (e.keyCode == keyCodes.enter || e.keyCode == keyCodes.space) {\n                    triggerEvent(events.activate, e);\n                }\n            }\n        });\n    };\n\n    /**\n     * Trigger the keyboard activate event on the given element if the enter\n     * or space key are pressed without a modifier key.\n     *\n     * @method addKeyboardActivateListener\n     * @private\n     * @param {object} element jQuery object to add event listeners to\n     */\n    var addKeyboardActivateListener = function(element) {\n        element.off('keydown.cie.keyboardactivate').on('keydown.cie.keyboardactivate', function(e) {\n            if (!isModifierPressed(e)) {\n                if (e.keyCode == keyCodes.enter || e.keyCode == keyCodes.space) {\n                    triggerEvent(events.keyboardActivate, e);\n                }\n            }\n        });\n    };\n\n    /**\n     * Trigger the escape event on the given element if the escape key is pressed\n     * without a modifier key.\n     *\n     * @method addEscapeListener\n     * @private\n     * @param {object} element jQuery object to add event listeners to\n     */\n    var addEscapeListener = function(element) {\n        addKeyboardEvent(element, events.escape, keyCodes.escape);\n    };\n\n    /**\n     * Trigger the down event on the given element if the down arrow key is pressed\n     * without a modifier key.\n     *\n     * @method addDownListener\n     * @private\n     * @param {object} element jQuery object to add event listeners to\n     */\n    var addDownListener = function(element) {\n        addKeyboardEvent(element, events.down, keyCodes.arrowDown);\n    };\n\n    /**\n     * Trigger the up event on the given element if the up arrow key is pressed\n     * without a modifier key.\n     *\n     * @method addUpListener\n     * @private\n     * @param {object} element jQuery object to add event listeners to\n     */\n    var addUpListener = function(element) {\n        addKeyboardEvent(element, events.up, keyCodes.arrowUp);\n    };\n\n    /**\n     * Trigger the home event on the given element if the home key is pressed\n     * without a modifier key.\n     *\n     * @method addHomeListener\n     * @private\n     * @param {object} element jQuery object to add event listeners to\n     */\n    var addHomeListener = function(element) {\n        addKeyboardEvent(element, events.home, keyCodes.home);\n    };\n\n    /**\n     * Trigger the end event on the given element if the end key is pressed\n     * without a modifier key.\n     *\n     * @method addEndListener\n     * @private\n     * @param {object} element jQuery object to add event listeners to\n     */\n    var addEndListener = function(element) {\n        addKeyboardEvent(element, events.end, keyCodes.end);\n    };\n\n    /**\n     * Trigger the next event on the given element if the right arrow key is pressed\n     * without a modifier key in LTR mode or left arrow key in RTL mode.\n     *\n     * @method addNextListener\n     * @private\n     * @param {object} element jQuery object to add event listeners to\n     */\n    var addNextListener = function(element) {\n        // Left and right are flipped in RTL mode.\n        var keyCode = $('html').attr('dir') == \"rtl\" ? keyCodes.arrowLeft : keyCodes.arrowRight;\n\n        addKeyboardEvent(element, events.next, keyCode);\n    };\n\n    /**\n     * Trigger the previous event on the given element if the left arrow key is pressed\n     * without a modifier key in LTR mode or right arrow key in RTL mode.\n     *\n     * @method addPreviousListener\n     * @private\n     * @param {object} element jQuery object to add event listeners to\n     */\n    var addPreviousListener = function(element) {\n        // Left and right are flipped in RTL mode.\n        var keyCode = $('html').attr('dir') == \"rtl\" ? keyCodes.arrowRight : keyCodes.arrowLeft;\n\n        addKeyboardEvent(element, events.previous, keyCode);\n    };\n\n    /**\n     * Trigger the asterix event on the given element if the asterix key is pressed\n     * without a modifier key.\n     *\n     * @method addAsterixListener\n     * @private\n     * @param {object} element jQuery object to add event listeners to\n     */\n    var addAsterixListener = function(element) {\n        addKeyboardEvent(element, events.asterix, keyCodes.asterix);\n    };\n\n\n    /**\n     * Trigger the scrollTop event on the given element if the user scrolls to\n     * the top of the given element.\n     *\n     * @method addScrollTopListener\n     * @private\n     * @param {object} element jQuery object to add event listeners to\n     */\n    var addScrollTopListener = function(element) {\n        element.off('scroll.cie.scrollTop').on('scroll.cie.scrollTop', function(e) {\n            var scrollTop = element.scrollTop();\n            if (scrollTop === 0) {\n                triggerEvent(events.scrollTop, e);\n            }\n        });\n    };\n\n    /**\n     * Trigger the scrollBottom event on the given element if the user scrolls to\n     * the bottom of the given element.\n     *\n     * @method addScrollBottomListener\n     * @private\n     * @param {object} element jQuery object to add event listeners to\n     */\n    var addScrollBottomListener = function(element) {\n        element.off('scroll.cie.scrollBottom').on('scroll.cie.scrollBottom', function(e) {\n            var scrollTop = element.scrollTop();\n            var innerHeight = element.innerHeight();\n            var scrollHeight = element[0].scrollHeight;\n\n            if (scrollTop + innerHeight >= scrollHeight) {\n                triggerEvent(events.scrollBottom, e);\n            }\n        });\n    };\n\n    /**\n     * Trigger the scrollLock event on the given element if the user scrolls to\n     * the bottom or top of the given element.\n     *\n     * @method addScrollLockListener\n     * @private\n     * @param {jQuery} element jQuery object to add event listeners to\n     */\n    var addScrollLockListener = function(element) {\n        // Lock mousewheel scrolling within the element to stop the annoying window scroll.\n        element.off('DOMMouseScroll.cie.DOMMouseScrollLock mousewheel.cie.mousewheelLock')\n            .on('DOMMouseScroll.cie.DOMMouseScrollLock mousewheel.cie.mousewheelLock', function(e) {\n                var scrollTop = element.scrollTop();\n                var scrollHeight = element[0].scrollHeight;\n                var height = element.height();\n                var delta = (e.type == 'DOMMouseScroll' ?\n                    e.originalEvent.detail * -40 :\n                    e.originalEvent.wheelDelta);\n                var up = delta > 0;\n\n                if (!up && -delta > scrollHeight - height - scrollTop) {\n                    // Scrolling down past the bottom.\n                    element.scrollTop(scrollHeight);\n                    e.stopPropagation();\n                    e.preventDefault();\n                    e.returnValue = false;\n                    // Fire the scroll lock event.\n                    triggerEvent(events.scrollLock, e);\n\n                    return false;\n                } else if (up && delta > scrollTop) {\n                    // Scrolling up past the top.\n                    element.scrollTop(0);\n                    e.stopPropagation();\n                    e.preventDefault();\n                    e.returnValue = false;\n                    // Fire the scroll lock event.\n                    triggerEvent(events.scrollLock, e);\n\n                    return false;\n                }\n\n                return true;\n            });\n    };\n\n    /**\n     * Trigger the ctrlPageUp event on the given element if the user presses the\n     * control and page up key.\n     *\n     * @method addCtrlPageUpListener\n     * @private\n     * @param {object} element jQuery object to add event listeners to\n     */\n    var addCtrlPageUpListener = function(element) {\n        element.off('keydown.cie.ctrlpageup').on('keydown.cie.ctrlpageup', function(e) {\n            if (e.ctrlKey) {\n                if (e.keyCode == keyCodes.pageUp) {\n                    triggerEvent(events.ctrlPageUp, e);\n                }\n            }\n        });\n    };\n\n    /**\n     * Trigger the ctrlPageDown event on the given element if the user presses the\n     * control and page down key.\n     *\n     * @method addCtrlPageDownListener\n     * @private\n     * @param {object} element jQuery object to add event listeners to\n     */\n    var addCtrlPageDownListener = function(element) {\n        element.off('keydown.cie.ctrlpagedown').on('keydown.cie.ctrlpagedown', function(e) {\n            if (e.ctrlKey) {\n                if (e.keyCode == keyCodes.pageDown) {\n                    triggerEvent(events.ctrlPageDown, e);\n                }\n            }\n        });\n    };\n\n    /**\n     * Trigger the enter event on the given element if the enter key is pressed\n     * without a modifier key.\n     *\n     * @method addEnterListener\n     * @private\n     * @param {object} element jQuery object to add event listeners to\n     */\n    var addEnterListener = function(element) {\n        addKeyboardEvent(element, events.enter, keyCodes.enter);\n    };\n\n    /**\n     * Get the list of events and their handlers.\n     *\n     * @method getHandlers\n     * @private\n     * @return {object} object key of event names and value of handler functions\n     */\n    var getHandlers = function() {\n        var handlers = {};\n\n        handlers[events.activate] = addActivateListener;\n        handlers[events.keyboardActivate] = addKeyboardActivateListener;\n        handlers[events.escape] = addEscapeListener;\n        handlers[events.down] = addDownListener;\n        handlers[events.up] = addUpListener;\n        handlers[events.home] = addHomeListener;\n        handlers[events.end] = addEndListener;\n        handlers[events.next] = addNextListener;\n        handlers[events.previous] = addPreviousListener;\n        handlers[events.asterix] = addAsterixListener;\n        handlers[events.scrollLock] = addScrollLockListener;\n        handlers[events.scrollTop] = addScrollTopListener;\n        handlers[events.scrollBottom] = addScrollBottomListener;\n        handlers[events.ctrlPageUp] = addCtrlPageUpListener;\n        handlers[events.ctrlPageDown] = addCtrlPageDownListener;\n        handlers[events.enter] = addEnterListener;\n\n        return handlers;\n    };\n\n    /**\n     * Add all of the listeners on the given element for the requested events.\n     *\n     * @method define\n     * @public\n     * @param {object} element the DOM element to register event listeners on\n     * @param {array} include the array of events to be triggered\n     */\n    var define = function(element, include) {\n        element = $(element);\n        include = include || [];\n\n        if (!element.length || !include.length) {\n            return;\n        }\n\n        $.each(getHandlers(), function(eventType, handler) {\n            if (shouldAddEvent(eventType, include)) {\n                handler(element);\n            }\n        });\n    };\n\n    return /** @module core/custom_interaction_events */ {\n        define: define,\n        events: events,\n    };\n});\n"]}