{"version":3,"sources":["../src/icon_system_fontawesome.js"],"names":["define","IconSystem","$","Ajax","Mustache","LocalStorage","Url","staticMap","fetchMap","IconSystemFontawesome","apply","arguments","prototype","Object","create","init","when","map","get","JSON","parse","call","methodname","args","then","each","index","value","component","pix","to","set","stringify","bind","renderIcon","key","title","template","mappedIcon","unmappedIcon","url","imageUrl","attributes","name","context","alt","render","getTemplateName"],"mappings":"aAuBAA,sCAAO,CAAC,kBAAD,CAAqB,QAArB,CAA+B,WAA/B,CAA4C,eAA5C,CAA6D,mBAA7D,CAAkF,UAAlF,CAAP,CACQ,SAASC,UAAT,CAAqBC,CAArB,CAAwBC,IAAxB,CAA8BC,QAA9B,CAAwCC,YAAxC,CAAsDC,GAAtD,CAA2D,IAE3DC,WAAY,IAF+C,CAG3DC,SAAW,IAHgD,CAQ3DC,sBAAwB,UAAW,CACnCR,WAAWS,KAAX,CAAiB,IAAjB,CAAuBC,SAAvB,CACH,CAV8D,CAgG/D,MArFAF,uBAAsBG,SAAtB,CAAkCC,OAAOC,MAAP,CAAcb,WAAWW,SAAzB,CAqFlC,CA7EAH,sBAAsBG,SAAtB,CAAgCG,IAAhC,CAAuC,UAAW,CAC9C,GAAIR,SAAJ,CACI,MAAOL,GAAEc,IAAF,CAAO,IAAP,CAAP,CAGJ,GAAIC,KAAMZ,aAAaa,GAAb,CAAiB,0BAAjB,CAAV,CAL8C,OAM1CD,GAN0C,GAO1CA,IAAME,KAAKC,KAAL,CAAWH,GAAX,CAPoC,EAU1CA,GAV0C,GAW1CV,UAAYU,GAX8B,CAYnCf,EAAEc,IAAF,CAAO,IAAP,CAZmC,GAe7B,IAAb,WAf0C,GAgB1CR,SAAWL,KAAKkB,IAAL,CAAU,CAAC,CAClBC,WAAY,uCADM,CAElBC,KAAM,EAFY,CAAD,CAAV,QAGM,CAHN,CAhB+B,EAsBvCf,SAASgB,IAAT,CAAc,SAASP,GAAT,CAAc,CAM/B,MALAV,WAAY,EAKZ,CAJAL,EAAEuB,IAAF,CAAOR,GAAP,CAAY,SAASS,KAAT,CAAgBC,KAAhB,CAAuB,CAC/BpB,UAAUoB,MAAMC,SAAN,CAAkB,GAAlB,CAAwBD,MAAME,GAAxC,EAA+CF,MAAMG,EACxD,CAFD,CAIA,CADAzB,aAAa0B,GAAb,CAAiB,0BAAjB,CAA6CZ,KAAKa,SAAL,CAAezB,SAAf,CAA7C,CACA,CAAO,IACV,CAPoB,CAOnB0B,IAPmB,CAOd,IAPc,CAAd,CAtBuC,CA8BjD,CA+CD,CAnCAxB,sBAAsBG,SAAtB,CAAgCsB,UAAhC,CAA6C,SAASC,GAAT,CAAcP,SAAd,CAAyBQ,KAAzB,CAAgCC,QAAhC,CAA0C,IAC/EC,YAAa/B,UAAUqB,UAAY,GAAZ,CAAkBO,GAA5B,CADkE,CAE/EI,eAF+E,CAGnF,GAA0B,WAAtB,QAAOD,WAAX,CAAuC,CACnC,GAAIE,KAAMlC,IAAImC,QAAJ,CAAaN,GAAb,CAAkBP,SAAlB,CAAV,CAEAW,aAAe,CACXG,WAAY,CACR,CAACC,KAAM,KAAP,CAAchB,MAAOa,GAArB,CADQ,CAER,CAACG,KAAM,KAAP,CAAchB,MAAOS,KAArB,CAFQ,CAGR,CAACO,KAAM,OAAP,CAAgBhB,MAAOS,KAAvB,CAHQ,CADD,CAOlB,CAED,GAAIQ,SAAU,CACVT,IAAKG,UADK,CAEVF,MAAOA,KAFG,CAGVS,IAAKT,KAHK,CAIVG,aAAcA,YAJJ,CAAd,CAOA,MAAOnC,UAAS0C,MAAT,CAAgBT,QAAhB,CAA0BO,OAA1B,CACV,CAYD,CAJAnC,sBAAsBG,SAAtB,CAAgCmC,eAAhC,CAAkD,UAAW,CACzD,MAAO,2BACV,CAED,CAAyDtC,qBAE5D,CAnGD,C","file":"icon_system_fontawesome.min.js","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Competency rule points module.\n *\n * @package    core\n * @copyright  2017 Damyon Wiese\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['core/icon_system', 'jquery', 'core/ajax', 'core/mustache', 'core/localstorage', 'core/url'],\n        function(IconSystem, $, Ajax, Mustache, LocalStorage, Url) {\n\n    var staticMap = null;\n    var fetchMap = null;\n\n    /**\n     * IconSystemFontawesome\n     */\n    var IconSystemFontawesome = function() {\n        IconSystem.apply(this, arguments);\n    };\n    IconSystemFontawesome.prototype = Object.create(IconSystem.prototype);\n\n    /**\n     * Prefetch resources so later calls to renderIcon can be resolved synchronously.\n     *\n     * @method init\n     * @return {Promise}\n     */\n    IconSystemFontawesome.prototype.init = function() {\n        if (staticMap) {\n            return $.when(this);\n        }\n\n        var map = LocalStorage.get('core/iconmap-fontawesome');\n        if (map) {\n            map = JSON.parse(map);\n        }\n\n        if (map) {\n            staticMap = map;\n            return $.when(this);\n        }\n\n        if (fetchMap === null) {\n            fetchMap = Ajax.call([{\n                methodname: 'core_output_load_fontawesome_icon_map',\n                args: []\n            }], true, false)[0];\n        }\n\n        return fetchMap.then(function(map) {\n            staticMap = {};\n            $.each(map, function(index, value) {\n                staticMap[value.component + '/' + value.pix] = value.to;\n            });\n            LocalStorage.set('core/iconmap-fontawesome', JSON.stringify(staticMap));\n            return this;\n        }.bind(this));\n    };\n\n    /**\n     * Render an icon.\n     *\n     * @param {String} key\n     * @param {String} component\n     * @param {String} title\n     * @param {String} template\n     * @return {String}\n     * @method renderIcon\n     */\n    IconSystemFontawesome.prototype.renderIcon = function(key, component, title, template) {\n        var mappedIcon = staticMap[component + '/' + key];\n        var unmappedIcon = false;\n        if (typeof mappedIcon === \"undefined\") {\n            var url = Url.imageUrl(key, component);\n\n            unmappedIcon = {\n                attributes: [\n                    {name: 'src', value: url},\n                    {name: 'alt', value: title},\n                    {name: 'title', value: title}\n                ]\n            };\n        }\n\n        var context = {\n            key: mappedIcon,\n            title: title,\n            alt: title,\n            unmappedIcon: unmappedIcon\n        };\n\n        return Mustache.render(template, context);\n    };\n\n    /**\n     * Get the name of the template to pre-cache for this icon system.\n     *\n     * @return {String}\n     * @method getTemplateName\n     */\n    IconSystemFontawesome.prototype.getTemplateName = function() {\n        return 'core/pix_icon_fontawesome';\n    };\n\n    return /** @alias module:core/icon_system_fontawesome */ IconSystemFontawesome;\n\n});\n"]}