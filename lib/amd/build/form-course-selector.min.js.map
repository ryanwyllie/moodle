{"version":3,"sources":["../src/form-course-selector.js"],"names":["define","ajax","$","processResults","selector","data","results","i","excludelist","split","courses","length","indexOf","id","push","value","label","displayname","transport","query","success","failure","el","requiredcapabilities","trim","limittoenrolled","includefrontpage","promises","searchargs","criterianame","criteriavalue","page","perpage","calls","methodname","args","options","ids","call","when","apply","done","site","frontpage","pop","matches","fullname","toUpperCase","shortname","splice","fail"],"mappings":"aAyBAA,mCAAO,CAAC,WAAD,CAAc,QAAd,CAAP,CAAgC,SAASC,IAAT,CAAeC,CAAf,CAAkB,CAE9C,MAAsD,CAElDC,eAAgB,wBAASC,QAAT,CAAmBC,IAAnB,CAAyB,IAEjCC,SAAU,EAFuB,CAGjCC,EAAI,CAH6B,CAIjCC,YAAc,CAAON,EAAEE,QAAF,EAAYC,IAAZ,CAAiB,SAAjB,CAAP,KAAoCI,KAApC,CAA0C,GAA1C,CAJmB,CAMrC,IAAKF,EAAI,CAAT,CAAYA,EAAIF,KAAKK,OAAL,CAAaC,MAA7B,CAAqCJ,GAArC,CAC4D,CAAC,CAArD,eAAYK,OAAZ,CAA2BP,KAAKK,OAAL,CAAaH,CAAb,EAAgBM,EAA3C,IADR,EAEQP,QAAQQ,IAAR,CAAa,CAACC,MAAOV,KAAKK,OAAL,CAAaH,CAAb,EAAgBM,EAAxB,CAA4BG,MAAOX,KAAKK,OAAL,CAAaH,CAAb,EAAgBU,WAAnD,CAAb,CAFR,CAKA,MAAOX,QACV,CAdiD,CAgBlDY,UAAW,mBAASd,QAAT,CAAmBe,KAAnB,CAA0BC,OAA1B,CAAmCC,OAAnC,CAA4C,IAC/CC,IAAKpB,EAAEE,QAAF,CAD0C,CAI/CmB,qBAAuBD,GAAGjB,IAAH,CAAQ,sBAAR,CAJwB,CAQ/CkB,oBAR+C,CAKf,EAAhC,wBAAqBC,IAArB,EAL+C,CAQxB,EARwB,CAMxBD,qBAAqBd,KAArB,CAA2B,GAA3B,CANwB,IAW/CgB,iBAAkBH,GAAGjB,IAAH,CAAQ,iBAAR,CAX6B,CAY/CqB,iBAAmBJ,GAAGjB,IAAH,CAAQ,kBAAR,CAZ4B,CAe/CsB,SAAW,IAfoC,CAiB9B,WAAjB,QAAOR,MAjBwC,GAkB/CA,MAAQ,EAlBuC,KAqB/CS,YAAa,CACbC,aAAc,QADD,CAEbC,cAAeX,KAFF,CAGbY,KAAM,CAHO,CAIbC,QAAS,GAJI,CAKbT,qBAAsBA,oBALT,CAMbE,gBAAiBA,eANJ,CArBkC,CA8B/CQ,MAAQ,CAAC,CACTC,WAAY,4BADH,CACiCC,KAAMP,UADvC,CAAD,CA9BuC,CAiC/CF,gBAjC+C,EAkC/CO,MAAMnB,IAAN,CAAW,CACPoB,WAAY,yBADL,CAEPC,KAAM,CACFC,QAAS,CACLC,IAAK,CAACX,gBAAD,CADA,CADP,CAFC,CAAX,CAlC+C,CA6CnDC,SAAW1B,KAAKqC,IAAL,CAAUL,KAAV,CA7CwC,CA8CnD/B,EAAEqC,IAAF,CAAOC,KAAP,CAAatC,EAAEqC,IAAf,CAAqBZ,QAArB,EAA+Bc,IAA/B,CAAoC,SAASpC,IAAT,CAAeqC,IAAf,CAAqB,CACrD,GAAIA,MAAuB,CAAf,OAAK/B,MAAjB,CAA8B,IACtBgC,WAAYD,KAAKE,GAAL,EADU,CAEtBC,QAAoB,EAAV,UACyD,CAAC,CAAjE,WAAUC,QAAV,CAAmBC,WAAnB,GAAiCnC,OAAjC,CAAyCO,MAAM4B,WAAN,EAAzC,CADO,EAE0D,CAAC,CAAlE,WAAUC,SAAV,CAAoBD,WAApB,GAAkCnC,OAAlC,CAA0CO,MAAM4B,WAAN,EAA1C,CAJmB,CAKtBF,OALsB,EAMtBxC,KAAKK,OAAL,CAAauC,MAAb,CAAoB,CAApB,CAAuB,CAAvB,CAA0BN,SAA1B,CAEP,CACDvB,QAAQf,IAAR,CACH,CAXD,EAWG6C,IAXH,CAWQ7B,OAXR,CAYH,CA1EiD,CA4EzD,CA9ED,C","file":"form-course-selector.min.js","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Course selector adaptor for auto-complete form element.\n *\n * @module     core/form-course-selector\n * @class      form-course-selector\n * @package    core\n * @copyright  2016 Damyon Wiese <damyon@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      3.1\n */\ndefine(['core/ajax', 'jquery'], function(ajax, $) {\n\n    return /** @alias module:core/form-course-selector */ {\n        // Public variables and functions.\n        processResults: function(selector, data) {\n            // Mangle the results into an array of objects.\n            var results = [];\n            var i = 0;\n            var excludelist = String($(selector).data('exclude')).split(',');\n\n            for (i = 0; i < data.courses.length; i++) {\n                if (excludelist.indexOf(String(data.courses[i].id)) === -1) {\n                    results.push({value: data.courses[i].id, label: data.courses[i].displayname});\n                }\n            }\n            return results;\n        },\n\n        transport: function(selector, query, success, failure) {\n            var el = $(selector);\n\n            // Parse some data-attributes from the form element.\n            var requiredcapabilities = el.data('requiredcapabilities');\n            if (requiredcapabilities.trim() !== \"\") {\n                requiredcapabilities = requiredcapabilities.split(',');\n            } else {\n                requiredcapabilities = [];\n            }\n\n            var limittoenrolled = el.data('limittoenrolled');\n            var includefrontpage = el.data('includefrontpage');\n\n            // Build the query.\n            var promises = null;\n\n            if (typeof query === \"undefined\") {\n                query = '';\n            }\n\n            var searchargs = {\n                criterianame: 'search',\n                criteriavalue: query,\n                page: 0,\n                perpage: 100,\n                requiredcapabilities: requiredcapabilities,\n                limittoenrolled: limittoenrolled\n            };\n\n            var calls = [{\n                methodname: 'core_course_search_courses', args: searchargs\n            }];\n            if (includefrontpage) {\n                calls.push({\n                    methodname: 'core_course_get_courses',\n                    args: {\n                        options: {\n                            ids: [includefrontpage]\n                        }\n                    }\n                });\n            }\n\n            // Go go go!\n            promises = ajax.call(calls);\n            $.when.apply($.when, promises).done(function(data, site) {\n                if (site && site.length == 1) {\n                    var frontpage = site.pop();\n                    var matches = query === ''\n                        || frontpage.fullname.toUpperCase().indexOf(query.toUpperCase()) > -1\n                        || frontpage.shortname.toUpperCase().indexOf(query.toUpperCase()) > -1;\n                    if (matches) {\n                        data.courses.splice(0, 0, frontpage);\n                    }\n                }\n                success(data);\n            }).fail(failure);\n        }\n    };\n});\n"]}