{"version":3,"sources":["../src/modal_factory.js"],"names":["define","$","ModalEvents","ModalRegistry","Modal","ModalSaveCancel","ModalConfirm","ModalCancel","Templates","Notification","CustomEvents","TEMPLATES","DEFAULT","SAVE_CANCEL","CONFIRM","CANCEL","TYPES","register","setUpTrigger","modalPromise","triggerElement","modalConfig","actualTriggerElement","hasPreShowCallback","preShowCallback","triggeredCallback","e","data","currentTarget","then","modal","show","originalEvent","preventDefault","Array","isArray","selector","events","activate","on","getRoot","hidden","focus","createFromElement","registryConf","modalElement","module","createFromType","templateContext","templateName","template","render","html","fail","exception","create","type","isLarge","large","get","message","title","setTitle","body","setBody","footer","setFooter","setLarge","types"],"mappings":"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","file":"modal_factory.min.js","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Create a modal.\n *\n * @module     core/modal_factory\n * @class      modal_factory\n * @package    core\n * @copyright  2016 Ryan Wyllie <ryan@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/modal_events', 'core/modal_registry', 'core/modal',\n        'core/modal_save_cancel', 'core/modal_confirm', 'core/modal_cancel',\n        'core/templates', 'core/notification', 'core/custom_interaction_events'],\n    function($, ModalEvents, ModalRegistry, Modal, ModalSaveCancel, ModalConfirm,\n        ModalCancel, Templates, Notification, CustomEvents) {\n\n    // The templates for each type of modal.\n    var TEMPLATES = {\n        DEFAULT: 'core/modal',\n        SAVE_CANCEL: 'core/modal_save_cancel',\n        // Deprecated since Moodle 3.4. Point template to core/modal_save_cancel instead. See MDL-59759.\n        CONFIRM: 'core/modal_save_cancel',\n        CANCEL: 'core/modal_cancel',\n    };\n\n    // The available types of modals.\n    var TYPES = {\n        DEFAULT: 'DEFAULT',\n        SAVE_CANCEL: 'SAVE_CANCEL',\n        // Deprecated since Moodle 3.4. See MDL-59759.\n        CONFIRM: 'CONFIRM',\n        CANCEL: 'CANCEL',\n    };\n\n    // Register the common set of modals.\n    ModalRegistry.register(TYPES.DEFAULT, Modal, TEMPLATES.DEFAULT);\n    ModalRegistry.register(TYPES.SAVE_CANCEL, ModalSaveCancel, TEMPLATES.SAVE_CANCEL);\n    // Deprecated since Moodle 3.4. See MDL-59759.\n    ModalRegistry.register(TYPES.CONFIRM, ModalConfirm, TEMPLATES.CONFIRM);\n    ModalRegistry.register(TYPES.CANCEL, ModalCancel, TEMPLATES.CANCEL);\n\n    /**\n     * Set up the events required to show the modal and return focus when the modal\n     * is closed.\n     *\n     * @method setUpTrigger\n     * @param {Promise} modalPromise The modal instance\n     * @param {object} triggerElement The jQuery element to open the modal\n     * @param {object} modalConfig The modal configuration given to the factory\n     */\n    var setUpTrigger = function(modalPromise, triggerElement, modalConfig) {\n        // The element that actually shows the modal.\n        var actualTriggerElement = null;\n        // Check if the client has provided a callback function to be called\n        // before the modal is displayed.\n        var hasPreShowCallback = (typeof modalConfig.preShowCallback == 'function');\n        // Function to handle the trigger element being activated.\n        var triggeredCallback = function(e, data) {\n            actualTriggerElement = $(e.currentTarget);\n            modalPromise.then(function(modal) {\n                if (hasPreShowCallback) {\n                    // If the client provided a pre-show callback then execute\n                    // it now before showing the modal.\n                    modalConfig.preShowCallback(actualTriggerElement, modal);\n                }\n\n                modal.show();\n\n                return modal;\n            });\n            data.originalEvent.preventDefault();\n        };\n\n        // The trigger element can either be a single element or it can be an\n        // element + selector pair to create a delegated event handler to trigger\n        // the modal.\n        if (Array.isArray(triggerElement)) {\n            var selector = triggerElement[1];\n            triggerElement = triggerElement[0];\n\n            CustomEvents.define(triggerElement, [CustomEvents.events.activate]);\n            triggerElement.on(CustomEvents.events.activate, selector, triggeredCallback);\n        } else {\n            CustomEvents.define(triggerElement, [CustomEvents.events.activate]);\n            triggerElement.on(CustomEvents.events.activate, triggeredCallback);\n        }\n\n        modalPromise.then(function(modal) {\n            modal.getRoot().on(ModalEvents.hidden, function() {\n                // Focus on the trigger element that actually launched the modal.\n                if (actualTriggerElement !== null) {\n                    actualTriggerElement.focus();\n                }\n            });\n\n            return modal;\n        });\n    };\n\n    /**\n     * Create the correct instance of a modal based on the givem type. Sets up\n     * the trigger between the modal and the trigger element.\n     *\n     * @method createFromElement\n     * @param {object} registryConf A config from the ModalRegistry\n     * @param {object} modalElement The modal HTML jQuery object\n     * @return {object} Modal instance\n     */\n    var createFromElement = function(registryConf, modalElement) {\n        modalElement = $(modalElement);\n        var module = registryConf.module;\n        var modal = new module(modalElement);\n\n        return modal;\n    };\n\n    /**\n     * Create the correct modal instance for the given type, including loading\n     * the correct template.\n     *\n     * @method createFromType\n     * @param {object} registryConf A config from the ModalRegistry\n     * @param {object} templateContext The context to render the template with\n     * @return {promise} Resolved with a Modal instance\n     */\n    var createFromType = function(registryConf, templateContext) {\n        var templateName = registryConf.template;\n\n        var modalPromise = Templates.render(templateName, templateContext)\n            .then(function(html) {\n                var modalElement = $(html);\n                return createFromElement(registryConf, modalElement);\n            })\n            .fail(Notification.exception);\n\n        return modalPromise;\n    };\n\n    /**\n     * Create a Modal instance.\n     *\n     * @method create\n     * @param {object} modalConfig The configuration to create the modal instance\n     * @param {object} triggerElement The trigger HTML jQuery object\n     * @return {promise} Resolved with a Modal instance\n     */\n    var create = function(modalConfig, triggerElement) {\n        var type = modalConfig.type || TYPES.DEFAULT;\n        var isLarge = modalConfig.large ? true : false;\n        var registryConf = null;\n        var templateContext = {};\n\n        registryConf = ModalRegistry.get(type);\n\n        if (!registryConf) {\n            Notification.exception({message: 'Unable to find modal of type: ' + type});\n        }\n\n        if (typeof modalConfig.templateContext != 'undefined') {\n            templateContext = modalConfig.templateContext;\n        }\n\n        var modalPromise = createFromType(registryConf, templateContext)\n            .then(function(modal) {\n                if (typeof modalConfig.title != 'undefined') {\n                    modal.setTitle(modalConfig.title);\n                }\n\n                if (typeof modalConfig.body != 'undefined') {\n                    modal.setBody(modalConfig.body);\n                }\n\n                if (typeof modalConfig.footer != 'undefined') {\n                    modal.setFooter(modalConfig.footer);\n                }\n\n                if (isLarge) {\n                    modal.setLarge();\n                }\n\n                return modal;\n            });\n\n        if (typeof triggerElement != 'undefined') {\n            setUpTrigger(modalPromise, triggerElement, modalConfig);\n        }\n\n        return modalPromise;\n    };\n\n    return {\n        create: create,\n        types: TYPES,\n    };\n});\n"]}