{"version":3,"sources":["../src/icon_system_standard.js"],"names":["define","IconSystem","CoreUrl","Mustache","IconSystemStandard","apply","arguments","prototype","Object","create","renderIcon","key","component","title","template","url","imageUrl","result","render","attributes","name","value","trim","getTemplateName"],"mappings":"aAuBAA,mCAAO,CAAC,kBAAD,CAAqB,UAArB,CAAiC,eAAjC,CAAP,CACQ,SAASC,UAAT,CAAqBC,OAArB,CAA8BC,QAA9B,CAAwC,CAK5C,GAAIC,oBAAqB,UAAW,CAChCH,WAAWI,KAAX,CAAiB,IAAjB,CAAuBC,SAAvB,CACH,CAFD,CAuCA,MApCAF,oBAAmBG,SAAnB,CAA+BC,OAAOC,MAAP,CAAcR,WAAWM,SAAzB,CAoC/B,CAxBAH,mBAAmBG,SAAnB,CAA6BG,UAA7B,CAA0C,SAASC,GAAT,CAAcC,SAAd,CAAyBC,KAAzB,CAAgCC,QAAhC,CAA0C,IAC5EC,KAAMb,QAAQc,QAAR,CAAiBL,GAAjB,CAAsBC,SAAtB,CADsE,CAU5EK,OAASd,SAASe,MAAT,CAAgBJ,QAAhB,CAPS,CAClBK,WAAY,CACR,CAACC,KAAM,KAAP,CAAcC,MAAON,GAArB,CADQ,CAER,CAACK,KAAM,KAAP,CAAcC,MAAOR,KAArB,CAFQ,CAGR,CAACO,KAAM,OAAP,CAAgBC,MAAOR,KAAvB,CAHQ,CADM,CAOT,CAVmE,CAWhF,MAAOI,QAAOK,IAAP,EACV,CAYD,CAJAlB,mBAAmBG,SAAnB,CAA6BgB,eAA7B,CAA+C,UAAW,CACtD,MAAO,eACV,CAED,CAAsDnB,kBAEzD,CA/CD,C","file":"icon_system_standard.min.js","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Competency rule points module.\n *\n * @package    core\n * @copyright  2017 Damyon Wiese\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['core/icon_system', 'core/url', 'core/mustache'],\n        function(IconSystem, CoreUrl, Mustache) {\n\n    /**\n     * IconSystemStandard\n     */\n    var IconSystemStandard = function() {\n        IconSystem.apply(this, arguments);\n    };\n    IconSystemStandard.prototype = Object.create(IconSystem.prototype);\n\n    /**\n     * Render an icon.\n     *\n     * @param {String} key\n     * @param {String} component\n     * @param {String} title\n     * @param {String} template\n     * @return {String}\n     * @method renderIcon\n     */\n    IconSystemStandard.prototype.renderIcon = function(key, component, title, template) {\n        var url = CoreUrl.imageUrl(key, component);\n\n        var templatecontext = {\n            attributes: [\n                {name: 'src', value: url},\n                {name: 'alt', value: title},\n                {name: 'title', value: title}\n            ]\n        };\n        var result = Mustache.render(template, templatecontext);\n        return result.trim();\n    };\n\n    /**\n     * Get the name of the template to pre-cache for this icon system.\n     *\n     * @return {String}\n     * @method getTemplateName\n     */\n    IconSystemStandard.prototype.getTemplateName = function() {\n        return 'core/pix_icon';\n    };\n\n    return /** @alias module:core/icon_system_standard */ IconSystemStandard;\n\n});\n"]}