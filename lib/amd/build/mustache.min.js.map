{"version":3,"sources":["../src/mustache.js"],"names":["global","factory","exports","nodeName","define","amd","Mustache","mustache","isFunction","object","typeStr","obj","isArray","escapeRegExp","string","replace","hasProperty","propName","testRegExp","re","regExpTest","call","isWhitespace","nonSpaceRe","parseTemplate","template","tags","stripSpace","hasTag","nonSpace","spaces","length","tokens","pop","compileTags","tagsToCompile","split","spaceRe","Error","openingTagRe","RegExp","closingTagRe","closingCurlyRe","sections","start","type","value","chr","token","openSection","scanner","Scanner","eos","pos","scanUntil","i","valueLength","charAt","push","scan","tagRe","whiteRe","equalsRe","curlyRe","nestTokens","squashTokens","lastToken","squashedTokens","numTokens","section","nestedTokens","collector","tail","Context","view","parentContext","blocks","cache","parent","Writer","objectToString","Object","prototype","toString","Array","test","entityMap","match","index","substring","search","setBlockVar","name","clearBlockVars","getBlockVar","hasOwnProperty","lookup","names","context","lookupHit","indexOf","clearCache","parse","join","render","partials","renderTokens","originalTemplate","symbol","buffer","renderSection","renderInverted","renderPartial","renderBlock","renderBlockVariable","unescapedValue","escapedValue","rawValue","subRender","self","j","slice","result","exists","escape","version","defaultWriter","TypeError","to_html","send","s"],"mappings":"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","file":"mustache.min.js","sourcesContent":["// The MIT License\n//\n// Copyright (c) 2009 Chris Wanstrath (Ruby)\n// Copyright (c) 2010-2014 Jan Lehnardt (JavaScript)\n// Copyright (c) 2010-2015 The mustache.js community\n//\n// Permission is hereby granted, free of charge, to any person obtaining\n// a copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to\n// the following conditions:\n//\n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\n// Description of import into Moodle:\n// Checkout from https://github.com/moodle/custom-mustache.js\n// Rebase onto latest release tag from https://github.com/janl/mustache.js\n// Copy mustache.js into lib/amd/src/ in Moodle folder.\n// Add the license as a comment to the file and these instructions.\n// Add jshint tags so this file is not linted.\n// Remove the \"global define:\" comment (hint for linter)\n// Make sure that you have not removed the custom code for '$' and '<'.\n\n/*!\n * mustache.js - Logic-less {{mustache}} templates with JavaScript\n * http://github.com/janl/mustache.js\n */\n\n/* jshint ignore:start */\n\n(function defineMustache (global, factory) {\n  if (typeof exports === 'object' && exports && typeof exports.nodeName !== 'string') {\n    factory(exports); // CommonJS\n  } else if (typeof define === 'function' && define.amd) {\n    define(['exports'], factory); // AMD\n  } else {\n    global.Mustache = {};\n    factory(global.Mustache); // script, wsh, asp\n  }\n}(this, function mustacheFactory (mustache) {\n\n  var objectToString = Object.prototype.toString;\n  var isArray = Array.isArray || function isArrayPolyfill (object) {\n    return objectToString.call(object) === '[object Array]';\n  };\n\n  function isFunction (object) {\n    return typeof object === 'function';\n  }\n\n  /**\n   * More correct typeof string handling array\n   * which normally returns typeof 'object'\n   */\n  function typeStr (obj) {\n    return isArray(obj) ? 'array' : typeof obj;\n  }\n\n  function escapeRegExp (string) {\n    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n  }\n\n  /**\n   * Null safe way of checking whether or not an object,\n   * including its prototype, has a given property\n   */\n  function hasProperty (obj, propName) {\n    return obj != null && typeof obj === 'object' && (propName in obj);\n  }\n\n  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n  // See https://github.com/janl/mustache.js/issues/189\n  var regExpTest = RegExp.prototype.test;\n  function testRegExp (re, string) {\n    return regExpTest.call(re, string);\n  }\n\n  var nonSpaceRe = /\\S/;\n  function isWhitespace (string) {\n    return !testRegExp(nonSpaceRe, string);\n  }\n\n  var entityMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '/': '&#x2F;',\n    '`': '&#x60;',\n    '=': '&#x3D;'\n  };\n\n  function escapeHtml (string) {\n    return String(string).replace(/[&<>\"'`=\\/]/g, function fromEntityMap (s) {\n      return entityMap[s];\n    });\n  }\n\n  var whiteRe = /\\s*/;\n  var spaceRe = /\\s+/;\n  var equalsRe = /\\s*=/;\n  var curlyRe = /\\s*\\}/;\n  var tagRe = /#|\\^|\\/|>|\\{|&|=|!|\\$|</;\n\n  /**\n   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n   * argument is given here it must be an array with two string values: the\n   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n   * course, the default is to use mustaches (i.e. mustache.tags).\n   *\n   * A token is an array with at least 4 elements. The first element is the\n   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n   * all text that appears outside a symbol this element is \"text\".\n   *\n   * The second element of a token is its \"value\". For mustache tags this is\n   * whatever else was inside the tag besides the opening symbol. For text tokens\n   * this is the text itself.\n   *\n   * The third and fourth elements of the token are the start and end indices,\n   * respectively, of the token in the original template.\n   *\n   * Tokens that are the root node of a subtree contain two more elements: 1) an\n   * array of tokens in the subtree and 2) the index in the original template at\n   * which the closing tag for that section begins.\n   */\n  function parseTemplate (template, tags) {\n    if (!template)\n      return [];\n\n    var sections = [];     // Stack to hold section tokens\n    var tokens = [];       // Buffer to hold the tokens\n    var spaces = [];       // Indices of whitespace tokens on the current line\n    var hasTag = false;    // Is there a {{tag}} on the current line?\n    var nonSpace = false;  // Is there a non-space char on the current line?\n\n    // Strips all whitespace tokens array for the current line\n    // if there was a {{#tag}} on it and otherwise only space.\n    function stripSpace () {\n      if (hasTag && !nonSpace) {\n        while (spaces.length)\n          delete tokens[spaces.pop()];\n      } else {\n        spaces = [];\n      }\n\n      hasTag = false;\n      nonSpace = false;\n    }\n\n    var openingTagRe, closingTagRe, closingCurlyRe;\n    function compileTags (tagsToCompile) {\n      if (typeof tagsToCompile === 'string')\n        tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\n      if (!isArray(tagsToCompile) || tagsToCompile.length !== 2)\n        throw new Error('Invalid tags: ' + tagsToCompile);\n\n      openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n      closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n      closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n    }\n\n    compileTags(tags || mustache.tags);\n\n    var scanner = new Scanner(template);\n\n    var start, type, value, chr, token, openSection;\n    while (!scanner.eos()) {\n      start = scanner.pos;\n\n      // Match any text between tags.\n      value = scanner.scanUntil(openingTagRe);\n\n      if (value) {\n        for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n          chr = value.charAt(i);\n\n          if (isWhitespace(chr)) {\n            spaces.push(tokens.length);\n          } else {\n            nonSpace = true;\n          }\n\n          tokens.push([ 'text', chr, start, start + 1 ]);\n          start += 1;\n\n          // Check for whitespace on the current line.\n          if (chr === '\\n')\n            stripSpace();\n        }\n      }\n\n      // Match the opening tag.\n      if (!scanner.scan(openingTagRe))\n        break;\n\n      hasTag = true;\n\n      // Get the tag type.\n      type = scanner.scan(tagRe) || 'name';\n      scanner.scan(whiteRe);\n\n      // Get the tag value.\n      if (type === '=') {\n        value = scanner.scanUntil(equalsRe);\n        scanner.scan(equalsRe);\n        scanner.scanUntil(closingTagRe);\n      } else if (type === '{') {\n        value = scanner.scanUntil(closingCurlyRe);\n        scanner.scan(curlyRe);\n        scanner.scanUntil(closingTagRe);\n        type = '&';\n      } else {\n        value = scanner.scanUntil(closingTagRe);\n      }\n\n      // Match the closing tag.\n      if (!scanner.scan(closingTagRe))\n        throw new Error('Unclosed tag at ' + scanner.pos);\n\n      token = [ type, value, start, scanner.pos ];\n      tokens.push(token);\n\n      if (type === '#' || type === '^' || type === '$' || type === '<') {\n        sections.push(token);\n      } else if (type === '/') {\n        // Check section nesting.\n        openSection = sections.pop();\n\n        if (!openSection)\n          throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n        if (openSection[1] !== value)\n          throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n      } else if (type === 'name' || type === '{' || type === '&') {\n        nonSpace = true;\n      } else if (type === '=') {\n        // Set the tags for the next time around.\n        compileTags(value);\n      }\n    }\n\n    // Make sure there are no open sections when we're done.\n    openSection = sections.pop();\n\n    if (openSection)\n      throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n    return nestTokens(squashTokens(tokens));\n  }\n\n  /**\n   * Combines the values of consecutive text tokens in the given `tokens` array\n   * to a single token.\n   */\n  function squashTokens (tokens) {\n    var squashedTokens = [];\n\n    var token, lastToken;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      if (token) {\n        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n          lastToken[1] += token[1];\n          lastToken[3] = token[3];\n        } else {\n          squashedTokens.push(token);\n          lastToken = token;\n        }\n      }\n    }\n\n    return squashedTokens;\n  }\n\n  /**\n   * Forms the given array of `tokens` into a nested tree structure where\n   * tokens that represent a section have two additional items: 1) an array of\n   * all tokens that appear in that section and 2) the index in the original\n   * template that represents the end of that section.\n   */\n  function nestTokens (tokens) {\n    var nestedTokens = [];\n    var collector = nestedTokens;\n    var sections = [];\n\n    var token, section;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      switch (token[0]) {\n        case '$':\n        case '<':\n        case '#':\n        case '^':\n          collector.push(token);\n          sections.push(token);\n          collector = token[4] = [];\n          break;\n        case '/':\n          section = sections.pop();\n          section[5] = token[2];\n          collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n          break;\n        default:\n          collector.push(token);\n      }\n    }\n\n    return nestedTokens;\n  }\n\n  /**\n   * A simple string scanner that is used by the template parser to find\n   * tokens in template strings.\n   */\n  function Scanner (string) {\n    this.string = string;\n    this.tail = string;\n    this.pos = 0;\n  }\n\n  /**\n   * Returns `true` if the tail is empty (end of string).\n   */\n  Scanner.prototype.eos = function eos () {\n    return this.tail === '';\n  };\n\n  /**\n   * Tries to match the given regular expression at the current position.\n   * Returns the matched text if it can match, the empty string otherwise.\n   */\n  Scanner.prototype.scan = function scan (re) {\n    var match = this.tail.match(re);\n\n    if (!match || match.index !== 0)\n      return '';\n\n    var string = match[0];\n\n    this.tail = this.tail.substring(string.length);\n    this.pos += string.length;\n\n    return string;\n  };\n\n  /**\n   * Skips all text until the given regular expression can be matched. Returns\n   * the skipped string, which is the entire tail if no match can be made.\n   */\n  Scanner.prototype.scanUntil = function scanUntil (re) {\n    var index = this.tail.search(re), match;\n\n    switch (index) {\n      case -1:\n        match = this.tail;\n        this.tail = '';\n        break;\n      case 0:\n        match = '';\n        break;\n      default:\n        match = this.tail.substring(0, index);\n        this.tail = this.tail.substring(index);\n    }\n\n    this.pos += match.length;\n\n    return match;\n  };\n\n  /**\n   * Represents a rendering context by wrapping a view object and\n   * maintaining a reference to the parent context.\n   */\n  function Context (view, parentContext) {\n    this.view = view;\n    this.blocks = {};\n    this.cache = { '.': this.view };\n    this.parent = parentContext;\n  }\n\n  /**\n   * Creates a new context using the given view with this context\n   * as the parent.\n   */\n  Context.prototype.push = function push (view) {\n    return new Context(view, this);\n  };\n\n  /**\n   * Set a value in the current block context.\n   */\n  Context.prototype.setBlockVar = function set (name, value) {\n    var blocks = this.blocks;\n\n    blocks[name] = value;\n\n    return value;\n  };\n\n  /**\n   * Clear all current block vars.\n   */\n  Context.prototype.clearBlockVars = function clearBlockVars () {\n    this.blocks = {};\n  };\n\n  /**\n   * Get a value only from the current block context.\n   */\n  Context.prototype.getBlockVar = function getBlockVar (name) {\n    var blocks = this.blocks;\n\n    var value;\n    if (blocks.hasOwnProperty(name)) {\n      value = blocks[name];\n    } else {\n      if (this.parent) {\n        value = this.parent.getBlockVar(name);\n      }\n    }\n    // Can return undefined.\n    return value;\n  };\n\n  /**\n   * Returns the value of the given name in this context, traversing\n   * up the context hierarchy if the value is absent in this context's view.\n   */\n  Context.prototype.lookup = function lookup (name) {\n    var cache = this.cache;\n\n    var value;\n    if (cache.hasOwnProperty(name)) {\n      value = cache[name];\n    } else {\n      var context = this, names, index, lookupHit = false;\n\n      while (context) {\n        if (name.indexOf('.') > 0) {\n          value = context.view;\n          names = name.split('.');\n          index = 0;\n\n          /**\n           * Using the dot notion path in `name`, we descend through the\n           * nested objects.\n           *\n           * To be certain that the lookup has been successful, we have to\n           * check if the last object in the path actually has the property\n           * we are looking for. We store the result in `lookupHit`.\n           *\n           * This is specially necessary for when the value has been set to\n           * `undefined` and we want to avoid looking up parent contexts.\n           **/\n          while (value != null && index < names.length) {\n            if (index === names.length - 1)\n              lookupHit = hasProperty(value, names[index]);\n\n            value = value[names[index++]];\n          }\n        } else {\n          value = context.view[name];\n          lookupHit = hasProperty(context.view, name);\n        }\n\n        if (lookupHit)\n          break;\n\n        context = context.parent;\n      }\n\n      cache[name] = value;\n    }\n\n    if (isFunction(value))\n      value = value.call(this.view);\n\n    return value;\n  };\n\n  /**\n   * A Writer knows how to take a stream of tokens and render them to a\n   * string, given a context. It also maintains a cache of templates to\n   * avoid the need to parse the same template twice.\n   */\n  function Writer () {\n    this.cache = {};\n  }\n\n  /**\n   * Clears all cached templates in this writer.\n   */\n  Writer.prototype.clearCache = function clearCache () {\n    this.cache = {};\n  };\n\n  /**\n   * Parses and caches the given `template` and returns the array of tokens\n   * that is generated from the parse.\n   */\n  Writer.prototype.parse = function parse (template, tags) {\n    var cache = this.cache;\n    var tokens = cache[template];\n\n    if (tokens == null)\n      tokens = cache[template + ':' + (tags || mustache.tags).join(':')] = parseTemplate(template, tags);\n\n    return tokens;\n  };\n\n  /**\n   * High-level method that is used to render the given `template` with\n   * the given `view`.\n   *\n   * The optional `partials` argument may be an object that contains the\n   * names and templates of partials that are used in the template. It may\n   * also be a function that is used to load partial templates on the fly\n   * that takes a single argument: the name of the partial.\n   */\n  Writer.prototype.render = function render (template, view, partials) {\n    var tokens = this.parse(template);\n    var context = (view instanceof Context) ? view : new Context(view);\n    return this.renderTokens(tokens, context, partials, template);\n  };\n\n  /**\n   * Low-level method that renders the given array of `tokens` using\n   * the given `context` and `partials`.\n   *\n   * Note: The `originalTemplate` is only ever used to extract the portion\n   * of the original template that was contained in a higher-order section.\n   * If the template doesn't use higher-order sections, this argument may\n   * be omitted.\n   */\n  Writer.prototype.renderTokens = function renderTokens (tokens, context, partials, originalTemplate) {\n    var buffer = '';\n\n    var token, symbol, value;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      value = undefined;\n      token = tokens[i];\n      symbol = token[0];\n\n      if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate);\n      else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate);\n      else if (symbol === '>') value = this.renderPartial(token, context, partials, originalTemplate);\n      else if (symbol === '<') value = this.renderBlock(token, context, partials, originalTemplate);\n      else if (symbol === '$') value = this.renderBlockVariable(token, context, partials, originalTemplate);\n      else if (symbol === '&') value = this.unescapedValue(token, context);\n      else if (symbol === 'name') value = this.escapedValue(token, context);\n      else if (symbol === 'text') value = this.rawValue(token);\n\n      if (value !== undefined)\n        buffer += value;\n    }\n\n    return buffer;\n  };\n\n  Writer.prototype.renderSection = function renderSection (token, context, partials, originalTemplate) {\n    var self = this;\n    var buffer = '';\n    var value = context.lookup(token[1]);\n\n    // This function is used to render an arbitrary template\n    // in the current context by higher-order sections.\n    function subRender (template) {\n      return self.render(template, context, partials);\n    }\n\n    if (!value) return;\n\n    if (isArray(value)) {\n      for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n        buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n      }\n    } else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {\n      buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n    } else if (isFunction(value)) {\n      if (typeof originalTemplate !== 'string')\n        throw new Error('Cannot use higher-order sections without the original template');\n\n      // Extract the portion of the original template that the section contains.\n      value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n      if (value != null)\n        buffer += value;\n    } else {\n      buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n    }\n    return buffer;\n  };\n\n  Writer.prototype.renderInverted = function renderInverted (token, context, partials, originalTemplate) {\n    var value = context.lookup(token[1]);\n\n    // Use JavaScript's definition of falsy. Include empty arrays.\n    // See https://github.com/janl/mustache.js/issues/186\n    if (!value || (isArray(value) && value.length === 0))\n      return this.renderTokens(token[4], context, partials, originalTemplate);\n  };\n\n  Writer.prototype.renderPartial = function renderPartial (token, context, partials) {\n    if (!partials) return;\n\n    var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n    if (value != null)\n      return this.renderTokens(this.parse(value), context, partials, value);\n  };\n\n  Writer.prototype.renderBlock = function renderBlock (token, context, partials, originalTemplate) {\n    if (!partials) return;\n\n    var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n    if (value != null)\n      // Ignore any wrongly set block vars before we started.\n      context.clearBlockVars();\n      // We are only rendering to record the default block variables.\n      this.renderTokens(token[4], context, partials, originalTemplate);\n      // Now we render and return the result.\n      var result = this.renderTokens(this.parse(value), context, partials, value);\n      // Don't leak the block variables outside this include.\n      context.clearBlockVars();\n      return result;\n  };\n\n  Writer.prototype.renderBlockVariable = function renderBlockVariable (token, context, partials, originalTemplate) {\n    var value = token[1];\n\n    var exists = context.getBlockVar(value);\n    if (!exists) {\n      context.setBlockVar(value, originalTemplate.slice(token[3], token[5]));\n      return this.renderTokens(token[4], context, partials, originalTemplate);\n    } else {\n      return this.renderTokens(this.parse(exists), context, partials, exists);\n    }\n  };\n\n  Writer.prototype.unescapedValue = function unescapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return value;\n  };\n\n  Writer.prototype.escapedValue = function escapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return mustache.escape(value);\n  };\n\n  Writer.prototype.rawValue = function rawValue (token) {\n    return token[1];\n  };\n\n  mustache.name = 'mustache.js';\n  mustache.version = '2.3.0';\n  mustache.tags = [ '{{', '}}' ];\n\n  // All high-level mustache.* functions use this writer.\n  var defaultWriter = new Writer();\n\n  /**\n   * Clears all cached templates in the default writer.\n   */\n  mustache.clearCache = function clearCache () {\n    return defaultWriter.clearCache();\n  };\n\n  /**\n   * Parses and caches the given template in the default writer and returns the\n   * array of tokens it contains. Doing this ahead of time avoids the need to\n   * parse templates on the fly as they are rendered.\n   */\n  mustache.parse = function parse (template, tags) {\n    return defaultWriter.parse(template, tags);\n  };\n\n  /**\n   * Renders the `template` with the given `view` and `partials` using the\n   * default writer.\n   */\n  mustache.render = function render (template, view, partials) {\n    if (typeof template !== 'string') {\n      throw new TypeError('Invalid template! Template should be a \"string\" ' +\n                          'but \"' + typeStr(template) + '\" was given as the first ' +\n                          'argument for mustache#render(template, view, partials)');\n    }\n\n    return defaultWriter.render(template, view, partials);\n  };\n\n  // This is here for backwards compatibility with 0.4.x.,\n  /*eslint-disable */ // eslint wants camel cased function name\n  mustache.to_html = function to_html (template, view, partials, send) {\n    /*eslint-enable*/\n\n    var result = mustache.render(template, view, partials);\n\n    if (isFunction(send)) {\n      send(result);\n    } else {\n      return result;\n    }\n  };\n\n  // Export the escaping function so that the user may override it.\n  // See https://github.com/janl/mustache.js/issues/244\n  mustache.escape = escapeHtml;\n\n  // Export these mainly for testing, but also for advanced usage.\n  mustache.Scanner = Scanner;\n  mustache.Context = Context;\n  mustache.Writer = Writer;\n\n  return mustache;\n}));\n/* jshint ignore:end */\n"]}