{"version":3,"sources":["../src/modal_save_cancel.js"],"names":["define","$","Notification","CustomEvents","Modal","ModalEvents","SELECTORS","SAVE_BUTTON","CANCEL_BUTTON","ModalSaveCancel","root","call","getFooter","find","length","exception","message","prototype","Object","create","constructor","setFooter","registerEventListeners","getModal","on","events","activate","e","data","saveEvent","Event","save","getRoot","trigger","isDefaultPrevented","hide","originalEvent","preventDefault","bind","cancelEvent","cancel","setSaveButtonText","value","button","asyncSet","text"],"mappings":"aAwBAA,gCAAO,CAAC,QAAD,CAAW,mBAAX,CAAgC,gCAAhC,CAAkE,YAAlE,CAAgF,mBAAhF,CAAP,CACQ,SAASC,CAAT,CAAYC,YAAZ,CAA0BC,YAA1B,CAAwCC,KAAxC,CAA+CC,WAA/C,CAA4D,IAE5DC,WAAY,CACZC,YAAa,sBADD,CAEZC,cAAe,wBAFH,CAFgD,CAY5DC,gBAAkB,SAASC,IAAT,CAAe,CACjCN,MAAMO,IAAN,CAAW,IAAX,CAAiBD,IAAjB,CADiC,CAG5B,KAAKE,SAAL,GAAiBC,IAAjB,CAAsBP,UAAUC,WAAhC,EAA6CO,MAHjB,EAI7BZ,aAAaa,SAAb,CAAuB,CAACC,QAAS,sBAAV,CAAvB,CAJ6B,CAO5B,KAAKJ,SAAL,GAAiBC,IAAjB,CAAsBP,UAAUE,aAAhC,EAA+CM,MAPnB,EAQ7BZ,aAAaa,SAAb,CAAuB,CAACC,QAAS,wBAAV,CAAvB,CAEP,CAtB+D,CA+EhE,MAvDAP,iBAAgBQ,SAAhB,CAA4BC,OAAOC,MAAP,CAAcf,MAAMa,SAApB,CAuD5B,CAtDAR,gBAAgBQ,SAAhB,CAA0BG,WAA1B,CAAwCX,eAsDxC,CAjDAA,gBAAgBQ,SAAhB,CAA0BI,SAA1B,CAAsC,UAAW,CAC7CnB,aAAaa,SAAb,CAAuB,CAACC,QAAS,kDAAV,CAAvB,CAEH,CA8CD,CAvCAP,gBAAgBQ,SAAhB,CAA0BK,sBAA1B,CAAmD,UAAW,CAE1DlB,MAAMa,SAAN,CAAgBK,sBAAhB,CAAuCX,IAAvC,CAA4C,IAA5C,CAF0D,CAI1D,KAAKY,QAAL,GAAgBC,EAAhB,CAAmBrB,aAAasB,MAAb,CAAoBC,QAAvC,CAAiDpB,UAAUC,WAA3D,CAAwE,SAASoB,CAAT,CAAYC,IAAZ,CAAkB,CACtF,GAAIC,WAAY5B,EAAE6B,KAAF,CAAQzB,YAAY0B,IAApB,CAAhB,CACA,KAAKC,OAAL,GAAeC,OAAf,CAAuBJ,SAAvB,CAAkC,IAAlC,CAFsF,CAIjFA,UAAUK,kBAAV,EAJiF,GAKlF,KAAKC,IAAL,EALkF,CAMlFP,KAAKQ,aAAL,CAAmBC,cAAnB,EANkF,CAQzF,CARuE,CAQtEC,IARsE,CAQjE,IARiE,CAAxE,CAJ0D,CAc1D,KAAKf,QAAL,GAAgBC,EAAhB,CAAmBrB,aAAasB,MAAb,CAAoBC,QAAvC,CAAiDpB,UAAUE,aAA3D,CAA0E,SAASmB,CAAT,CAAYC,IAAZ,CAAkB,CACxF,GAAIW,aAActC,EAAE6B,KAAF,CAAQzB,YAAYmC,MAApB,CAAlB,CACA,KAAKR,OAAL,GAAeC,OAAf,CAAuBM,WAAvB,CAAoC,IAApC,CAFwF,CAInFA,YAAYL,kBAAZ,EAJmF,GAKpF,KAAKC,IAAL,EALoF,CAMpFP,KAAKQ,aAAL,CAAmBC,cAAnB,EANoF,CAQ3F,CARyE,CAQxEC,IARwE,CAQnE,IARmE,CAA1E,CASH,CAgBD,CANA7B,gBAAgBQ,SAAhB,CAA0BwB,iBAA1B,CAA8C,SAASC,KAAT,CAAgB,CAC1D,GAAIC,QAAS,KAAK/B,SAAL,GAAiBC,IAAjB,CAAsBP,UAAUC,WAAhC,CAAb,CAEA,KAAKqC,QAAL,CAAcF,KAAd,CAAqBC,OAAOE,IAAP,CAAYP,IAAZ,CAAiBK,MAAjB,CAArB,CACH,CAED,CAAOlC,eACV,CAjFD,C","file":"modal_save_cancel.min.js","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Contain the logic for the save/cancel modal.\n *\n * @module     core/modal_save_cancel\n * @class      modal_save_cancel\n * @package    core\n * @copyright  2016 Ryan Wyllie <ryan@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/notification', 'core/custom_interaction_events', 'core/modal', 'core/modal_events'],\n        function($, Notification, CustomEvents, Modal, ModalEvents) {\n\n    var SELECTORS = {\n        SAVE_BUTTON: '[data-action=\"save\"]',\n        CANCEL_BUTTON: '[data-action=\"cancel\"]',\n    };\n\n    /**\n     * Constructor for the Modal.\n     *\n     * @param {object} root The root jQuery element for the modal\n     */\n    var ModalSaveCancel = function(root) {\n        Modal.call(this, root);\n\n        if (!this.getFooter().find(SELECTORS.SAVE_BUTTON).length) {\n            Notification.exception({message: 'No save button found'});\n        }\n\n        if (!this.getFooter().find(SELECTORS.CANCEL_BUTTON).length) {\n            Notification.exception({message: 'No cancel button found'});\n        }\n    };\n\n    ModalSaveCancel.prototype = Object.create(Modal.prototype);\n    ModalSaveCancel.prototype.constructor = ModalSaveCancel;\n\n    /**\n     * Override parent implementation to prevent changing the footer content.\n     */\n    ModalSaveCancel.prototype.setFooter = function() {\n        Notification.exception({message: 'Can not change the footer of a save cancel modal'});\n        return;\n    };\n\n    /**\n     * Set up all of the event handling for the modal.\n     *\n     * @method registerEventListeners\n     */\n    ModalSaveCancel.prototype.registerEventListeners = function() {\n        // Apply parent event listeners.\n        Modal.prototype.registerEventListeners.call(this);\n\n        this.getModal().on(CustomEvents.events.activate, SELECTORS.SAVE_BUTTON, function(e, data) {\n            var saveEvent = $.Event(ModalEvents.save);\n            this.getRoot().trigger(saveEvent, this);\n\n            if (!saveEvent.isDefaultPrevented()) {\n                this.hide();\n                data.originalEvent.preventDefault();\n            }\n        }.bind(this));\n\n        this.getModal().on(CustomEvents.events.activate, SELECTORS.CANCEL_BUTTON, function(e, data) {\n            var cancelEvent = $.Event(ModalEvents.cancel);\n            this.getRoot().trigger(cancelEvent, this);\n\n            if (!cancelEvent.isDefaultPrevented()) {\n                this.hide();\n                data.originalEvent.preventDefault();\n            }\n        }.bind(this));\n    };\n\n    /**\n     * Allows to overwrite the text of \"Save changes\" button.\n     *\n     * This method is overloaded to take either a string value for the button title or a jQuery promise that is resolved with\n     * text most commonly from a Str.get_string call.\n     *\n     * @param {(String|object)} value The button text, or a jQuery promise which will resolve it\n     */\n    ModalSaveCancel.prototype.setSaveButtonText = function(value) {\n        var button = this.getFooter().find(SELECTORS.SAVE_BUTTON);\n\n        this.asyncSet(value, button.text.bind(button));\n    };\n\n    return ModalSaveCancel;\n});\n"]}