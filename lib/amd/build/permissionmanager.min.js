'use strict';define('core/permissionmanager',['jquery','core/config','core/notification','core/templates','core/yui'],function($,config,notification,templates,Y){var contextid,contextname,adminurl,overideableroles,SELECTORS={ADDROLE:'a.allowlink, a.prohibitlink',REMOVEROLE:'a.preventlink, a.unprohibitlink',UNPROHIBIT:'a.unprohibitlink'},rolesloadedevent=$.Event('rolesloaded'),panel=null,_loadOverideableRoles=function loadOverideableRoles(){var params={contextid:contextid,getroles:1,sesskey:config.sesskey};$.post(adminurl+'roles/ajax.php',params,null,'json').done(function(data){try{overideableroles=data,_loadOverideableRoles=function loadOverideableRoles(){$('body').trigger(rolesloadedevent)},_loadOverideableRoles()}catch(err){notification.exception(err)}}).fail(function(jqXHR,status,error){notification.exception(error)})},changePermissions=function(row,roleid,action){var params={contextid:contextid,roleid:roleid,sesskey:M.cfg.sesskey,action:action,capability:row.data('name')};$.post(adminurl+'roles/ajax.php',params,null,'json').done(function(data){var action=data;try{var templatedata={rolename:overideableroles[roleid],roleid:roleid,adminurl:adminurl,imageurl:M.util.image_url('t/delete','moodle')};switch(action){case'allow':templatedata.spanclass='allowed',templatedata.linkclass='preventlink',templatedata.action='prevent',templatedata.icon='t/delete';break;case'prohibit':templatedata.spanclass='forbidden',templatedata.linkclass='unprohibitlink',templatedata.action='unprohibit',templatedata.icon='t/delete';break;case'prevent':return void row.find('a[data-role-id="'+roleid+'"]').first().closest('.allowed').remove();case'unprohibit':return void row.find('a[data-role-id="'+roleid+'"]').first().closest('.forbidden').remove();default:return;}templates.render('core/permissionmanager_role',templatedata).done(function(content){if('allow'==action)$(content).insertBefore(row.find('.allowmore:first'));else if('prohibit'==action){$(content).insertBefore(row.find('.prohibitmore:first'));var allowedLink=row.find('.allowedroles').first().find('a[data-role-id="'+roleid+'"]');allowedLink&&allowedLink.first().closest('.allowed').remove()}panel.hide()}).fail(notification.exception)}catch(err){notification.exception(err)}}).fail(function(jqXHR,status,error){notification.exception(error)})},handleAddRole=function(e){e.preventDefault(),Y.use('moodle-core-notification-dialogue',function(){$('body').one('rolesloaded',function(){var link=$(e.currentTarget),action=link.data('action'),row=link.closest('tr.rolecap'),confirmationDetails={cap:row.data('humanname'),context:contextname},message=M.util.get_string('role'+action+'info','core_role',confirmationDetails);null===panel&&(panel=new M.core.dialogue({draggable:!0,modal:!0,closeButton:!0,width:'450px'})),panel.set('headerContent',M.util.get_string('role'+action+'header','core_role'));var i,existingrolelinks,roles=[];for(i in'allow'===action?existingrolelinks=row.find(SELECTORS.REMOVEROLE):'prohibit'===action?existingrolelinks=row.find(SELECTORS.UNPROHIBIT):void 0,overideableroles){var disabled='',disable=existingrolelinks.filter('[data-role-id=\''+i+'\']').length;disable&&(disabled='disabled');var roledetails={roleid:i,rolename:overideableroles[i],disabled:disabled};roles.push(roledetails)}templates.render('core/permissionmanager_panelcontent',{message:message,roles:roles}).done(function(content){panel.set('bodyContent',content),panel.show(),$('div.role_buttons').delegate('input','click',function(e){var roleid=$(e.currentTarget).data('role-id');changePermissions(row,roleid,action)})}).fail(notification.exception)})}),_loadOverideableRoles()},handleRemoveRole=function(e){e.preventDefault(),$('body').one('rolesloaded',function(){var link=$(e.currentTarget),action=link.data('action'),roleid=link.data('role-id'),row=link.closest('tr.rolecap'),questionDetails={role:overideableroles[roleid],cap:row.data('humanname'),context:contextname};notification.confirm(M.util.get_string('confirmunassigntitle','core_role'),M.util.get_string('confirmrole'+action,'core_role',questionDetails),M.util.get_string('confirmunassignyes','core_role'),M.util.get_string('confirmunassignno','core_role'),function(){changePermissions(row,roleid,action)})}),_loadOverideableRoles()};return{initialize:function initialize(args){contextid=args.contextid,contextname=args.contextname,adminurl=args.adminurl;var body=$('body');body.delegate(SELECTORS.ADDROLE,'click',handleAddRole),body.delegate(SELECTORS.REMOVEROLE,'click',handleRemoveRole)}}});
//# sourceMappingURL=permissionmanager.min.js.map
