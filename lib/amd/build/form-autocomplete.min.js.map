{"version":3,"sources":["../src/form-autocomplete.js"],"names":["define","$","log","str","templates","notification","KEYS","DOWN","ENTER","SPACE","ESCAPE","COMMA","UP","uniqueId","now","activateSelection","index","state","selectionElement","document","getElementById","selectionId","length","children","element","get","itemId","attr","updateSelectionList","options","originalSelect","items","newSelection","activeId","activeValue","each","ele","prop","label","data","html","push","value","context","extend","render","done","newHTML","empty","append","fail","exception","notifyChange","M","core_formchangechecker","set_form_changed","change","deselectItem","item","selectedItemValue","multiple","remove","activateItem","inputElement","inputId","suggestionsElement","suggestionsId","globalIndex","scrollPos","offset","top","scrollTop","height","animate","activateNextItem","current","activatePreviousSelection","selectionsElement","activateNextSelection","activatePreviousItem","closeSuggestions","hide","updateSuggestions","query","matchingElements","suggestions","option","innerHTML","searchquery","caseSensitive","toLocaleLowerCase","replaceWith","show","node","text","indexOf","tags","get_string","nosuggestionsstr","createItem","val","split","found","tagindex","tag","trim","selectCurrentItem","closeSuggestionsOnSelect","focus","updateAjax","e","ajaxHandler","util","js_pending","currentTarget","transport","selector","results","processedResults","processResults","existingValues","optionIndex","isArray","resultIndex","result","js_complete","error","addNavigation","on","pendingKey","keyCode","showSuggestions","ajax","require","preventDefault","window","setTimeout","focusElement","activeElement","arrowElement","downArrowId","parent","closest","selectedItem","throttleTimeout","handler","throttledHandler","clearTimeout","bind","last","enhance","placeholder","noSelectionString","debug","css","selectId","originalLabel","renderInput","renderDatalist","renderSelection","when","then","input","selection","after"],"mappings":"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","file":"form-autocomplete.min.js","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Autocomplete wrapper for select2 library.\n *\n * @module     core/form-autocomplete\n * @class      autocomplete\n * @package    core\n * @copyright  2015 Damyon Wiese <damyon@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      3.0\n */\n/* globals require: false */\ndefine(['jquery', 'core/log', 'core/str', 'core/templates', 'core/notification'], function($, log, str, templates, notification) {\n\n    // Private functions and variables.\n    /** @var {Object} KEYS - List of keycode constants. */\n    var KEYS = {\n        DOWN: 40,\n        ENTER: 13,\n        SPACE: 32,\n        ESCAPE: 27,\n        COMMA: 44,\n        UP: 38\n    };\n\n    var uniqueId = $.now();\n\n    /**\n     * Make an item in the selection list \"active\".\n     *\n     * @method activateSelection\n     * @private\n     * @param {Number} index The index in the current (visible) list of selection.\n     * @param {Object} state State variables for this autocomplete element.\n     */\n    var activateSelection = function(index, state) {\n        // Find the elements in the DOM.\n        var selectionElement = $(document.getElementById(state.selectionId));\n\n        // Count the visible items.\n        var length = selectionElement.children('[aria-selected=true]').length;\n        // Limit the index to the upper/lower bounds of the list (wrap in both directions).\n        index = index % length;\n        while (index < 0) {\n            index += length;\n        }\n        // Find the specified element.\n        var element = $(selectionElement.children('[aria-selected=true]').get(index));\n        // Create an id we can assign to this element.\n        var itemId = state.selectionId + '-' + index;\n\n        // Deselect all the selections.\n        selectionElement.children().attr('data-active-selection', false).attr('id', '');\n        // Select only this suggestion and assign it the id.\n        element.attr('data-active-selection', true).attr('id', itemId);\n        // Tell the input field it has a new active descendant so the item is announced.\n        selectionElement.attr('aria-activedescendant', itemId);\n    };\n\n    /**\n     * Update the element that shows the currently selected items.\n     *\n     * @method updateSelectionList\n     * @private\n     * @param {Object} options Original options for this autocomplete element.\n     * @param {Object} state State variables for this autocomplete element.\n     * @param {JQuery} originalSelect The JQuery object matching the hidden select list.\n     */\n    var updateSelectionList = function(options, state, originalSelect) {\n        // Build up a valid context to re-render the template.\n        var items = [];\n        var newSelection = $(document.getElementById(state.selectionId));\n        var activeId = newSelection.attr('aria-activedescendant');\n        var activeValue = false;\n\n        if (activeId) {\n            activeValue = $(document.getElementById(activeId)).attr('data-value');\n        }\n        originalSelect.children('option').each(function(index, ele) {\n            if ($(ele).prop('selected')) {\n                var label;\n                if ($(ele).data('html')) {\n                    label = $(ele).data('html');\n                } else {\n                    label = $(ele).html();\n                }\n                items.push({label: label, value: $(ele).attr('value')});\n            }\n        });\n        var context = $.extend({items: items}, options, state);\n\n        // Render the template.\n        templates.render('core/form_autocomplete_selection', context).done(function(newHTML) {\n            // Add it to the page.\n            newSelection.empty().append($(newHTML).html());\n\n            if (activeValue !== false) {\n                // Reselect any previously selected item.\n                newSelection.children('[aria-selected=true]').each(function(index, ele) {\n                    if ($(ele).attr('data-value') === activeValue) {\n                        activateSelection(index, state);\n                    }\n                });\n            }\n        }).fail(notification.exception);\n    };\n\n    /**\n     * Notify of a change in the selection.\n     *\n     * @param {jQuery} originalSelect The jQuery object matching the hidden select list.\n     */\n    var notifyChange = function(originalSelect) {\n        if (typeof M.core_formchangechecker !== 'undefined') {\n            M.core_formchangechecker.set_form_changed();\n        }\n        originalSelect.change();\n    };\n\n    /**\n     * Remove the given item from the list of selected things.\n     *\n     * @method deselectItem\n     * @private\n     * @param {Object} options Original options for this autocomplete element.\n     * @param {Object} state State variables for this autocomplete element.\n     * @param {Element} item The item to be deselected.\n     * @param {Element} originalSelect The original select list.\n     */\n    var deselectItem = function(options, state, item, originalSelect) {\n        var selectedItemValue = $(item).attr('data-value');\n\n        // We can only deselect items if this is a multi-select field.\n        if (options.multiple) {\n            // Look for a match, and toggle the selected property if there is a match.\n            originalSelect.children('option').each(function(index, ele) {\n                if ($(ele).attr('value') == selectedItemValue) {\n                    $(ele).prop('selected', false);\n                    // We remove newly created custom tags from the suggestions list when they are deselected.\n                    if ($(ele).attr('data-iscustom')) {\n                        $(ele).remove();\n                    }\n                }\n            });\n        }\n        // Rerender the selection list.\n        updateSelectionList(options, state, originalSelect);\n        // Notifiy that the selection changed.\n        notifyChange(originalSelect);\n    };\n\n    /**\n     * Make an item in the suggestions \"active\" (about to be selected).\n     *\n     * @method activateItem\n     * @private\n     * @param {Number} index The index in the current (visible) list of suggestions.\n     * @param {Object} state State variables for this instance of autocomplete.\n     */\n    var activateItem = function(index, state) {\n        // Find the elements in the DOM.\n        var inputElement = $(document.getElementById(state.inputId));\n        var suggestionsElement = $(document.getElementById(state.suggestionsId));\n\n        // Count the visible items.\n        var length = suggestionsElement.children('[aria-hidden=false]').length;\n        // Limit the index to the upper/lower bounds of the list (wrap in both directions).\n        index = index % length;\n        while (index < 0) {\n            index += length;\n        }\n        // Find the specified element.\n        var element = $(suggestionsElement.children('[aria-hidden=false]').get(index));\n        // Find the index of this item in the full list of suggestions (including hidden).\n        var globalIndex = $(suggestionsElement.children('[role=option]')).index(element);\n        // Create an id we can assign to this element.\n        var itemId = state.suggestionsId + '-' + globalIndex;\n\n        // Deselect all the suggestions.\n        suggestionsElement.children().attr('aria-selected', false).attr('id', '');\n        // Select only this suggestion and assign it the id.\n        element.attr('aria-selected', true).attr('id', itemId);\n        // Tell the input field it has a new active descendant so the item is announced.\n        inputElement.attr('aria-activedescendant', itemId);\n\n        // Scroll it into view.\n        var scrollPos = element.offset().top\n                       - suggestionsElement.offset().top\n                       + suggestionsElement.scrollTop()\n                       - (suggestionsElement.height() / 2);\n        suggestionsElement.animate({\n            scrollTop: scrollPos\n        }, 100);\n    };\n\n    /**\n     * Find the index of the current active suggestion, and activate the next one.\n     *\n     * @method activateNextItem\n     * @private\n     * @param {Object} state State variable for this auto complete element.\n     */\n    var activateNextItem = function(state) {\n        // Find the list of suggestions.\n        var suggestionsElement = $(document.getElementById(state.suggestionsId));\n        // Find the active one.\n        var element = suggestionsElement.children('[aria-selected=true]');\n        // Find it's index.\n        var current = suggestionsElement.children('[aria-hidden=false]').index(element);\n        // Activate the next one.\n        activateItem(current + 1, state);\n    };\n\n    /**\n     * Find the index of the current active selection, and activate the previous one.\n     *\n     * @method activatePreviousSelection\n     * @private\n     * @param {Object} state State variables for this instance of autocomplete.\n     */\n    var activatePreviousSelection = function(state) {\n        // Find the list of selections.\n        var selectionsElement = $(document.getElementById(state.selectionId));\n        // Find the active one.\n        var element = selectionsElement.children('[data-active-selection=true]');\n        if (!element) {\n            activateSelection(0, state);\n            return;\n        }\n        // Find it's index.\n        var current = selectionsElement.children('[aria-selected=true]').index(element);\n        // Activate the next one.\n        activateSelection(current - 1, state);\n    };\n    /**\n     * Find the index of the current active selection, and activate the next one.\n     *\n     * @method activateNextSelection\n     * @private\n     * @param {Object} state State variables for this instance of autocomplete.\n     */\n    var activateNextSelection = function(state) {\n        // Find the list of selections.\n        var selectionsElement = $(document.getElementById(state.selectionId));\n        // Find the active one.\n        var element = selectionsElement.children('[data-active-selection=true]');\n        if (!element) {\n            activateSelection(0, state);\n            return;\n        }\n        // Find it's index.\n        var current = selectionsElement.children('[aria-selected=true]').index(element);\n        // Activate the next one.\n        activateSelection(current + 1, state);\n    };\n\n    /**\n     * Find the index of the current active suggestion, and activate the previous one.\n     *\n     * @method activatePreviousItem\n     * @private\n     * @param {Object} state State variables for this autocomplete element.\n     */\n    var activatePreviousItem = function(state) {\n        // Find the list of suggestions.\n        var suggestionsElement = $(document.getElementById(state.suggestionsId));\n        // Find the active one.\n        var element = suggestionsElement.children('[aria-selected=true]');\n        // Find it's index.\n        var current = suggestionsElement.children('[aria-hidden=false]').index(element);\n        // Activate the next one.\n        activateItem(current - 1, state);\n    };\n\n    /**\n     * Close the list of suggestions.\n     *\n     * @method closeSuggestions\n     * @private\n     * @param {Object} state State variables for this autocomplete element.\n     */\n    var closeSuggestions = function(state) {\n        // Find the elements in the DOM.\n        var inputElement = $(document.getElementById(state.inputId));\n        var suggestionsElement = $(document.getElementById(state.suggestionsId));\n\n        // Announce the list of suggestions was closed, and read the current list of selections.\n        inputElement.attr('aria-expanded', false).attr('aria-activedescendant', state.selectionId);\n        // Hide the suggestions list (from screen readers too).\n        suggestionsElement.hide().attr('aria-hidden', true);\n    };\n\n    /**\n     * Rebuild the list of suggestions based on the current values in the select list, and the query.\n     *\n     * @method updateSuggestions\n     * @private\n     * @param {Object} options The original options for this autocomplete.\n     * @param {Object} state The state variables for this autocomplete.\n     * @param {String} query The current text for the search string.\n     * @param {JQuery} originalSelect The JQuery object matching the hidden select list.\n     */\n    var updateSuggestions = function(options, state, query, originalSelect) {\n        // Find the elements in the DOM.\n        var inputElement = $(document.getElementById(state.inputId));\n        var suggestionsElement = $(document.getElementById(state.suggestionsId));\n\n        // Used to track if we found any visible suggestions.\n        var matchingElements = false;\n        // Options is used by the context when rendering the suggestions from a template.\n        var suggestions = [];\n        originalSelect.children('option').each(function(index, option) {\n            if ($(option).prop('selected') !== true) {\n                suggestions[suggestions.length] = {label: option.innerHTML, value: $(option).attr('value')};\n            }\n        });\n\n        // Re-render the list of suggestions.\n        var searchquery = state.caseSensitive ? query : query.toLocaleLowerCase();\n        var context = $.extend({options: suggestions}, options, state);\n        templates.render(\n            'core/form_autocomplete_suggestions',\n            context\n        ).done(function(newHTML) {\n            // We have the new template, insert it in the page.\n            suggestionsElement.replaceWith(newHTML);\n            // Get the element again.\n            suggestionsElement = $(document.getElementById(state.suggestionsId));\n            // Show it if it is hidden.\n            suggestionsElement.show().attr('aria-hidden', false);\n            // For each option in the list, hide it if it doesn't match the query.\n            suggestionsElement.children().each(function(index, node) {\n                node = $(node);\n                if ((options.caseSensitive && node.text().indexOf(searchquery) > -1) ||\n                        (!options.caseSensitive && node.text().toLocaleLowerCase().indexOf(searchquery) > -1)) {\n                    node.show().attr('aria-hidden', false);\n                    matchingElements = true;\n                } else {\n                    node.hide().attr('aria-hidden', true);\n                }\n            });\n            // If we found any matches, show the list.\n            inputElement.attr('aria-expanded', true);\n            if (originalSelect.attr('data-notice')) {\n                // Display a notice rather than actual suggestions.\n                suggestionsElement.html(originalSelect.attr('data-notice'));\n            } else if (matchingElements) {\n                // We only activate the first item in the list if tags is false,\n                // because otherwise \"Enter\" would select the first item, instead of\n                // creating a new tag.\n                if (!options.tags) {\n                    activateItem(0, state);\n                }\n            } else {\n                // Nothing matches. Tell them that.\n                str.get_string('nosuggestions', 'form').done(function(nosuggestionsstr) {\n                    suggestionsElement.html(nosuggestionsstr);\n                });\n            }\n        }).fail(notification.exception);\n\n    };\n\n    /**\n     * Create a new item for the list (a tag).\n     *\n     * @method createItem\n     * @private\n     * @param {Object} options The original options for the autocomplete.\n     * @param {Object} state State variables for the autocomplete.\n     * @param {JQuery} originalSelect The JQuery object matching the hidden select list.\n     */\n    var createItem = function(options, state, originalSelect) {\n        // Find the element in the DOM.\n        var inputElement = $(document.getElementById(state.inputId));\n        // Get the current text in the input field.\n        var query = inputElement.val();\n        var tags = query.split(',');\n        var found = false;\n\n        $.each(tags, function(tagindex, tag) {\n            // If we can only select one at a time, deselect any current value.\n            tag = tag.trim();\n            if (tag !== '') {\n                if (!options.multiple) {\n                    originalSelect.children('option').prop('selected', false);\n                }\n                // Look for an existing option in the select list that matches this new tag.\n                originalSelect.children('option').each(function(index, ele) {\n                    if ($(ele).attr('value') == tag) {\n                        found = true;\n                        $(ele).prop('selected', true);\n                    }\n                });\n                // Only create the item if it's new.\n                if (!found) {\n                    var option = $('<option>');\n                    option.append(tag);\n                    option.attr('value', tag);\n                    originalSelect.append(option);\n                    option.prop('selected', true);\n                    // We mark newly created custom options as we handle them differently if they are \"deselected\".\n                    option.attr('data-iscustom', true);\n                }\n            }\n        });\n\n        updateSelectionList(options, state, originalSelect);\n        // Notifiy that the selection changed.\n        notifyChange(originalSelect);\n        // Clear the input field.\n        inputElement.val('');\n        // Close the suggestions list.\n        closeSuggestions(state);\n    };\n\n    /**\n     * Select the currently active item from the suggestions list.\n     *\n     * @method selectCurrentItem\n     * @private\n     * @param {Object} options The original options for the autocomplete.\n     * @param {Object} state State variables for the autocomplete.\n     * @param {JQuery} originalSelect The JQuery object matching the hidden select list.\n     */\n    var selectCurrentItem = function(options, state, originalSelect) {\n        // Find the elements in the page.\n        var inputElement = $(document.getElementById(state.inputId));\n        var suggestionsElement = $(document.getElementById(state.suggestionsId));\n        // Here loop through suggestions and set val to join of all selected items.\n\n        var selectedItemValue = suggestionsElement.children('[aria-selected=true]').attr('data-value');\n        // The select will either be a single or multi select, so the following will either\n        // select one or more items correctly.\n        // Take care to use 'prop' and not 'attr' for selected properties.\n        // If only one can be selected at a time, start by deselecting everything.\n        if (!options.multiple) {\n            originalSelect.children('option').prop('selected', false);\n        }\n        // Look for a match, and toggle the selected property if there is a match.\n        originalSelect.children('option').each(function(index, ele) {\n            if ($(ele).attr('value') == selectedItemValue) {\n                $(ele).prop('selected', true);\n            }\n        });\n\n        // Rerender the selection list.\n        updateSelectionList(options, state, originalSelect);\n        // Notifiy that the selection changed.\n        notifyChange(originalSelect);\n\n        if (options.closeSuggestionsOnSelect) {\n            // Clear the input element.\n            inputElement.val('');\n            // Close the list of suggestions.\n            closeSuggestions(state);\n        } else {\n            // Focus on the input element so the suggestions does not auto-close.\n            inputElement.focus();\n            // Remove the last selected item from the suggestions list.\n            updateSuggestions(options, state, inputElement.val(), originalSelect);\n        }\n    };\n\n    /**\n     * Fetch a new list of options via ajax.\n     *\n     * @method updateAjax\n     * @private\n     * @param {Event} e The event that triggered this update.\n     * @param {Object} options The original options for the autocomplete.\n     * @param {Object} state The state variables for the autocomplete.\n     * @param {JQuery} originalSelect The JQuery object matching the hidden select list.\n     * @param {Object} ajaxHandler This is a module that does the ajax fetch and translates the results.\n     */\n    var updateAjax = function(e, options, state, originalSelect, ajaxHandler) {\n        var pendingKey = 'form-autocomplete-updateajax';\n        M.util.js_pending(pendingKey);\n        // Get the query to pass to the ajax function.\n        var query = $(e.currentTarget).val();\n        // Call the transport function to do the ajax (name taken from Select2).\n        ajaxHandler.transport(options.selector, query, function(results) {\n            // We got a result - pass it through the translator before using it.\n            var processedResults = ajaxHandler.processResults(options.selector, results);\n            var existingValues = [];\n\n            // Now destroy all options that are not currently selected.\n            originalSelect.children('option').each(function(optionIndex, option) {\n                option = $(option);\n                if (!option.prop('selected')) {\n                    option.remove();\n                } else {\n                    existingValues.push(String(option.attr('value')));\n                }\n            });\n\n            if (!options.multiple && originalSelect.children('option').length === 0) {\n                // If this is a single select - and there are no current options\n                // the first option added will be selected by the browser. This causes a bug!\n                // We need to insert an empty option so that none of the real options are selected.\n                var option = $('<option>');\n                originalSelect.append(option);\n            }\n            if ($.isArray(processedResults)) {\n                // Add all the new ones returned from ajax.\n                $.each(processedResults, function(resultIndex, result) {\n                    if (existingValues.indexOf(String(result.value)) === -1) {\n                        var option = $('<option>');\n                        option.append(result.label);\n                        option.attr('value', result.value);\n                        originalSelect.append(option);\n                    }\n                });\n                originalSelect.attr('data-notice', '');\n            } else {\n                // The AJAX handler returned a string instead of the array.\n                originalSelect.attr('data-notice', processedResults);\n            }\n            // Update the list of suggestions now from the new values in the select list.\n            updateSuggestions(options, state, '', originalSelect);\n            M.util.js_complete(pendingKey);\n        }, function(error) {\n            M.util.js_complete(pendingKey);\n            notification.exception(error);\n        });\n    };\n\n    /**\n     * Add all the event listeners required for keyboard nav, blur clicks etc.\n     *\n     * @method addNavigation\n     * @private\n     * @param {Object} options The options used to create this autocomplete element.\n     * @param {Object} state State variables for this autocomplete element.\n     * @param {JQuery} originalSelect The JQuery object matching the hidden select list.\n     */\n    var addNavigation = function(options, state, originalSelect) {\n        // Start with the input element.\n        var inputElement = $(document.getElementById(state.inputId));\n        // Add keyboard nav with keydown.\n        inputElement.on('keydown', function(e) {\n            var pendingKey = 'form-autocomplete-addnav-' + state.inputId + '-' + e.keyCode;\n            M.util.js_pending(pendingKey);\n\n            switch (e.keyCode) {\n                case KEYS.DOWN:\n                    // If the suggestion list is open, move to the next item.\n                    if (!options.showSuggestions) {\n                        // Do not consume this event.\n                        M.util.js_complete(pendingKey);\n                        return true;\n                    } else if (inputElement.attr('aria-expanded') === \"true\") {\n                        activateNextItem(state);\n                    } else {\n                        // Handle ajax population of suggestions.\n                        if (!inputElement.val() && options.ajax) {\n                            require([options.ajax], function(ajaxHandler) {\n                                updateAjax(e, options, state, originalSelect, ajaxHandler);\n                            });\n                        } else {\n                            // Open the suggestions list.\n                            updateSuggestions(options, state, inputElement.val(), originalSelect);\n                        }\n                    }\n                    // We handled this event, so prevent it.\n                    e.preventDefault();\n                    M.util.js_complete(pendingKey);\n                    return false;\n                case KEYS.UP:\n                    // Choose the previous active item.\n                    activatePreviousItem(state);\n                    // We handled this event, so prevent it.\n                    e.preventDefault();\n                    M.util.js_complete(pendingKey);\n                    return false;\n                case KEYS.ENTER:\n                    var suggestionsElement = $(document.getElementById(state.suggestionsId));\n                    if ((inputElement.attr('aria-expanded') === \"true\") &&\n                            (suggestionsElement.children('[aria-selected=true]').length > 0)) {\n                        // If the suggestion list has an active item, select it.\n                        selectCurrentItem(options, state, originalSelect);\n                    } else if (options.tags) {\n                        // If tags are enabled, create a tag.\n                        createItem(options, state, originalSelect);\n                    }\n                    // We handled this event, so prevent it.\n                    e.preventDefault();\n                    M.util.js_complete(pendingKey);\n                    return false;\n                case KEYS.ESCAPE:\n                    if (inputElement.attr('aria-expanded') === \"true\") {\n                        // If the suggestion list is open, close it.\n                        closeSuggestions(state);\n                    }\n                    // We handled this event, so prevent it.\n                    e.preventDefault();\n                    M.util.js_complete(pendingKey);\n                    return false;\n            }\n            M.util.js_complete(pendingKey);\n            return true;\n        });\n        // Support multi lingual COMMA keycode (44).\n        inputElement.on('keypress', function(e) {\n            var pendingKey = 'form-autocomplete-keypress-' + e.keyCode;\n            M.util.js_pending(pendingKey);\n            if (e.keyCode === KEYS.COMMA) {\n                if (options.tags) {\n                    // If we are allowing tags, comma should create a tag (or enter).\n                    createItem(options, state, originalSelect);\n                }\n                // We handled this event, so prevent it.\n                e.preventDefault();\n                M.util.js_complete(pendingKey);\n                return false;\n            }\n            M.util.js_complete(pendingKey);\n            return true;\n        });\n        // Handler used to force set the value from behat.\n        inputElement.on('behat:set-value', function() {\n            var suggestionsElement = $(document.getElementById(state.suggestionsId));\n            var pendingKey = 'form-autocomplete-behat';\n            M.util.js_pending(pendingKey);\n            if ((inputElement.attr('aria-expanded') === \"true\") &&\n                    (suggestionsElement.children('[aria-selected=true]').length > 0)) {\n                // If the suggestion list has an active item, select it.\n                selectCurrentItem(options, state, originalSelect);\n            } else if (options.tags) {\n                // If tags are enabled, create a tag.\n                createItem(options, state, originalSelect);\n            }\n            M.util.js_complete(pendingKey);\n        });\n        inputElement.on('blur', function() {\n            var pendingKey = 'form-autocomplete-blur';\n            M.util.js_pending(pendingKey);\n            window.setTimeout(function() {\n                // Get the current element with focus.\n                var focusElement = $(document.activeElement);\n                // Only close the menu if the input hasn't regained focus.\n                if (focusElement.attr('id') != inputElement.attr('id')) {\n                    if (options.tags) {\n                        createItem(options, state, originalSelect);\n                    }\n                    closeSuggestions(state);\n                }\n                M.util.js_complete(pendingKey);\n            }, 500);\n        });\n        if (options.showSuggestions) {\n            var arrowElement = $(document.getElementById(state.downArrowId));\n            arrowElement.on('click', function(e) {\n                var pendingKey = 'form-autocomplete-show-suggestions';\n                M.util.js_pending(pendingKey);\n                // Prevent the close timer, or we will open, then close the suggestions.\n                inputElement.focus();\n                // Handle ajax population of suggestions.\n                if (!inputElement.val() && options.ajax) {\n                    require([options.ajax], function(ajaxHandler) {\n                        updateAjax(e, options, state, originalSelect, ajaxHandler);\n                    });\n                } else {\n                    // Else - open the suggestions list.\n                    updateSuggestions(options, state, inputElement.val(), originalSelect);\n                }\n                M.util.js_complete(pendingKey);\n            });\n        }\n\n        var suggestionsElement = $(document.getElementById(state.suggestionsId));\n        suggestionsElement.parent().on('click', '[role=option]', function(e) {\n            var pendingKey = 'form-autocomplete-parent';\n            M.util.js_pending(pendingKey);\n            // Handle clicks on suggestions.\n            var element = $(e.currentTarget).closest('[role=option]');\n            var suggestionsElement = $(document.getElementById(state.suggestionsId));\n            // Find the index of the clicked on suggestion.\n            var current = suggestionsElement.children('[aria-hidden=false]').index(element);\n            // Activate it.\n            activateItem(current, state);\n            // And select it.\n            selectCurrentItem(options, state, originalSelect);\n            M.util.js_complete(pendingKey);\n        });\n        var selectionElement = $(document.getElementById(state.selectionId));\n        // Handle clicks on the selected items (will unselect an item).\n        selectionElement.on('click', '[role=listitem]', function(e) {\n            var pendingKey = 'form-autocomplete-clicks';\n            M.util.js_pending(pendingKey);\n            // Get the item that was clicked.\n            var item = $(e.currentTarget);\n            // Remove it from the selection.\n            deselectItem(options, state, item, originalSelect);\n            M.util.js_complete(pendingKey);\n        });\n        // Keyboard navigation for the selection list.\n        selectionElement.on('keydown', function(e) {\n            var pendingKey = 'form-autocomplete-keydown-' + e.keyCode;\n            M.util.js_pending(pendingKey);\n            switch (e.keyCode) {\n                case KEYS.DOWN:\n                    // Choose the next selection item.\n                    activateNextSelection(state);\n                    // We handled this event, so prevent it.\n                    e.preventDefault();\n                    M.util.js_complete(pendingKey);\n                    return false;\n                case KEYS.UP:\n                    // Choose the previous selection item.\n                    activatePreviousSelection(state);\n                    // We handled this event, so prevent it.\n                    e.preventDefault();\n                    M.util.js_complete(pendingKey);\n                    return false;\n                case KEYS.SPACE:\n                case KEYS.ENTER:\n                    // Get the item that is currently selected.\n                    var selectedItem = $(document.getElementById(state.selectionId)).children('[data-active-selection=true]');\n                    if (selectedItem) {\n                        // Unselect this item.\n                        deselectItem(options, state, selectedItem, originalSelect);\n                        // We handled this event, so prevent it.\n                        e.preventDefault();\n                    }\n                    M.util.js_complete(pendingKey);\n                    return false;\n            }\n            M.util.js_complete(pendingKey);\n            return true;\n        });\n        // Whenever the input field changes, update the suggestion list.\n        if (options.showSuggestions) {\n            // If this field uses ajax, set it up.\n            if (options.ajax) {\n                require([options.ajax], function(ajaxHandler) {\n                    var throttleTimeout = null;\n                    var pendingKey = 'autocomplete-throttledhandler';\n                    var handler = function(e) {\n                        updateAjax(e, options, state, originalSelect, ajaxHandler);\n                        M.util.js_complete(pendingKey);\n                    };\n\n                    // For input events, we do not want to trigger many, many updates.\n                    var throttledHandler = function(e) {\n                        if (throttleTimeout !== null) {\n                            window.clearTimeout(throttleTimeout);\n                            throttleTimeout = null;\n                        } else {\n                            // No existing timeout handler, so this is the start of a throttling check.\n                            M.util.js_pending(pendingKey);\n                        }\n                        throttleTimeout = window.setTimeout(handler.bind(this, e), 300);\n                    };\n                    // Trigger an ajax update after the text field value changes.\n                    inputElement.on(\"input\", throttledHandler);\n                });\n            } else {\n                inputElement.on('input', function(e) {\n                    var query = $(e.currentTarget).val();\n                    var last = $(e.currentTarget).data('last-value');\n                    // IE11 fires many more input events than required - even when the value has not changed.\n                    // We need to only do this for real value changed events or the suggestions will be\n                    // unclickable on IE11 (because they will be rebuilt before the click event fires).\n                    // Note - because of this we cannot close the list when the query is empty or it will break\n                    // on IE11.\n                    if (last !== query) {\n                        updateSuggestions(options, state, query, originalSelect);\n                    }\n                    $(e.currentTarget).data('last-value', query);\n                });\n            }\n        }\n    };\n\n    return /** @alias module:core/form-autocomplete */ {\n        // Public variables and functions.\n        /**\n         * Turn a boring select box into an auto-complete beast.\n         *\n         * @method enhance\n         * @param {string} selector The selector that identifies the select box.\n         * @param {boolean} tags Whether to allow support for tags (can define new entries).\n         * @param {string} ajax Name of an AMD module to handle ajax requests. If specified, the AMD\n         *                      module must expose 2 functions \"transport\" and \"processResults\".\n         *                      These are modeled on Select2 see: https://select2.github.io/options.html#ajax\n         * @param {String} placeholder - The text to display before a selection is made.\n         * @param {Boolean} caseSensitive - If search has to be made case sensitive.\n         * @param {Boolean} showSuggestions - If suggestions should be shown\n         * @param {String} noSelectionString - Text to display when there is no selection\n         * @param {Boolean} closeSuggestionsOnSelect - Whether to close the suggestions immediately after making a selection.\n         * @return {Promise}\n         */\n        enhance: function(selector, tags, ajax, placeholder, caseSensitive, showSuggestions, noSelectionString,\n                          closeSuggestionsOnSelect) {\n            // Set some default values.\n            var options = {\n                selector: selector,\n                tags: false,\n                ajax: false,\n                placeholder: placeholder,\n                caseSensitive: false,\n                showSuggestions: true,\n                noSelectionString: noSelectionString\n            };\n            var pendingKey = 'autocomplete-setup-' + selector;\n            M.util.js_pending(pendingKey);\n            if (typeof tags !== \"undefined\") {\n                options.tags = tags;\n            }\n            if (typeof ajax !== \"undefined\") {\n                options.ajax = ajax;\n            }\n            if (typeof caseSensitive !== \"undefined\") {\n                options.caseSensitive = caseSensitive;\n            }\n            if (typeof showSuggestions !== \"undefined\") {\n                options.showSuggestions = showSuggestions;\n            }\n            if (typeof noSelectionString === \"undefined\") {\n                str.get_string('noselection', 'form').done(function(result) {\n                    options.noSelectionString = result;\n                }).fail(notification.exception);\n            }\n\n            // Look for the select element.\n            var originalSelect = $(selector);\n            if (!originalSelect) {\n                log.debug('Selector not found: ' + selector);\n                M.util.js_complete(pendingKey);\n                return false;\n            }\n\n            originalSelect.css('visibility', 'hidden').attr('aria-hidden', true);\n\n            // Hide the original select.\n\n            // Find or generate some ids.\n            var state = {\n                selectId: originalSelect.attr('id'),\n                inputId: 'form_autocomplete_input-' + uniqueId,\n                suggestionsId: 'form_autocomplete_suggestions-' + uniqueId,\n                selectionId: 'form_autocomplete_selection-' + uniqueId,\n                downArrowId: 'form_autocomplete_downarrow-' + uniqueId\n            };\n\n            // Increment the unique counter so we don't get duplicates ever.\n            uniqueId++;\n\n            options.multiple = originalSelect.attr('multiple');\n\n            if (typeof closeSuggestionsOnSelect !== \"undefined\") {\n                options.closeSuggestionsOnSelect = closeSuggestionsOnSelect;\n            } else {\n                // If not specified, this will close suggestions by default for single-select elements only.\n                options.closeSuggestionsOnSelect = !options.multiple;\n            }\n\n            var originalLabel = $('[for=' + state.selectId + ']');\n            // Create the new markup and insert it after the select.\n            var suggestions = [];\n            originalSelect.children('option').each(function(index, option) {\n                suggestions[index] = {label: option.innerHTML, value: $(option).attr('value')};\n            });\n\n            // Render all the parts of our UI.\n            var context = $.extend({}, options, state);\n            context.options = suggestions;\n            context.items = [];\n\n            var renderInput = templates.render('core/form_autocomplete_input', context);\n            var renderDatalist = templates.render('core/form_autocomplete_suggestions', context);\n            var renderSelection = templates.render('core/form_autocomplete_selection', context);\n\n            return $.when(renderInput, renderDatalist, renderSelection).then(function(input, suggestions, selection) {\n                originalSelect.hide();\n                originalSelect.after(suggestions);\n                originalSelect.after(input);\n                originalSelect.after(selection);\n\n                // Update the form label to point to the text input.\n                originalLabel.attr('for', state.inputId);\n                // Add the event handlers.\n                addNavigation(options, state, originalSelect);\n\n                var suggestionsElement = $(document.getElementById(state.suggestionsId));\n                // Hide the suggestions by default.\n                suggestionsElement.hide().attr('aria-hidden', true);\n\n                // Show the current values in the selection list.\n                updateSelectionList(options, state, originalSelect);\n                M.util.js_complete(pendingKey);\n                return true;\n            }).fail(function(error) {\n                M.util.js_complete(pendingKey);\n                notification.exception(error);\n            });\n        }\n    };\n});\n"]}