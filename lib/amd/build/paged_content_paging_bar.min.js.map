{"version":3,"sources":["../src/paged_content_paging_bar.js"],"names":["define","$","CustomEvents","PagedContentEvents","SELECTORS","ROOT","PAGE","PAGE_ITEM","ACTIVE_PAGE_ITEM","getPageByNumber","root","pageNumber","find","getLastPageNumber","lastPage","last","parseInt","attr","getActivePageNumber","activePage","length","getPageNumber","page","activePageNumber","getLimit","generatePageNumbers","items","each","index","item","showPage","isSamePage","limit","removeClass","addClass","trigger","SHOW_PAGES","offset","init","pages","events","activate","on","e","data","target","closest","originalEvent","preventDefault","stopPropagation","rootSelector"],"mappings":"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","file":"paged_content_paging_bar.min.js","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript to enhance the paged content paging bar.\n *\n * @module     core/paging_bar\n * @copyright  2018 Ryan Wyllie <ryan@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(\n    [\n        'jquery',\n        'core/custom_interaction_events',\n        'core/paged_content_events'\n    ],\n    function(\n        $,\n        CustomEvents,\n        PagedContentEvents\n    ) {\n\n    var SELECTORS = {\n        ROOT: '[data-region=\"paging-bar\"]',\n        PAGE: '[data-page]',\n        PAGE_ITEM: '[data-region=\"page-item\"]',\n        ACTIVE_PAGE_ITEM: '[data-region=\"page-item\"].active'\n    };\n\n    /**\n     * Get the page element by number.\n     *\n     * @param {object} root The root element.\n     * @param {Number} pageNumber The page number.\n     * @return {jQuery}\n     */\n    var getPageByNumber = function(root, pageNumber) {\n        return root.find(SELECTORS.PAGE_ITEM + '[data-page-number=\"' + pageNumber + '\"]');\n    };\n\n    /**\n     * Get the last page number.\n     *\n     * @param {object} root The root element.\n     * @return {int}\n     */\n    var getLastPageNumber = function(root) {\n        var lastPage = root.find(SELECTORS.PAGE).last();\n        if (lastPage) {\n            return parseInt(lastPage.attr('data-page-number'), 10);\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Get the active page number.\n     *\n     * @param {object} root The root element.\n     * @returns {int} The page number\n     */\n    var getActivePageNumber = function(root) {\n        var activePage = root.find(SELECTORS.ACTIVE_PAGE_ITEM);\n\n        if (activePage.length) {\n            return getPageNumber(root, activePage);\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Get the page number.\n     *\n     * @param {object} root The root element.\n     * @param {object} page The page.\n     * @returns {int} The page number\n     */\n    var getPageNumber = function(root, page) {\n        if (page.attr('data-page') != undefined) {\n            // If it's an actual page then we can just use the page number\n            // attribute.\n            return parseInt(page.attr('data-page-number'), 10);\n        }\n\n        var pageNumber = 1;\n        var activePageNumber = null;\n\n        switch (page.attr('data-control')) {\n            case 'first':\n                pageNumber = 1;\n                break;\n\n            case 'last':\n                pageNumber = getLastPageNumber(root);\n                break;\n\n            case 'next':\n                activePageNumber = getActivePageNumber(root);\n                var lastPage = getLastPageNumber(root);\n                if (activePageNumber && activePageNumber < lastPage) {\n                    pageNumber = activePageNumber + 1;\n                } else {\n                    pageNumber = lastPage;\n                }\n                break;\n\n            case 'previous':\n                activePageNumber = getActivePageNumber(root);\n                if (activePageNumber && activePageNumber > 1) {\n                    pageNumber = activePageNumber - 1;\n                } else {\n                    pageNumber = 1;\n                }\n                break;\n\n            default:\n                pageNumber = 1;\n                break;\n        }\n\n        // Make sure we return an int not a string.\n        return parseInt(pageNumber, 10);\n    };\n\n    /**\n     * Get the limit of items for each page.\n     *\n     * @param {object} root The root element.\n     * @returns {int}\n     */\n    var getLimit = function(root) {\n        return parseInt(root.attr('data-items-per-page'), 10);\n    };\n\n    /**\n     * Set page numbers on each of the given items. Page numbers are set\n     * from 1..n (where n is the number of items).\n     *\n     * @param {jQuery} items A jQuery list of items.\n     */\n    var generatePageNumbers = function(items) {\n        items.each(function(index, item) {\n            item = $(item);\n            item.attr('data-page-number', index + 1);\n        });\n    };\n\n    /**\n     * Make the paging bar item for the given page number visible and fire\n     * the SHOW_PAGES paged content event to tell any listening content to\n     * update.\n     *\n     * @param {object} root The root element.\n     * @param {int} pageNumber The number for the page to show.\n     * @param {object} page The page.\n     */\n    var showPage = function(root, pageNumber) {\n        var isSamePage = pageNumber == getActivePageNumber(root);\n        var limit = getLimit(root);\n        var offset = (pageNumber - 1) * limit;\n\n        if (!isSamePage) {\n            // We only need to toggle the active class if the user didn't click\n            // on the already active page.\n            root.find(SELECTORS.PAGE_ITEM).removeClass('active');\n            var page = getPageByNumber(root, pageNumber);\n            page.addClass('active');\n        }\n\n        // This event requires a payload that contains a list of all pages that\n        // were activated. In the case of the paging bar we only show one page at\n        // a time.\n        root.trigger(PagedContentEvents.SHOW_PAGES, [[{\n            pageNumber: pageNumber,\n            limit: limit,\n            offset: offset\n        }]]);\n    };\n\n    /**\n     * Initialise the paging bar.\n     * @param {object} root The root element.\n     */\n    var init = function(root) {\n        root = $(root);\n        var pages = root.find(SELECTORS.PAGE);\n        generatePageNumbers(pages);\n\n        var activePageNumber = getActivePageNumber(root);\n        if (activePageNumber) {\n            // If the the paging bar was rendered with an active page selected\n            // then make sure we fired off the event to tell the content page to\n            // show.\n            showPage(root, activePageNumber);\n        }\n\n        CustomEvents.define(root, [\n            CustomEvents.events.activate\n        ]);\n\n        root.on(CustomEvents.events.activate, SELECTORS.PAGE_ITEM, function(e, data) {\n            var page = $(e.target).closest(SELECTORS.PAGE_ITEM);\n            var pageNumber = getPageNumber(root, page);\n            showPage(root, pageNumber);\n\n            data.originalEvent.preventDefault();\n            data.originalEvent.stopPropagation();\n        });\n    };\n\n    return {\n        init: init,\n        rootSelector: SELECTORS.ROOT,\n    };\n});\n"]}