{"version":3,"sources":["../src/status_field.js"],"names":["define","Template","$","Str","Config","Notification","ModalFactory","ModalEvents","Fragment","Ajax","SELECTORS","EDIT_ENROLMENT","SHOW_DETAILS","UNENROL","StatusFieldActions","options","contextid","courseid","bindEditEnrol","bindUnenrol","bindStatusDetails","prototype","statusFieldInstsance","click","e","preventDefault","clickedEditTrigger","parentContainer","parent","fullname","data","ueid","attr","when","get_string","then","modalTitle","create","large","title","type","types","SAVE_CANCEL","done","modal","getRoot","on","save","submitEditFormAjax","hidden","destroy","setBody","getBody","show","fail","exception","unenrolLink","strings","key","component","param","user","course","enrolinstancename","deleteModalPromise","get_strings","results","confirmMessage","setTitle","setSaveButtonText","unenrolParams","submitUnenrolFormAjax","detailsButton","context","find","editEnrolLink","next","length","editenrollink","append","clone","html","modalStringsPromise","modalPromise","CANCEL","modalBodyPromise","render","hide","trigger","form","val","status","params","timeStartEnabled","is","timeStartYear","timeStartMonth","timeStartDay","timeStartHour","timeStartMinute","timeStart","Date","timestart","getTime","timeEndEnabled","timeEndYear","timeEndMonth","timeEndDay","timeEndHour","timeEndMinute","timeEnd","timeend","call","methodname","args","result","window","M","core_formchangechecker","reset_form_dirty_state","location","reload","formData","JSON","stringify","serialize","alert","errors","message","formdata","loadFragment","init","config"],"mappings":"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","file":"status_field.min.js","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * AMD module for the user enrolment status field in the course participants page.\n *\n * @module     core_user/status_field\n * @copyright  2017 Jun Pataleta\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['core/templates',\n        'jquery',\n        'core/str',\n        'core/config',\n        'core/notification',\n        'core/modal_factory',\n        'core/modal_events',\n        'core/fragment',\n        'core/ajax'\n    ],\n    function(Template, $, Str, Config, Notification, ModalFactory, ModalEvents, Fragment, Ajax) {\n\n        /**\n         * Action selectors.\n         *\n         * @access private\n         * @type {{EDIT_ENROLMENT: string, SHOW_DETAILS: string, UNENROL: string}}\n         */\n        var SELECTORS = {\n            EDIT_ENROLMENT: '[data-action=\"editenrolment\"]',\n            SHOW_DETAILS: '[data-action=\"showdetails\"]',\n            UNENROL: '[data-action=\"unenrol\"]'\n        };\n\n        /**\n         * Constructor\n         *\n         * @param {Object} options Object containing options. The only valid option at this time is contextid.\n         * Each call to templates.render gets it's own instance of this class.\n         */\n        var StatusFieldActions = function(options) {\n            this.contextid = options.contextid;\n            this.courseid = options.courseid;\n\n            // Bind click event to editenrol buttons.\n            this.bindEditEnrol();\n\n            // Bind click event to unenrol buttons.\n            this.bindUnenrol();\n\n            // Bind click event to status details buttons.\n            this.bindStatusDetails();\n        };\n        // Class variables and functions.\n\n        /** @var {number} courseid The course ID. */\n        StatusFieldActions.prototype.courseid = 0;\n\n        /**\n         * Private method\n         *\n         * @method initModal\n         * @private\n         */\n        StatusFieldActions.prototype.bindEditEnrol = function() {\n            var statusFieldInstsance = this;\n\n            $(SELECTORS.EDIT_ENROLMENT).click(function(e) {\n                e.preventDefault();\n\n                // The particular edit button that was clicked.\n                var clickedEditTrigger = $(this);\n                // Get the parent container (it contains the data attributes associated with the status field).\n                var parentContainer = clickedEditTrigger.parent();\n                // Get the name of the user whose enrolment status is being edited.\n                var fullname = parentContainer.data('fullname');\n                // Get the user enrolment ID.\n                var ueid = clickedEditTrigger.attr('rel');\n\n                $.when(Str.get_string('edituserenrolment', 'enrol', fullname)).then(function(modalTitle) {\n                    return ModalFactory.create({\n                        large: true,\n                        title: modalTitle,\n                        type: ModalFactory.types.SAVE_CANCEL\n                    });\n                }).done(function(modal) {\n                    // Handle save event.\n                    modal.getRoot().on(ModalEvents.save, function(e) {\n                        // Don't close the modal yet.\n                        e.preventDefault();\n                        // Submit form data.\n                        statusFieldInstsance.submitEditFormAjax(modal);\n                    });\n\n                    // Handle hidden event.\n                    modal.getRoot().on(ModalEvents.hidden, function() {\n                        // Destroy when hidden.\n                        modal.destroy();\n                    });\n\n                    // Set the modal body.\n                    modal.setBody(statusFieldInstsance.getBody(ueid));\n\n                    // Show the modal!\n                    modal.show();\n                }).fail(Notification.exception);\n            });\n        };\n\n        /**\n         * Private method\n         *\n         * @method bindUnenrol\n         * @private\n         */\n        StatusFieldActions.prototype.bindUnenrol = function() {\n            var statusFieldInstsance = this;\n\n            $(SELECTORS.UNENROL).click(function(e) {\n                e.preventDefault();\n                var unenrolLink = $(this);\n                var parentContainer = unenrolLink.parent();\n                var strings = [\n                    {\n                        key: 'unenrol',\n                        component: 'enrol'\n                    },\n                    {\n                        key: 'unenrolconfirm',\n                        component: 'enrol',\n                        param: {\n                            user: parentContainer.data('fullname'),\n                            course: parentContainer.data('coursename'),\n                            enrolinstancename: parentContainer.data('enrolinstancename')\n                        }\n                    }\n                ];\n\n                var deleteModalPromise = ModalFactory.create({\n                    type: ModalFactory.types.SAVE_CANCEL\n                });\n\n                $.when(Str.get_strings(strings), deleteModalPromise).done(function(results, modal) {\n                    var title = results[0];\n                    var confirmMessage = results[1];\n                    modal.setTitle(title);\n                    modal.setBody(confirmMessage);\n                    modal.setSaveButtonText(title);\n\n                    // Handle confirm event.\n                    modal.getRoot().on(ModalEvents.save, function() {\n                        // Build params.\n                        var unenrolParams = {\n                            'ueid': $(unenrolLink).attr('rel')\n                        };\n                        // Don't close the modal yet.\n                        e.preventDefault();\n                        // Submit data.\n                        statusFieldInstsance.submitUnenrolFormAjax(modal, unenrolParams);\n                    });\n\n                    // Handle hidden event.\n                    modal.getRoot().on(ModalEvents.hidden, function() {\n                        // Destroy when hidden.\n                        modal.destroy();\n                    });\n\n                    // Display the delete confirmation modal.\n                    modal.show();\n                }).fail(Notification.exception);\n            });\n        };\n\n        /**\n         * Private method\n         *\n         * @method bindStatusDetails\n         * @private\n         */\n        StatusFieldActions.prototype.bindStatusDetails = function() {\n            $(SELECTORS.SHOW_DETAILS).click(function(e) {\n                e.preventDefault();\n\n                var detailsButton = $(this);\n                var parentContainer = detailsButton.parent();\n                var context = {\n                    \"fullname\": parentContainer.data('fullname'),\n                    \"coursename\": parentContainer.data('coursename'),\n                    \"enrolinstancename\": parentContainer.data('enrolinstancename'),\n                    \"status\": parentContainer.data('status'),\n                    \"statusclass\": parentContainer.find('span').attr('class'),\n                    \"timestart\": parentContainer.data('timestart'),\n                    \"timeend\": parentContainer.data('timeend')\n                };\n\n                // Get default string for the modal and modal type.\n                var strings = [\n                    {\n                        key: 'enroldetails',\n                        component: 'enrol'\n                    }\n                ];\n\n                // Find the edit enrolment link.\n                var editEnrolLink = detailsButton.next(SELECTORS.EDIT_ENROLMENT);\n                if (editEnrolLink.length) {\n                    // If there's an edit enrolment link for this user, clone it into the context for the modal.\n                    context.editenrollink = $('<div>').append(editEnrolLink.clone()).html();\n                }\n\n                var modalStringsPromise = Str.get_strings(strings);\n                var modalPromise = ModalFactory.create({large: true, type: ModalFactory.types.CANCEL});\n                $.when(modalStringsPromise, modalPromise).done(function(strings, modal) {\n                    var modalBodyPromise = Template.render('core_user/status_details', context);\n                    modal.setTitle(strings[0]);\n                    modal.setBody(modalBodyPromise);\n\n                    if (editEnrolLink.length) {\n                        modal.getRoot().on('click', SELECTORS.EDIT_ENROLMENT, function(e) {\n                            e.preventDefault();\n                            modal.hide();\n                            // Trigger click event for the edit enrolment link to show the edit enrolment modal.\n                            $(editEnrolLink).trigger('click');\n                        });\n                    }\n\n                    modal.show();\n\n                    // Handle hidden event.\n                    modal.getRoot().on(ModalEvents.hidden, function() {\n                        // Destroy when hidden.\n                        modal.destroy();\n                    });\n                }).fail(Notification.exception);\n            });\n        };\n\n        /**\n         * Private method\n         *\n         * @method submitEditFormAjax\n         * @param {Object} modal The the AMD modal object containing the form.\n         * @private\n         */\n        StatusFieldActions.prototype.submitEditFormAjax = function(modal) {\n            var statusFieldInstsance = this;\n            var form = modal.getRoot().find('form');\n\n            // User enrolment ID.\n            var ueid = $(form).find('[name=\"ue\"]').val();\n            // Status.\n            var status = $(form).find('[name=\"status\"]').val();\n\n            var params = {\n                'courseid': this.courseid,\n                'ueid': ueid,\n                'status': status\n            };\n\n            // Enrol time start.\n            var timeStartEnabled = $(form).find('[name=\"timestart[enabled]\"]');\n            if (timeStartEnabled.is(':checked')) {\n                var timeStartYear = $(form).find('[name=\"timestart[year]\"]').val();\n                var timeStartMonth = $(form).find('[name=\"timestart[month]\"]').val() - 1;\n                var timeStartDay = $(form).find('[name=\"timestart[day]\"]').val();\n                var timeStartHour = $(form).find('[name=\"timestart[hour]\"]').val();\n                var timeStartMinute = $(form).find('[name=\"timestart[minute]\"]').val();\n                var timeStart = new Date(timeStartYear, timeStartMonth, timeStartDay, timeStartHour, timeStartMinute);\n                params.timestart = timeStart.getTime() / 1000;\n            }\n\n            // Enrol time end.\n            var timeEndEnabled = $(form).find('[name=\"timeend[enabled]\"]');\n            if (timeEndEnabled.is(':checked')) {\n                var timeEndYear = $(form).find('[name=\"timeend[year]\"]').val();\n                var timeEndMonth = $(form).find('[name=\"timeend[month]\"]').val() - 1;\n                var timeEndDay = $(form).find('[name=\"timeend[day]\"]').val();\n                var timeEndHour = $(form).find('[name=\"timeend[hour]\"]').val();\n                var timeEndMinute = $(form).find('[name=\"timeend[minute]\"]').val();\n                var timeEnd = new Date(timeEndYear, timeEndMonth, timeEndDay, timeEndHour, timeEndMinute);\n                params.timeend = timeEnd.getTime() / 1000;\n            }\n\n            var request = {\n                methodname: 'core_enrol_edit_user_enrolment',\n                args: params\n            };\n\n            Ajax.call([request])[0].done(function(data) {\n                if (data.result) {\n                    // Dismiss the modal.\n                    modal.hide();\n\n                    // Reload the page, don't show changed data warnings.\n                    if (typeof window.M.core_formchangechecker !== \"undefined\") {\n                        window.M.core_formchangechecker.reset_form_dirty_state();\n                    }\n                    window.location.reload();\n                } else {\n                    // Serialise the form data and reload the form fragment to show validation errors.\n                    var formData = JSON.stringify(form.serialize());\n                    modal.setBody(statusFieldInstsance.getBody(ueid, formData));\n                }\n            }).fail(Notification.exception);\n        };\n\n         /**\n         * Private method\n         *\n         * @method submitUnenrolFormAjax\n         * @param {Object} modal The the AMD modal object containing the form.\n         * @param {Object} unenrolParams The unenrol parameters.\n         * @private\n         */\n        StatusFieldActions.prototype.submitUnenrolFormAjax = function(modal, unenrolParams) {\n            var request = {\n                methodname: 'core_enrol_unenrol_user_enrolment',\n                args: unenrolParams\n            };\n\n            Ajax.call([request])[0].done(function(data) {\n                if (data.result) {\n                    // Dismiss the modal.\n                    modal.hide();\n\n                    // Reload the page, don't show changed data warnings.\n                    if (typeof window.M.core_formchangechecker !== \"undefined\") {\n                        window.M.core_formchangechecker.reset_form_dirty_state();\n                    }\n                    window.location.reload();\n                } else {\n                    // Display an alert containing the error message\n                    Notification.alert(data.errors[0].key, data.errors[0].message);\n                }\n            }).fail(Notification.exception);\n        };\n\n        /**\n         * Private method\n         *\n         * @method getBody\n         * @private\n         * @param {Number} ueid The user enrolment ID associated with the user.\n         * @param {string} formData Serialized string of the edit enrolment form data.\n         * @return {Promise}\n         */\n        StatusFieldActions.prototype.getBody = function(ueid, formData) {\n            var params = {\n                'ueid': ueid\n            };\n            if (typeof formData !== 'undefined') {\n                params.formdata = formData;\n            }\n            return Fragment.loadFragment('enrol', 'user_enrolment_form', this.contextid, params).fail(Notification.exception);\n        };\n\n        return /** @alias module:core_user/editenrolment */ {\n            // Public variables and functions.\n            /**\n             * Every call to init creates a new instance of the class with it's own event listeners etc.\n             *\n             * @method init\n             * @public\n             * @param {object} config - config variables for the module.\n             */\n            init: function(config) {\n                (new StatusFieldActions(config));\n            }\n        };\n    });\n"]}