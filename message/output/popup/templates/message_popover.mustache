{{!
    This file is part of Moodle - http://moodle.org/

    Moodle is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Moodle is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
}}
{{!
    @template message_output_popup/message_popover

    This template will render the message popover for the navigation bar.

    Classes required for JS:
    * none

    Data attributes required for JS:
    * All data attributes are required

    Context variables required for this template:
    * userid The logged in user id
    * urls The URLs for the popover

    Example context (json):
    {
        "userid": 3,
        "urls": {
            "preferences": "http://www.moodle.com"
        }
    }

}}
<div class="pull-right popover-region collapsed">
    <a id="message-drawer-toggle-{{uniqid}}" class="nav-link d-inline-block position-relative popover-region-toggle" href="#">
        {{#pix}} t/message, core, {{#str}} togglemessagemenu, message {{/str}} {{/pix}}
        <div class="count-container {{^unreadcount}}hidden{{/unreadcount}}" data-region="count-container">
            {{unreadcount}}
        </div>
    </a>
</div>

{{#js}}
require(
[
    'jquery',
    'core/custom_interaction_events',
    'message_popup/message_drawer'
],
function(
    $,
    CustomEvents,
    MessageDrawer
) {
    var hasInitialised = false;
    var toggle = $('#message-drawer-toggle-{{uniqid}}');
    var drawer = $('#message-drawer');

    CustomEvents.define(toggle, [CustomEvents.events.activate]);
    toggle.on(CustomEvents.events.activate, function(e, data) {
        drawer.toggleClass('hidden');
        var expanded = drawer.attr('aria-expanded') === 'true';
        drawer.attr('aria-expanded', !expanded);

        if (!hasInitialised) {
            MessageDrawer.init(drawer);
            hasInitialised = true;
        }

        data.originalEvent.preventDefault();
    });
});
{{/js}}
