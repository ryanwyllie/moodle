{"version":3,"sources":["../src/message_popover_controller.js"],"names":["define","$","Ajax","Templates","Str","Notification","CustomEvents","PopoverController","MessageRepo","URL","SELECTORS","MARK_ALL_READ_BUTTON","CONTENT","CONTENT_ITEM_CONTAINER","EMPTY_MESSAGE","COUNT_CONTAINER","MessagePopoverController","element","call","markAllReadButton","root","find","content","userId","attr","limit","offset","loadedAll","initialLoad","unreadCount","html","prototype","Object","create","constructor","getContent","incrementOffset","updateButtonAriaLabel","isMenuOpen","get_string","done","string","menuToggle","bind","renderUnreadCount","text","removeClass","addClass","hideUnreadCount","renderMessages","messages","container","promises","each","index","message","contexturl","relativeUrl","user","id","userid","profileurl","promise","render","then","js","push","when","apply","arguments","argument","append","runTemplateJS","loadMoreMessages","isLoading","Deferred","resolve","startLoading","request","query","result","contacts","length","always","stopLoading","markAllAsRead","hasClass","useridto","registerEventListeners","events","keyboardActivate","on","menuOpened","menuClosed","scrollBottom","activate","e","data","stopPropagation","originalEvent","preventDefault","getContentContainer","scrollLock","document"],"mappings":"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","file":"message_popover_controller.min.js","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Controls the message popover in the nav bar.\n *\n * See template: message_popup/message_popover\n *\n * @module     message_popup/message_popover_controller\n * @class      message_popover_controller\n * @package    message_popup\n * @copyright  2016 Ryan Wyllie <ryan@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/ajax', 'core/templates', 'core/str',\n            'core/notification', 'core/custom_interaction_events', 'core/popover_region_controller',\n            'core_message/message_repository', 'core/url'],\n        function($, Ajax, Templates, Str, Notification, CustomEvents,\n            PopoverController, MessageRepo, URL) {\n\n    var SELECTORS = {\n        MARK_ALL_READ_BUTTON: '[data-action=\"mark-all-read\"]',\n        CONTENT: '[data-region=\"messages\"]',\n        CONTENT_ITEM_CONTAINER: '[data-region=\"message-content-item-container\"]',\n        EMPTY_MESSAGE: '[data-region=\"empty-message\"]',\n        COUNT_CONTAINER: '[data-region=\"count-container\"]',\n    };\n\n    /**\n     * Constructor for the MessagePopoverController.\n     * Extends PopoverRegionController.\n     *\n     * @param {object} element jQuery object root element of the popover\n     */\n    var MessagePopoverController = function(element) {\n        // Initialise base class.\n        PopoverController.call(this, element);\n\n        this.markAllReadButton = this.root.find(SELECTORS.MARK_ALL_READ_BUTTON);\n        this.content = this.root.find(SELECTORS.CONTENT);\n        this.userId = this.root.attr('data-userid');\n        this.limit = 20;\n        this.offset = 0;\n        this.loadedAll = false;\n        this.initialLoad = false;\n\n        // Let's find out how many unread messages there are.\n        this.unreadCount = this.root.find(SELECTORS.COUNT_CONTAINER).html();\n    };\n\n    /**\n     * Clone the parent prototype.\n     */\n    MessagePopoverController.prototype = Object.create(PopoverController.prototype);\n\n    /**\n     * Make sure the constructor is set correctly.\n     */\n    MessagePopoverController.prototype.constructor = MessagePopoverController;\n\n    /**\n     * Get the element holding the messages.\n     *\n     * @method getContent\n     * @return {object} jQuery element\n     */\n    MessagePopoverController.prototype.getContent = function() {\n        return this.content;\n    };\n\n    /**\n     * Increment the offset.\n     *\n     * @method incrementOffset\n     */\n    MessagePopoverController.prototype.incrementOffset = function() {\n        this.offset += this.limit;\n    };\n\n    /**\n     * Set the correct aria label on the menu toggle button to be read out by screen\n     * readers. The message will indicate the state of the unread messages.\n     *\n     * @method updateButtonAriaLabel\n     */\n    MessagePopoverController.prototype.updateButtonAriaLabel = function() {\n        if (this.isMenuOpen()) {\n            Str.get_string('hidemessagewindow', 'message').done(function(string) {\n                this.menuToggle.attr('aria-label', string);\n            }.bind(this));\n        } else {\n            if (this.unreadCount) {\n                Str.get_string('showmessagewindowwithcount', 'message', this.unreadCount).done(function(string) {\n                    this.menuToggle.attr('aria-label', string);\n                }.bind(this));\n            } else {\n                Str.get_string('showmessagewindownonew', 'message').done(function(string) {\n                    this.menuToggle.attr('aria-label', string);\n                }.bind(this));\n            }\n        }\n    };\n\n    /**\n     * Show the unread message count badge on the menu toggle if there\n     * are unread messages, otherwise hide it.\n     *\n     * @method renderUnreadCount\n     */\n    MessagePopoverController.prototype.renderUnreadCount = function() {\n        var element = this.root.find(SELECTORS.COUNT_CONTAINER);\n\n        if (this.unreadCount) {\n            element.text(this.unreadCount);\n            element.removeClass('hidden');\n        } else {\n            element.addClass('hidden');\n        }\n    };\n\n    /**\n     * Hide the unread message count badge on the menu toggle.\n     *\n     * @method hideUnreadCount\n     */\n    MessagePopoverController.prototype.hideUnreadCount = function() {\n        this.root.find(SELECTORS.COUNT_CONTAINER).addClass('hidden');\n    };\n\n    /**\n     * Render the message data with the appropriate template and add it to the DOM.\n     *\n     * @method renderMessages\n     * @param {array} messages Message data\n     * @param {object} container jQuery object the container to append the rendered messages\n     * @return {object} jQuery promise that is resolved when all messages have been\n     *                rendered and added to the DOM\n     */\n    MessagePopoverController.prototype.renderMessages = function(messages, container) {\n        var promises = [];\n\n        $.each(messages, function(index, message) {\n            message.contexturl = URL.relativeUrl('/message/index.php', {\n                user: this.userId,\n                id: message.userid,\n            });\n\n            message.profileurl = URL.relativeUrl('/user/profile.php', {\n                id: message.userid,\n            });\n\n            var promise = Templates.render('message_popup/message_content_item', message)\n            .then(function(html, js) {\n                return {html: html, js: js};\n            });\n            promises.push(promise);\n        }.bind(this));\n\n        return $.when.apply($, promises).then(function() {\n            // Each of the promises in the when will pass its results as an argument to the function.\n            // The order of the arguments will be the order that the promises are passed to when()\n            // i.e. the first promise's results will be in the first argument.\n            $.each(arguments, function(index, argument) {\n                container.append(argument.html);\n                Templates.runTemplateJS(argument.js);\n            });\n            return;\n        });\n    };\n\n    /**\n     * Send a request for more messages from the server, if we aren't already\n     * loading some and haven't already loaded all of them.\n     *\n     * @method loadMoreMessages\n     * @return {object} jQuery promise that is resolved when messages have been\n     *                        retrieved and added to the DOM\n     */\n    MessagePopoverController.prototype.loadMoreMessages = function() {\n        if (this.isLoading || this.loadedAll) {\n            return $.Deferred().resolve();\n        }\n\n        this.startLoading();\n        var request = {\n            userid: this.userId,\n            limit: this.limit,\n            offset: this.offset,\n        };\n\n        var container = this.getContent();\n        return MessageRepo.query(request).then(function(result) {\n            var messages = result.contacts;\n            this.loadedAll = !messages.length || messages.length < this.limit;\n            this.initialLoad = true;\n            this.updateButtonAriaLabel();\n\n            if (messages.length) {\n                this.incrementOffset();\n                return this.renderMessages(messages, container);\n            }\n\n            return false;\n        }.bind(this))\n        .always(function() {\n            this.stopLoading();\n        }.bind(this));\n    };\n\n    /**\n     * Send a request to the server to mark all unread messages as read and update\n     * the unread count and unread messages elements appropriately.\n     *\n     * @method markAllAsRead\n     * @return {Promise}\n     */\n    MessagePopoverController.prototype.markAllAsRead = function() {\n        if (this.markAllReadButton.hasClass('loading')) {\n            return $.Deferred().resolve();\n        }\n\n        this.markAllReadButton.addClass('loading');\n\n        return MessageRepo.markAllAsRead({useridto: this.userId})\n            .then(function() {\n                this.unreadCount = 0;\n                this.hideUnreadCount();\n                this.getContent().find(SELECTORS.CONTENT_ITEM_CONTAINER).removeClass('unread');\n            }.bind(this))\n            .always(function() {\n                this.markAllReadButton.removeClass('loading');\n            }.bind(this));\n    };\n\n    /**\n     * Add all of the required event listeners for this messages popover.\n     *\n     * @method registerEventListeners\n     */\n    MessagePopoverController.prototype.registerEventListeners = function() {\n        CustomEvents.define(this.root, [\n            CustomEvents.events.keyboardActivate,\n        ]);\n\n        // Update the message information when the menu is opened.\n        this.root.on(this.events().menuOpened, function() {\n            this.hideUnreadCount();\n            this.updateButtonAriaLabel();\n\n            if (!this.initialLoad) {\n                this.loadMoreMessages();\n            }\n        }.bind(this));\n\n        // Update the message information when the menu is opened.\n        this.root.on(this.events().menuClosed, function() {\n            this.renderUnreadCount();\n            this.updateButtonAriaLabel();\n        }.bind(this));\n\n        // Load more messages when we scroll to the bottom of the open menu.\n        this.root.on(CustomEvents.events.scrollBottom, function() {\n            this.loadMoreMessages();\n        }.bind(this));\n\n        // Mark all messages as read when button is activated.\n        this.root.on(CustomEvents.events.activate, SELECTORS.MARK_ALL_READ_BUTTON, function(e, data) {\n            this.markAllAsRead();\n\n            e.stopPropagation();\n            data.originalEvent.preventDefault();\n        }.bind(this));\n\n        // Stop mouse scroll from propagating to the window element and\n        // scrolling the page.\n        CustomEvents.define(this.getContentContainer(), [\n            CustomEvents.events.scrollLock\n        ]);\n\n        // Check if we have marked a conversation as read in the messaging area.\n        $(document).on('messagearea:conversationselected', function() {\n            this.unreadCount--;\n            this.renderUnreadCount();\n        }.bind(this));\n    };\n\n    return MessagePopoverController;\n});\n"]}