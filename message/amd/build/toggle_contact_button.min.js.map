{"version":3,"sources":["../src/toggle_contact_button.js"],"names":["define","$","Ajax","Templates","Notification","CustomEvents","isContact","element","attr","setContact","setNotContact","getUserId","isLoading","hasClass","sendRequest","request","Deferred","addClass","call","fail","exception","always","removeClass","removeAttr","addContact","methodname","args","userids","done","render","html","js","replaceNodeContents","removeContact","enhance","children","length","append","events","activate","on","e","data","preventDefault","originalEvent"],"mappings":"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","file":"toggle_contact_button.min.js","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module to add/remove contact using ajax.\n *\n * @module     core_message/toggle_contact_button\n * @class      toggle_contact_button\n * @package    message\n * @copyright  2016 Ryan Wyllie <ryan@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/ajax', 'core/templates', 'core/notification', 'core/custom_interaction_events'],\n        function($, Ajax, Templates, Notification, CustomEvents) {\n\n    /**\n     * Check the state of the element, if the current user is a contact or not.\n     *\n     * @method isContact\n     * @param {object} element jQuery object for the button\n     * @return {bool}\n     */\n    var isContact = function(element) {\n        return element.attr('data-is-contact') == '1';\n    };\n\n    /**\n     * Record that the user is a contact.\n     *\n     * @method setContact\n     * @param {object} element jQuery object for the button\n     */\n    var setContact = function(element) {\n        element.attr('data-is-contact', '1');\n    };\n\n    /**\n     * Record that the user is not a contact.\n     *\n     * @method setNotContact\n     * @param {object} element jQuery object for the button\n     */\n    var setNotContact = function(element) {\n        element.attr('data-is-contact', '0');\n    };\n\n    /**\n     * Get the id for the user being viewed.\n     *\n     * @method getUserId\n     * @param {object} element jQuery object for the button\n     * @return {int}\n     */\n    var getUserId = function(element) {\n        return element.attr('data-userid');\n    };\n\n    /**\n     * Check if this element is currently loading.\n     *\n     * @method isLoading\n     * @param {object} element jQuery object for the button\n     * @return {bool}\n     */\n    var isLoading = function(element) {\n        return element.hasClass('loading') || element.attr('disabled');\n    };\n\n    /**\n     * Sends an ajax request to the server and handles the element state\n     * while the request is being performed.\n     *\n     * @method sendRequest\n     * @param {object} element jQuery object for the button\n     * @param {object} request Request hash to send\n     * @return {object} jQuery promise\n     */\n    var sendRequest = function(element, request) {\n        if (isLoading(element)) {\n            return $.Deferred();\n        }\n\n        element.addClass('loading');\n        element.attr('disabled', 'disabled');\n\n        return Ajax.call([request])[0]\n            .fail(Notification.exception)\n            .always(function() {\n                element.removeClass('loading');\n                element.removeAttr('disabled');\n            });\n    };\n\n    /**\n     * Send a request to the server to add the current user as\n     * a contact. The contents of the button are changed to the\n     * remove contact button upon success.\n     *\n     * @method addContact\n     * @param {object} element jQuery object for the button\n     */\n    var addContact = function(element) {\n        if (isLoading(element)) {\n            return;\n        }\n\n        var request = {\n            methodname: 'core_message_create_contacts',\n            args: {\n                userids: [getUserId(element)],\n            }\n        };\n        sendRequest(element, request).done(function() {\n            setContact(element);\n            Templates.render('message/remove_contact_button', {}).done(function(html, js) {\n                Templates.replaceNodeContents(element, html, js);\n            });\n        });\n    };\n\n    /**\n     * Send a request to the server to remove the current user as\n     * a contact. The contents of the button are changed to the\n     * add contact button upon success.\n     *\n     * @method removeContact\n     * @param {object} element jQuery object for the button\n     */\n    var removeContact = function(element) {\n        if (isLoading(element)) {\n            return;\n        }\n\n        var request = {\n            methodname: 'core_message_delete_contacts',\n            args: {\n                userids: [getUserId(element)],\n            }\n        };\n\n        sendRequest(element, request).done(function() {\n            setNotContact(element);\n            Templates.render('message/add_contact_button', {}).done(function(html, js) {\n                Templates.replaceNodeContents(element, html, js);\n            });\n        });\n    };\n\n    /**\n     * Enhances the given element with a loading gif and event handles to make\n     * ajax requests to add or remove a contact where appropriate.\n     *\n     * @method enhance\n     * @param {object} element jQuery object for the button\n     */\n    var enhance = function(element) {\n        element = $(element);\n\n        if (!element.children('.loading-icon').length) {\n            // Add the loading gif if it isn't already there.\n            Templates.render('core/loading', {}).done(function(html, js) {\n                element.append(html, js);\n            });\n        }\n\n        CustomEvents.define(element, [CustomEvents.events.activate]);\n\n        element.on(CustomEvents.events.activate, function(e, data) {\n            if (isContact(element)) {\n                removeContact(element);\n            } else {\n                addContact(element);\n            }\n            e.preventDefault();\n            data.originalEvent.preventDefault();\n        });\n    };\n\n    return /** @alias module:message/toggle_contact_button */ {\n        enhance: enhance\n    };\n});\n"]}