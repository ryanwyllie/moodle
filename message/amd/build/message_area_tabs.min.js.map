{"version":3,"sources":["../src/message_area_tabs.js"],"names":["define","CustomEvents","Events","Tabs","messageArea","_init","SELECTORS","ACTIVECONTACTSTAB","CONTACTSPANELS","VIEWCONTACTS","VIEWCONVERSATIONS","prototype","node","events","activate","up","down","next","previous","ctrlPageUp","ctrlPageDown","onDelegateEvent","_viewConversations","bind","_viewContacts","_toggleTabs","onCustomEvent","MESSAGESENT","_selectTab","trigger","CONVERSATIONSSELECTED","CONTACTSSELECTED","tabselect","tabdeselect","find","removeClass","attr","addClass","e","data","activeTab","is","focus","preventDefault","stopPropagation","originalEvent"],"mappings":"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","file":"message_area_tabs.min.js","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module handles the tabs of the messaging area.\n *\n * @module     core_message/message_area_tabs\n * @package    core_message\n * @copyright  2016 Mark Nelson <markn@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['core/custom_interaction_events', 'core_message/message_area_events'], function(CustomEvents, Events) {\n\n    /** @type {Object} The list of selectors for the message area. */\n    var SELECTORS = {\n        ACTIVECONTACTSTAB: \"[data-region='contacts-area'] [role='tab'][aria-selected='true']\",\n        CONTACTSPANELS: \"[data-region='contacts']\",\n        VIEWCONTACTS: \"[data-action='contacts-view']\",\n        VIEWCONVERSATIONS: \"[data-action='conversations-view']\"\n    };\n\n    /**\n     * Tabs class.\n     *\n     * @param {Messagearea} messageArea The messaging area object.\n     */\n    function Tabs(messageArea) {\n        this.messageArea = messageArea;\n        this._init();\n    }\n\n    /** @type {Messagearea} The messaging area object. */\n    Tabs.prototype.messageArea = null;\n\n    /**\n     * Initialise the event listeners.\n     *\n     * @private\n     */\n    Tabs.prototype._init = function() {\n        CustomEvents.define(this.messageArea.node, [\n            CustomEvents.events.activate,\n            CustomEvents.events.up,\n            CustomEvents.events.down,\n            CustomEvents.events.next,\n            CustomEvents.events.previous,\n            CustomEvents.events.ctrlPageUp,\n            CustomEvents.events.ctrlPageDown,\n        ]);\n\n        this.messageArea.onDelegateEvent(CustomEvents.events.activate, SELECTORS.VIEWCONVERSATIONS,\n                this._viewConversations.bind(this));\n        this.messageArea.onDelegateEvent(CustomEvents.events.activate, SELECTORS.VIEWCONTACTS,\n                this._viewContacts.bind(this));\n\n        // Change to the other tab if any arrow keys are pressed, since there are only two tabs.\n        this.messageArea.onDelegateEvent(CustomEvents.events.up, SELECTORS.VIEWCONVERSATIONS,\n                this._toggleTabs.bind(this));\n        this.messageArea.onDelegateEvent(CustomEvents.events.down, SELECTORS.VIEWCONVERSATIONS,\n                this._toggleTabs.bind(this));\n        this.messageArea.onDelegateEvent(CustomEvents.events.next, SELECTORS.VIEWCONVERSATIONS,\n                this._toggleTabs.bind(this));\n        this.messageArea.onDelegateEvent(CustomEvents.events.previous, SELECTORS.VIEWCONVERSATIONS,\n                this._toggleTabs.bind(this));\n        // Change to the other tab if any arrow keys are pressed, since there are only two tabs.\n        this.messageArea.onDelegateEvent(CustomEvents.events.up, SELECTORS.VIEWCONTACTS,\n                this._toggleTabs.bind(this));\n        this.messageArea.onDelegateEvent(CustomEvents.events.down, SELECTORS.VIEWCONTACTS,\n                this._toggleTabs.bind(this));\n        this.messageArea.onDelegateEvent(CustomEvents.events.next, SELECTORS.VIEWCONTACTS,\n                this._toggleTabs.bind(this));\n        this.messageArea.onDelegateEvent(CustomEvents.events.previous, SELECTORS.VIEWCONTACTS,\n                this._toggleTabs.bind(this));\n        // Tab panel keyboard handling.\n        this.messageArea.onDelegateEvent(CustomEvents.events.ctrlPageUp, SELECTORS.CONTACTSPANELS,\n                this._toggleTabs.bind(this));\n        this.messageArea.onDelegateEvent(CustomEvents.events.ctrlPageDown, SELECTORS.CONTACTSPANELS,\n                this._toggleTabs.bind(this));\n\n        this.messageArea.onCustomEvent(Events.MESSAGESENT, function() {\n            this._selectTab(SELECTORS.VIEWCONVERSATIONS, SELECTORS.VIEWCONTACTS);\n        }.bind(this));\n    };\n\n    /**\n     * Handles when the conversation tab is selected.\n     *\n     * @private\n     */\n    Tabs.prototype._viewConversations = function() {\n        this.messageArea.trigger(Events.CONVERSATIONSSELECTED);\n        this._selectTab(SELECTORS.VIEWCONVERSATIONS, SELECTORS.VIEWCONTACTS);\n    };\n\n    /**\n     * Handles when the contacts tab is selected.\n     *\n     * @private\n     */\n    Tabs.prototype._viewContacts = function() {\n        this.messageArea.trigger(Events.CONTACTSSELECTED);\n        this._selectTab(SELECTORS.VIEWCONTACTS, SELECTORS.VIEWCONVERSATIONS);\n    };\n\n    /**\n     * Sets a tab to selected.\n     *\n     * @param {String} tabselect The name of the tab to select\n     * @param {String} tabdeselect The name of the tab to deselect\n     * @private\n     */\n    Tabs.prototype._selectTab = function(tabselect, tabdeselect) {\n        tabdeselect = this.messageArea.find(tabdeselect);\n        tabdeselect.removeClass('selected');\n        tabdeselect.attr('aria-selected', 'false');\n        tabdeselect.attr('tabindex', '-1');\n\n        tabselect = this.messageArea.find(tabselect);\n        tabselect.addClass('selected');\n        tabselect.attr('aria-selected', 'true');\n        tabselect.attr('tabindex', '0');\n    };\n\n    /**\n     * Change to the inactive tab.\n     *\n     * @param {event} e The javascript event\n     * @param {object} data The additional event data\n     * @private\n     */\n    Tabs.prototype._toggleTabs = function(e, data) {\n        var activeTab = this.messageArea.find(SELECTORS.ACTIVECONTACTSTAB);\n\n        if (activeTab.is(SELECTORS.VIEWCONVERSATIONS)) {\n            this._viewContacts();\n        } else {\n            this._viewConversations();\n        }\n\n        this.messageArea.find(SELECTORS.ACTIVECONTACTSTAB).focus();\n\n        e.preventDefault();\n        e.stopPropagation();\n        data.originalEvent.preventDefault();\n        data.originalEvent.stopPropagation();\n    };\n\n    return Tabs;\n});\n"]}