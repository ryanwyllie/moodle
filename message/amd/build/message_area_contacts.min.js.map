{"version":3,"sources":["../src/message_area_contacts.js"],"names":["define","$","Ajax","Templates","Notification","CustomEvents","Str","Events","Contacts","messageArea","_init","SELECTORS","CONTACT","CONTACTICONBLOCKED","CONTACTS","CONTACTSAREA","CONVERSATIONS","COURSE","LASTMESSAGETEXT","LASTMESSAGEUSER","LOADINGICON","MESSAGETEXT","MESSAGINGAREA","NOCONTACTS","SEARCHBOX","SEARCHRESULTSAREA","SEARCHTEXTAREA","SELECTEDVIEWCONVERSATION","SELECTEDVIEWPROFILE","SHOWMESSAGES","VIEWCONVERSATION","VIEWPROFILE","prototype","_isLoadingConversations","_isLoadingContacts","_numContactsDisplayed","_numContactsToRetrieve","_numConversationsDisplayed","_numConversationsToRetrieve","_messageLength","node","events","activate","down","up","onCustomEvent","MESSAGESEARCHCANCELED","_viewConversations","bind","USERSSEARCHCANCELED","_viewContacts","CONTACTSSELECTED","CONVERSATIONDELETED","_deleteConversation","CONVERSATIONSSELECTED","MESSAGESDELETED","_updateLastMessage","MESSAGESENT","_handleMessageSent","CONTACTREMOVED","e","userid","_removeContact","CONTACTADDED","_addContact","CONTACTBLOCKED","_blockContact","CONTACTUNBLOCKED","_unblockContact","CHOOSEMESSAGESTODELETE","_startDeleting","CANCELDELETEMESSAGES","_stopDeleting","onDelegateEvent","_viewConversation","_viewContact","_showMessagingArea","_selectPreviousContact","_selectNextContact","_selectPreviousConversation","_selectNextConversation","_selectPreviousCourse","_selectNextCourse","_setSearching","_clearSearching","find","scrollBottom","_loadConversations","_loadContacts","showContactsFirst","addClass","removeClass","hide","show","event","text","user","_getUserNode","length","usercontact","clone","attr","remove","prependTo","scrollTop","_updateContactText","_setSelectedUser","numberreceived","render","then","html","js","appendNodeContents","replaceNodeContents","_getItems","data","contacts","isconversation","fail","exception","trigger","currentTarget","messageid","selector","CONVERSATIONSELECTED","CONTACTSELECTED","webservice","limitfrom","limitnum","promises","call","methodname","args","getCurrentUserId","_hideMessagingArea","updatemessage","updatemessagetext","trim","sentbyuser","empty","_getContactText","substr","document","createTextNode","get_string","done","string","append","always","contact","target","closest","next","focus","originalEvent","preventDefault","stopPropagation","previous","prev","course","conversation"],"mappings":"aAuBAA,4CAAO,CAAC,QAAD,CAAW,WAAX,CAAwB,gBAAxB,CAA0C,mBAA1C,CAA+D,gCAA/D,CAAiG,UAAjG,CACC,kCADD,CAAP,CAEI,SAASC,CAAT,CAAYC,IAAZ,CAAkBC,SAAlB,CAA6BC,YAA7B,CAA2CC,YAA3C,CAAyDC,GAAzD,CAA8DC,MAA9D,CAAsE,CA+BlE,QAASC,SAAT,CAAkBC,WAAlB,CAA+B,CAC3B,KAAKA,WAAL,CAAmBA,WADQ,CAE3B,KAAKC,KAAL,EACH,CA/BD,GAAIC,WAAY,CACZC,QAAS,2BADG,CAEZC,mBAAoB,wCAFR,CAGZC,SAAU,8DAHE,CAIZC,aAAc,iCAJF,CAKZC,cAAe,mEALH,CAMZC,OAAQ,0BANI,CAOZC,gBAAiB,qCAPL,CAQZC,gBAAiB,qCARL,CASZC,YAAa,eATD,CAUZC,YAAa,gCAVD,CAWZC,cAAe,kCAXH,CAYZC,WAAY,2BAZA,CAaZC,UAAW,8BAbC,CAcZC,kBAAmB,uCAdP,CAeZC,eAAgB,oCAfJ,CAgBZC,yBAA0B,6CAhBd,CAiBZC,oBAAqB,iDAjBT,CAkBZC,aAAc,iCAlBF,CAmBZC,iBAAkB,oCAnBN,CAoBZC,YAAa,wCApBD,CAAhB,CAwqBA,MAtoBAvB,UAASwB,SAAT,CAAmBC,uBAAnB,GAsoBA,CAnoBAzB,SAASwB,SAAT,CAAmBE,kBAAnB,GAmoBA,CAhoBA1B,SAASwB,SAAT,CAAmBG,qBAAnB,CAA2C,CAgoB3C,CA7nBA3B,SAASwB,SAAT,CAAmBI,sBAAnB,CAA4C,EA6nB5C,CA1nBA5B,SAASwB,SAAT,CAAmBK,0BAAnB,CAAgD,CA0nBhD,CAvnBA7B,SAASwB,SAAT,CAAmBM,2BAAnB,CAAiD,EAunBjD,CApnBA9B,SAASwB,SAAT,CAAmBO,cAAnB,CAAoC,EAonBpC,CAjnBA/B,SAASwB,SAAT,CAAmBvB,WAAnB,CAAiC,IAinBjC,CA1mBAD,SAASwB,SAAT,CAAmBtB,KAAnB,CAA2B,UAAW,CAClCL,aAAaL,MAAb,CAAoB,KAAKS,WAAL,CAAiB+B,IAArC,CAA2C,CACvCnC,aAAaoC,MAAb,CAAoBC,QADmB,CAEvCrC,aAAaoC,MAAb,CAAoBE,IAFmB,CAGvCtC,aAAaoC,MAAb,CAAoBG,EAHmB,CAA3C,CADkC,CAOlC,KAAKnC,WAAL,CAAiBoC,aAAjB,CAA+BtC,OAAOuC,qBAAtC,CAA6D,KAAKC,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAA7D,CAPkC,CAQlC,KAAKvC,WAAL,CAAiBoC,aAAjB,CAA+BtC,OAAO0C,mBAAtC,CAA2D,KAAKC,aAAL,CAAmBF,IAAnB,CAAwB,IAAxB,CAA3D,CARkC,CASlC,KAAKvC,WAAL,CAAiBoC,aAAjB,CAA+BtC,OAAO4C,gBAAtC,CAAwD,KAAKD,aAAL,CAAmBF,IAAnB,CAAwB,IAAxB,CAAxD,CATkC,CAUlC,KAAKvC,WAAL,CAAiBoC,aAAjB,CAA+BtC,OAAO6C,mBAAtC,CAA2D,KAAKC,mBAAL,CAAyBL,IAAzB,CAA8B,IAA9B,CAA3D,CAVkC,CAWlC,KAAKvC,WAAL,CAAiBoC,aAAjB,CAA+BtC,OAAO+C,qBAAtC,CAA6D,KAAKP,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAA7D,CAXkC,CAYlC,KAAKvC,WAAL,CAAiBoC,aAAjB,CAA+BtC,OAAO4C,gBAAtC,CAAwD,KAAKD,aAAL,CAAmBF,IAAnB,CAAwB,IAAxB,CAAxD,CAZkC,CAalC,KAAKvC,WAAL,CAAiBoC,aAAjB,CAA+BtC,OAAOgD,eAAtC,CAAuD,KAAKC,kBAAL,CAAwBR,IAAxB,CAA6B,IAA7B,CAAvD,CAbkC,CAclC,KAAKvC,WAAL,CAAiBoC,aAAjB,CAA+BtC,OAAOkD,WAAtC,CAAmD,KAAKC,kBAAL,CAAwBV,IAAxB,CAA6B,IAA7B,CAAnD,CAdkC,CAelC,KAAKvC,WAAL,CAAiBoC,aAAjB,CAA+BtC,OAAOoD,cAAtC,CAAsD,SAASC,CAAT,CAAYC,MAAZ,CAAoB,CACtE,KAAKC,cAAL,CAAoBnD,UAAUG,QAA9B,CAAwC+C,MAAxC,CACH,CAFqD,CAEpDb,IAFoD,CAE/C,IAF+C,CAAtD,CAfkC,CAkBlC,KAAKvC,WAAL,CAAiBoC,aAAjB,CAA+BtC,OAAOwD,YAAtC,CAAoD,SAASH,CAAT,CAAYC,MAAZ,CAAoB,CACpE,KAAKG,WAAL,CAAiBH,MAAjB,CACH,CAFmD,CAElDb,IAFkD,CAE7C,IAF6C,CAApD,CAlBkC,CAqBlC,KAAKvC,WAAL,CAAiBoC,aAAjB,CAA+BtC,OAAO0D,cAAtC,CAAsD,SAASL,CAAT,CAAYC,MAAZ,CAAoB,CACtE,KAAKK,aAAL,CAAmBL,MAAnB,CACH,CAFqD,CAEpDb,IAFoD,CAE/C,IAF+C,CAAtD,CArBkC,CAwBlC,KAAKvC,WAAL,CAAiBoC,aAAjB,CAA+BtC,OAAO4D,gBAAtC,CAAwD,SAASP,CAAT,CAAYC,MAAZ,CAAoB,CACxE,KAAKO,eAAL,CAAqBP,MAArB,CACH,CAFuD,CAEtDb,IAFsD,CAEjD,IAFiD,CAAxD,CAxBkC,CA2BlC,KAAKvC,WAAL,CAAiBoC,aAAjB,CAA+BtC,OAAO8D,sBAAtC,CACI,KAAKC,cAAL,CAAoBtB,IAApB,CAAyB,IAAzB,CADJ,CA3BkC,CA6BlC,KAAKvC,WAAL,CAAiBoC,aAAjB,CAA+BtC,OAAOgE,oBAAtC,CACI,KAAKC,aAAL,CAAmBxB,IAAnB,CAAwB,IAAxB,CADJ,CA7BkC,CA+BlC,KAAKvC,WAAL,CAAiBgE,eAAjB,CAAiCpE,aAAaoC,MAAb,CAAoBC,QAArD,CAA+D/B,UAAUmB,gBAAzE,CACI,KAAK4C,iBAAL,CAAuB1B,IAAvB,CAA4B,IAA5B,CADJ,CA/BkC,CAiClC,KAAKvC,WAAL,CAAiBgE,eAAjB,CAAiCpE,aAAaoC,MAAb,CAAoBC,QAArD,CAA+D/B,UAAUoB,WAAzE,CACI,KAAK4C,YAAL,CAAkB3B,IAAlB,CAAuB,IAAvB,CADJ,CAjCkC,CAmClC,KAAKvC,WAAL,CAAiBgE,eAAjB,CAAiCpE,aAAaoC,MAAb,CAAoBC,QAArD,CAA+D/B,UAAUkB,YAAzE,CACI,KAAK+C,kBAAL,CAAwB5B,IAAxB,CAA6B,IAA7B,CADJ,CAnCkC,CAsClC,KAAKvC,WAAL,CAAiBgE,eAAjB,CAAiCpE,aAAaoC,MAAb,CAAoBG,EAArD,CAAyDjC,UAAUC,OAAnE,CACI,KAAKiE,sBAAL,CAA4B7B,IAA5B,CAAiC,IAAjC,CADJ,CAtCkC,CAwClC,KAAKvC,WAAL,CAAiBgE,eAAjB,CAAiCpE,aAAaoC,MAAb,CAAoBE,IAArD,CAA2DhC,UAAUC,OAArE,CACI,KAAKkE,kBAAL,CAAwB9B,IAAxB,CAA6B,IAA7B,CADJ,CAxCkC,CA0ClC,KAAKvC,WAAL,CAAiBgE,eAAjB,CAAiCpE,aAAaoC,MAAb,CAAoBG,EAArD,CAAyDjC,UAAUmB,gBAAnE,CACI,KAAKiD,2BAAL,CAAiC/B,IAAjC,CAAsC,IAAtC,CADJ,CA1CkC,CA4ClC,KAAKvC,WAAL,CAAiBgE,eAAjB,CAAiCpE,aAAaoC,MAAb,CAAoBE,IAArD,CAA2DhC,UAAUmB,gBAArE,CACI,KAAKkD,uBAAL,CAA6BhC,IAA7B,CAAkC,IAAlC,CADJ,CA5CkC,CA+ClC,KAAKvC,WAAL,CAAiBgE,eAAjB,CAAiCpE,aAAaoC,MAAb,CAAoBG,EAArD,CAAyDjC,UAAUM,MAAnE,CAA2E,KAAKgE,qBAAL,CAA2BjC,IAA3B,EAA3E,CA/CkC,CAgDlC,KAAKvC,WAAL,CAAiBgE,eAAjB,CAAiCpE,aAAaoC,MAAb,CAAoBE,IAArD,CAA2DhC,UAAUM,MAArE,CAA6E,KAAKiE,iBAAL,CAAuBlC,IAAvB,EAA7E,CAhDkC,CAkDlC,KAAKvC,WAAL,CAAiBgE,eAAjB,CAAiC,OAAjC,CAA0C9D,UAAUa,SAApD,CAA+D,KAAK2D,aAAL,CAAmBnC,IAAnB,CAAwB,IAAxB,CAA/D,CAlDkC,CAmDlC,KAAKvC,WAAL,CAAiBgE,eAAjB,CAAiC,MAAjC,CAAyC9D,UAAUa,SAAnD,CAA8D,KAAK4D,eAAL,CAAqBpC,IAArB,CAA0B,IAA1B,CAA9D,CAnDkC,CAsDlC3C,aAAaL,MAAb,CAAoB,KAAKS,WAAL,CAAiB4E,IAAjB,CAAsB1E,UAAUK,aAAhC,CAApB,CAAoE,CAChEX,aAAaoC,MAAb,CAAoB6C,YAD4C,CAApE,CAtDkC,CAyDlCjF,aAAaL,MAAb,CAAoB,KAAKS,WAAL,CAAiB4E,IAAjB,CAAsB1E,UAAUG,QAAhC,CAApB,CAA+D,CAC3DT,aAAaoC,MAAb,CAAoB6C,YADuC,CAA/D,CAzDkC,CA4DlC,KAAK7E,WAAL,CAAiBgE,eAAjB,CAAiCpE,aAAaoC,MAAb,CAAoB6C,YAArD,CAAmE3E,UAAUK,aAA7E,CACI,KAAKuE,kBAAL,CAAwBvC,IAAxB,CAA6B,IAA7B,CADJ,CA5DkC,CA8DlC,KAAKvC,WAAL,CAAiBgE,eAAjB,CAAiCpE,aAAaoC,MAAb,CAAoB6C,YAArD,CAAmE3E,UAAUG,QAA7E,CACI,KAAK0E,aAAL,CAAmBxC,IAAnB,CAAwB,IAAxB,CADJ,CA9DkC,CAiE7B,KAAKvC,WAAL,CAAiBgF,iBAAjB,EAjE6B,GAmE9B,KAAKpD,0BAAL,CAAkC,EAnEJ,CAqErC,CAqiBD,CA9hBA7B,SAASwB,SAAT,CAAmBsC,cAAnB,CAAoC,UAAW,CAC3C,KAAK7D,WAAL,CAAiB4E,IAAjB,CAAsB1E,UAAUI,YAAhC,EAA8C2E,QAA9C,CAAuD,SAAvD,CACH,CA4hBD,CArhBAlF,SAASwB,SAAT,CAAmBwC,aAAnB,CAAmC,UAAW,CAC1C,KAAK/D,WAAL,CAAiB4E,IAAjB,CAAsB1E,UAAUI,YAAhC,EAA8C4E,WAA9C,CAA0D,SAA1D,CACH,CAmhBD,CA5gBAnF,SAASwB,SAAT,CAAmBe,kBAAnB,CAAwC,UAAW,CAEP,CAApC,QAAKV,0BAFsC,EAG3C,KAAKkD,kBAAL,EAH2C,CAM/C,KAAK9E,WAAL,CAAiB4E,IAAjB,CAAsB1E,UAAUG,QAAhC,EAA0C8E,IAA1C,EAN+C,CAO/C,KAAKnF,WAAL,CAAiB4E,IAAjB,CAAsB1E,UAAUK,aAAhC,EAA+C6E,IAA/C,EACH,CAogBD,CA7fArF,SAASwB,SAAT,CAAmBkB,aAAnB,CAAmC,UAAW,CAEP,CAA/B,QAAKf,qBAFiC,EAGtC,KAAKqD,aAAL,EAHsC,CAM1C,KAAK/E,WAAL,CAAiB4E,IAAjB,CAAsB1E,UAAUK,aAAhC,EAA+C4E,IAA/C,EAN0C,CAO1C,KAAKnF,WAAL,CAAiB4E,IAAjB,CAAsB1E,UAAUG,QAAhC,EAA0C+E,IAA1C,EACH,CAqfD,CA3eArF,SAASwB,SAAT,CAAmB0B,kBAAnB,CAAwC,SAASoC,KAAT,CAAgBjC,MAAhB,CAAwBkC,IAAxB,CAA8B,CAElE,KAAKhD,kBAAL,EAFkE,CAIlE,GAAIiD,MAAO,KAAKC,YAAL,CAAkBtF,UAAUK,aAA5B,CAA2C6C,MAA3C,CAAX,CAEA,GAAoB,CAAhB,QAAKqC,MAAT,CAAuB,CAEnB,GAAIC,aAAc,KAAKF,YAAL,CAAkBtF,UAAUG,QAA5B,CAAsC+C,MAAtC,CAAlB,CAKA,GAJ2B,CAAvB,eAAYqC,MAIhB,GAFIC,YAAc,KAAKF,YAAL,CAAkBtF,UAAUc,iBAA5B,CAA+CoC,MAA/C,CAElB,EAA0B,CAAtB,cAAYqC,MAAhB,CAEI,OAEJF,KAAOG,YAAYC,KAAZ,EAXY,CAanBJ,KAAKK,IAAL,CAAU,aAAV,CAAyB,kBAAzB,CAbmB,CAenB,KAAK5F,WAAL,CAAiB4E,IAAjB,CAAsB1E,UAAUK,aAAV,CAA0B,GAA1B,CAClBL,UAAUY,UADd,EAC0B+E,MAD1B,EAfmB,CAkBnB,KAAKjE,0BAAL,EACH,CAED2D,KAAKO,SAAL,CAAe,KAAK9F,WAAL,CAAiB4E,IAAjB,CAAsB1E,UAAUK,aAAhC,CAAf,CA3BkE,CA6BlE,KAAKP,WAAL,CAAiB4E,IAAjB,CAAsB1E,UAAUK,aAAhC,EAA+CwF,SAA/C,CAAyD,CAAzD,CA7BkE,CA+BlE,KAAKC,kBAAL,CAAwBT,IAAxB,CAA8BD,IAA9B,IA/BkE,CAiClE,KAAKW,gBAAL,CAAsB,kBAAmB7C,MAAnB,CAA4B,KAAlD,CACH,CAycD,CAjcArD,SAASwB,SAAT,CAAmBuD,kBAAnB,CAAwC,UAAW,CAC/C,GAAI,KAAKtD,uBAAT,CACI,SAIJ,KAAKA,uBAAL,GAN+C,CAS/C,GAAI0E,gBAAiB,CAArB,CAEA,MAAOxG,WAAUyG,MAAV,CAAiB,cAAjB,CAAiC,EAAjC,EAAqCC,IAArC,CAA0C,SAASC,IAAT,CAAeC,EAAf,CAAmB,CAQhE,MAPI,MAAK1E,0BAOT,CANIlC,UAAU6G,kBAAV,CAA6B,KAAKvG,WAAL,CAAiB4E,IAAjB,CAAsB1E,UAAUK,aAAhC,CAA7B,CACI,oCAAoC8F,IAApC,CAA2C,QAD/C,CACyDC,EADzD,CAMJ,CAHI5G,UAAU8G,mBAAV,CAA8B,KAAKxG,WAAL,CAAiB4E,IAAjB,CAAsB1E,UAAUK,aAAhC,CAA9B,CACI,oCAAoC8F,IAApC,CAA2C,QAD/C,CACyDC,EADzD,CAGJ,CAAO,KAAKG,SAAL,CAAe,iDAAf,CACH,KAAK7E,0BADF,CAC8B,KAAKC,2BADnC,CAEV,CAVgD,CAU/CU,IAV+C,CAU1C,IAV0C,CAA1C,EAUO6D,IAVP,CAUY,SAASM,IAAT,CAAe,CAG9B,MAFAR,gBAAiBQ,KAAKC,QAAL,CAAclB,MAE/B,CADAiB,KAAKE,cAAL,GACA,CAAOlH,UAAUyG,MAAV,CAAiB,oCAAjB,CAAuDO,IAAvD,CACV,CAdM,EAcJN,IAdI,CAcC,SAASC,IAAT,CAAeC,EAAf,CAAmB,CAEvB,KAAKtG,WAAL,CAAiB4E,IAAjB,CAAsB1E,UAAUK,aAAV,CAA0B,GAA1B,CAClBL,UAAUS,WADd,EAC2BkF,MAD3B,EAFuB,CAKF,CAAjB,eALmB,EAOnBnG,UAAU6G,kBAAV,CAA6B,KAAKvG,WAAL,CAAiB4E,IAAjB,CAAsB1E,UAAUK,aAAhC,CAA7B,CAA6E8F,IAA7E,CAAmFC,EAAnF,CAPmB,CAUnB,KAAK1E,0BAAL,EAAmC,KAAKC,2BAVrB,EAWZ,CAAC,KAAKD,0BAXM,EAanBlC,UAAU8G,mBAAV,CAA8B,KAAKxG,WAAL,CAAiB4E,IAAjB,CAAsB1E,UAAUK,aAAhC,CAA9B,CAA8E8F,IAA9E,CAAoFC,EAApF,CAbmB,CAgBvB,KAAK9E,uBAAL,GACH,CAjBO,CAiBNe,IAjBM,CAiBD,IAjBC,CAdD,EA+BOsE,IA/BP,CA+BYlH,aAAamH,SA/BzB,CAgCV,CAsZD,CA9YA/G,SAASwB,SAAT,CAAmBwD,aAAnB,CAAmC,UAAW,CAC1C,GAAI,KAAKtD,kBAAT,CACI,SAIJ,KAAKA,kBAAL,GAN0C,CAS1C,GAAIyE,gBAAiB,CAArB,CAEA,MAAOxG,WAAUyG,MAAV,CAAiB,cAAjB,CAAiC,EAAjC,EAAqCC,IAArC,CAA0C,SAASC,IAAT,CAAeC,EAAf,CAAmB,CAQhE,MAPI,MAAK5E,qBAOT,CANIhC,UAAU6G,kBAAV,CAA6B,KAAKvG,WAAL,CAAiB4E,IAAjB,CAAsB1E,UAAUG,QAAhC,CAA7B,CACI,oCAAoCgG,IAApC,CAA2C,QAD/C,CACyDC,EADzD,CAMJ,CAHI5G,UAAU8G,mBAAV,CAA8B,KAAKxG,WAAL,CAAiB4E,IAAjB,CAAsB1E,UAAUG,QAAhC,CAA9B,CACI,oCAAoCgG,IAApC,CAA2C,QAD/C,CACyDC,EADzD,CAGJ,CAAO,KAAKG,SAAL,CAAe,4CAAf,CACH,KAAK/E,qBADF,CACyB,KAAKC,sBAD9B,CAEV,CAVgD,CAU/CY,IAV+C,CAU1C,IAV0C,CAA1C,EAUO6D,IAVP,CAUY,SAASM,IAAT,CAAe,CAG9B,MAFAR,gBAAiBQ,KAAKC,QAAL,CAAclB,MAE/B,CADAiB,KAAKE,cAAL,GACA,CAAOlH,UAAUyG,MAAV,CAAiB,oCAAjB,CAAuDO,IAAvD,CACV,CAdM,EAcJN,IAdI,CAcC,SAASC,IAAT,CAAeC,EAAf,CAAmB,CAEvB,KAAKtG,WAAL,CAAiB4E,IAAjB,CAAsB1E,UAAUG,QAAV,CAAqB,GAArB,CAClBH,UAAUS,WADd,EAC2BkF,MAD3B,EAFuB,CAKF,CAAjB,eALmB,EAOnBnG,UAAU6G,kBAAV,CAA6B,KAAKvG,WAAL,CAAiB4E,IAAjB,CAAsB1E,UAAUG,QAAhC,CAA7B,CAAwEgG,IAAxE,CAA8EC,EAA9E,CAPmB,CASnB,KAAK5E,qBAAL,EAA8BwE,cATX,EAUZ,CAAC,KAAKxE,qBAVM,EAYnBhC,UAAU8G,mBAAV,CAA8B,KAAKxG,WAAL,CAAiB4E,IAAjB,CAAsB1E,UAAUG,QAAhC,CAA9B,CAAyEgG,IAAzE,CAA+EC,EAA/E,CAZmB,CAevB,KAAK7E,kBAAL,GACH,CAhBO,CAgBNc,IAhBM,CAgBD,IAhBC,CAdD,EA8BOsE,IA9BP,CA8BYlH,aAAamH,SA9BzB,CA+BV,CAoWD,CA5VA/G,SAASwB,SAAT,CAAmB0C,iBAAnB,CAAuC,SAASoB,KAAT,CAAgB,CAEnD,KAAKrF,WAAL,CAAiB+G,OAAjB,CAAyBjH,OAAOgE,oBAAhC,CAFmD,IAI/CV,QAAS5D,EAAE6F,MAAM2B,aAAR,EAAuBN,IAAvB,CAA4B,QAA5B,CAJsC,CAK/CO,UAAYzH,EAAE6F,MAAM2B,aAAR,EAAuBN,IAAvB,CAA4B,WAA5B,CALmC,CAM/CQ,SAAW,kBAAmB9D,MAAnB,CAA4B,KANQ,CAS/C6D,SAT+C,GAU/CC,SAAW,qBAAsBD,SAAtB,CAAkC,KAVE,EAanD,KAAKhB,gBAAL,CAAsBiB,QAAtB,CAbmD,CAcnD,KAAKlH,WAAL,CAAiB+G,OAAjB,CAAyBjH,OAAOqH,oBAAhC,CAAsD/D,MAAtD,CAdmD,CAgBnD,KAAKpD,WAAL,CAAiB4E,IAAjB,CAAsB1E,UAAUiB,mBAAhC,EAAqD+D,WAArD,CAAiE,UAAjE,CAhBmD,CAiBnD,KAAKf,kBAAL,EACH,CA0UD,CAlUApE,SAASwB,SAAT,CAAmB2C,YAAnB,CAAkC,SAASmB,KAAT,CAAgB,CAE9C,KAAKrF,WAAL,CAAiB+G,OAAjB,CAAyBjH,OAAOgE,oBAAhC,CAF8C,CAI9C,GAAIV,QAAS5D,EAAE6F,MAAM2B,aAAR,EAAuBN,IAAvB,CAA4B,QAA5B,CAAb,CACA,KAAKT,gBAAL,CAAsB,kBAAmB7C,MAAnB,CAA4B,KAAlD,CAL8C,CAM9C,KAAKpD,WAAL,CAAiB+G,OAAjB,CAAyBjH,OAAOsH,eAAhC,CAAiDhE,MAAjD,CAN8C,CAQ9C,KAAKpD,WAAL,CAAiB4E,IAAjB,CAAsB1E,UAAUgB,wBAAhC,EAA0DgE,WAA1D,CAAsE,UAAtE,CAR8C,CAS9C,KAAKf,kBAAL,EACH,CAwTD,CA7SApE,SAASwB,SAAT,CAAmBkF,SAAnB,CAA+B,SAASY,UAAT,CAAqBC,SAArB,CAAgCC,QAAhC,CAA0C,CAErE,GAAIC,UAAW/H,KAAKgI,IAAL,CAAU,CAAC,CACtBC,WAAYL,UADU,CAEtBM,KAAM,CACFvE,OAAQ,KAAKpD,WAAL,CAAiB4H,gBAAjB,EADN,CAEFN,UAAWA,SAFT,CAGFC,SAAUA,QAHR,CAFgB,CAAD,CAAV,CAAf,CASA,MAAOC,UAAS,CAAT,CACV,CAiSD,CAxRAzH,SAASwB,SAAT,CAAmBqB,mBAAnB,CAAyC,SAASyC,KAAT,CAAgBjC,MAAhB,CAAwB,CAE7D,KAAKC,cAAL,CAAoBnD,UAAUK,aAA9B,CAA6C6C,MAA7C,CAF6D,CAG7D,KAAKxB,0BAAL,EAH6D,CAI7D,KAAKiG,kBAAL,EAJ6D,CAM7D,KAAK9D,aAAL,EACH,CAiRD,CAvQAhE,SAASwB,SAAT,CAAmBwB,kBAAnB,CAAwC,SAASsC,KAAT,CAAgBjC,MAAhB,CAAwB0E,aAAxB,CAAuC,CAE3E,GAAIA,aAAJ,CAAmB,IACXvC,MAAO,KAAKC,YAAL,CAAkBtF,UAAUK,aAA5B,CAA2C6C,MAA3C,CADI,CAEX2E,kBAAoBD,cAAclD,IAAd,CAAmB1E,UAAUU,WAA7B,EAA0C0E,IAA1C,GAAiD0C,IAAjD,EAFT,CAGXC,aAHW,CAIXH,cAAcpB,IAAd,CAAmB,UAAnB,GAAkCtD,MAJvB,GAMX6E,aANW,EASf,KAAKjC,kBAAL,CAAwBT,IAAxB,CAA8BwC,iBAA9B,CAAiDE,UAAjD,CACH,CAGD,KAAKlE,aAAL,EACH,CAuPD,CAhPAhE,SAASwB,SAAT,CAAmBgC,WAAnB,CAAiC,UAAW,CACxC,KAAKvD,WAAL,CAAiB4E,IAAjB,CAAsB1E,UAAUG,QAAhC,EAA0C6H,KAA1C,EADwC,CAExC,KAAKxG,qBAAL,CAA6B,CAFW,CAGxC,KAAKqD,aAAL,EACH,CA4OD,CAnOAhF,SAASwB,SAAT,CAAmB8B,cAAnB,CAAoC,SAAS6D,QAAT,CAAmB9D,MAAnB,CAA2B,CAC3D,KAAKoC,YAAL,CAAkB0B,QAAlB,CAA4B9D,MAA5B,EAAoCyC,MAApC,EAD2D,CAE3D,KAAKnE,qBAAL,EACH,CAgOD,CAxNA3B,SAASwB,SAAT,CAAmBkC,aAAnB,CAAmC,SAASL,MAAT,CAAiB,CAChD,GAAImC,MAAO,KAAKC,YAAL,CAAkBtF,UAAUG,QAA5B,CAAsC+C,MAAtC,CAAX,CACAmC,KAAKX,IAAL,CAAU1E,UAAUE,kBAApB,EAAwC8E,WAAxC,CAAoD,QAApD,CAFgD,CAIhDK,KAAO,KAAKC,YAAL,CAAkBtF,UAAUK,aAA5B,CAA2C6C,MAA3C,CAJyC,CAKhDmC,KAAKX,IAAL,CAAU1E,UAAUE,kBAApB,EAAwC8E,WAAxC,CAAoD,QAApD,CALgD,CAOhDK,KAAO,KAAKC,YAAL,CAAkBtF,UAAUc,iBAA5B,CAA+CoC,MAA/C,CAPyC,CAQhDmC,KAAKX,IAAL,CAAU1E,UAAUE,kBAApB,EAAwC8E,WAAxC,CAAoD,QAApD,CACH,CA+MD,CAvMAnF,SAASwB,SAAT,CAAmBoC,eAAnB,CAAqC,SAASP,MAAT,CAAiB,CAClD,GAAImC,MAAO,KAAKC,YAAL,CAAkBtF,UAAUG,QAA5B,CAAsC+C,MAAtC,CAAX,CACAmC,KAAKX,IAAL,CAAU1E,UAAUE,kBAApB,EAAwC6E,QAAxC,CAAiD,QAAjD,CAFkD,CAIlDM,KAAO,KAAKC,YAAL,CAAkBtF,UAAUK,aAA5B,CAA2C6C,MAA3C,CAJ2C,CAKlDmC,KAAKX,IAAL,CAAU1E,UAAUE,kBAApB,EAAwC6E,QAAxC,CAAiD,QAAjD,CALkD,CAOlDM,KAAO,KAAKC,YAAL,CAAkBtF,UAAUc,iBAA5B,CAA+CoC,MAA/C,CAP2C,CAQlDmC,KAAKX,IAAL,CAAU1E,UAAUE,kBAApB,EAAwC6E,QAAxC,CAAiD,QAAjD,CACH,CA8LD,CApLAlF,SAASwB,SAAT,CAAmBiE,YAAnB,CAAkC,SAAS0B,QAAT,CAAmB9D,MAAnB,CAA2B,CACzD,MAAO,MAAKpD,WAAL,CAAiB4E,IAAjB,CAAsBsC,SAAW,GAAX,CAAiBhH,UAAUC,OAA3B,CACzB,iBADyB,CACNiD,MADM,CACG,KADzB,CAEV,CAiLD,CAzKArD,SAASwB,SAAT,CAAmB0E,gBAAnB,CAAsC,SAASiB,QAAT,CAAmB,CAErD,KAAKlH,WAAL,CAAiB4E,IAAjB,CAAsB1E,UAAUC,OAAhC,EAAyC+E,WAAzC,CAAqD,UAArD,CAFqD,CAGrD,KAAKlF,WAAL,CAAiB4E,IAAjB,CAAsB1E,UAAUC,OAAhC,EAAyCyF,IAAzC,CAA8C,cAA9C,IAHqD,CAKrD,KAAK5F,WAAL,CAAiB4E,IAAjB,CAAsB1E,UAAUC,OAAV,CAAoB+G,QAA1C,EAAoDjC,QAApD,CAA6D,UAA7D,CALqD,CAMrD,KAAKjF,WAAL,CAAiB4E,IAAjB,CAAsB1E,UAAUC,OAAV,CAAoB+G,QAA1C,EAAoDtB,IAApD,CAAyD,cAAzD,IACH,CAkKD,CA1JA7F,SAASwB,SAAT,CAAmB4G,eAAnB,CAAqC,SAAS7C,IAAT,CAAe,CAOhD,MANIA,MAAKG,MAAL,CAAc,KAAK3D,cAMvB,GALIwD,KAAOA,KAAK8C,MAAL,CAAY,CAAZ,CAAe,KAAKtG,cAAL,CAAsB,CAArC,CAKX,CAJIwD,MAAQ,KAIZ,EAAO+C,SAASC,cAAT,CAAwBhD,IAAxB,CACV,CAkJD,CAxIAvF,SAASwB,SAAT,CAAmByE,kBAAnB,CAAwC,SAAST,IAAT,CAAeD,IAAf,CAAqB2C,UAArB,CAAiC,CAErE3C,KAAO,KAAK6C,eAAL,CAAqB7C,IAArB,CAF8D,CAGjE2C,UAHiE,CAIjEpI,IAAI0I,UAAJ,CAAe,KAAf,CAAsB,SAAtB,EAAiCC,IAAjC,CAAsC,SAASC,MAAT,CAAiB,CAEnDlD,KAAKX,IAAL,CAAU1E,UAAUQ,eAApB,EAAqCwH,KAArC,GAA6CQ,MAA7C,CAAoDD,MAApD,CACH,CAHD,EAGGE,MAHH,CAGU,UAAW,CACjBpD,KAAKX,IAAL,CAAU1E,UAAUO,eAApB,EAAqCyH,KAArC,GAA6CQ,MAA7C,CAAoDpD,IAApD,CACH,CALD,CAJiE,EAWjEC,KAAKX,IAAL,CAAU1E,UAAUQ,eAApB,EAAqCwH,KAArC,EAXiE,CAYjE3C,KAAKX,IAAL,CAAU1E,UAAUO,eAApB,EAAqCyH,KAArC,GAA6CQ,MAA7C,CAAoDpD,IAApD,CAZiE,CAcxE,CA0HD,CAlHAvF,SAASwB,SAAT,CAAmB8C,kBAAnB,CAAwC,SAASlB,CAAT,CAAYuD,IAAZ,CAAkB,IAClDkC,SAAUpJ,EAAE2D,EAAE0F,MAAJ,EAAYC,OAAZ,CAAoB5I,UAAUC,OAA9B,CADwC,CAElD4I,KAAOH,QAAQG,IAAR,EAF2C,CAGtDA,KAAKC,KAAL,EAHsD,CAKtDtC,KAAKuC,aAAL,CAAmBC,cAAnB,EALsD,CAMtDxC,KAAKuC,aAAL,CAAmBE,eAAnB,EACH,CA2GD,CAnGApJ,SAASwB,SAAT,CAAmB6C,sBAAnB,CAA4C,SAASjB,CAAT,CAAYuD,IAAZ,CAAkB,IACtDkC,SAAUpJ,EAAE2D,EAAE0F,MAAJ,EAAYC,OAAZ,CAAoB5I,UAAUC,OAA9B,CAD4C,CAEtDiJ,SAAWR,QAAQS,IAAR,EAF2C,CAG1DD,SAASJ,KAAT,EAH0D,CAK1DtC,KAAKuC,aAAL,CAAmBC,cAAnB,EAL0D,CAM1DxC,KAAKuC,aAAL,CAAmBE,eAAnB,EACH,CA4FD,CApFApJ,SAASwB,SAAT,CAAmBkD,iBAAnB,CAAuC,SAAStB,CAAT,CAAYuD,IAAZ,CAAkB,CACrD,GAAI4C,QAAS9J,EAAE2D,EAAE0F,MAAJ,EAAYC,OAAZ,CAAoB5I,UAAUM,MAA9B,CAAb,CACA8I,OAAOP,IAAP,GAAcC,KAAd,EAFqD,CAIrDtC,KAAKuC,aAAL,CAAmBC,cAAnB,EAJqD,CAKrDxC,KAAKuC,aAAL,CAAmBE,eAAnB,EACH,CA8ED,CAtEApJ,SAASwB,SAAT,CAAmBiD,qBAAnB,CAA2C,SAASrB,CAAT,CAAYuD,IAAZ,CAAkB,CACzD,GAAI4C,QAAS9J,EAAE2D,EAAE0F,MAAJ,EAAYC,OAAZ,CAAoB5I,UAAUM,MAA9B,CAAb,CACA8I,OAAOD,IAAP,GAAcL,KAAd,EAFyD,CAIzDtC,KAAKuC,aAAL,CAAmBC,cAAnB,EAJyD,CAKzDxC,KAAKuC,aAAL,CAAmBE,eAAnB,EACH,CAgED,CAxDApJ,SAASwB,SAAT,CAAmBgD,uBAAnB,CAA6C,SAASpB,CAAT,CAAYuD,IAAZ,CAAkB,IACvD6C,cAAe/J,EAAE2D,EAAE0F,MAAJ,EAAYC,OAAZ,CAAoB5I,UAAUmB,gBAA9B,CADwC,CAEvD0H,KAAOQ,aAAaR,IAAb,EAFgD,CAG3DA,KAAKC,KAAL,EAH2D,CAK3DtC,KAAKuC,aAAL,CAAmBC,cAAnB,EAL2D,CAM3DxC,KAAKuC,aAAL,CAAmBE,eAAnB,EACH,CAiDD,CAzCApJ,SAASwB,SAAT,CAAmB+C,2BAAnB,CAAiD,SAASnB,CAAT,CAAYuD,IAAZ,CAAkB,IAC3D6C,cAAe/J,EAAE2D,EAAE0F,MAAJ,EAAYC,OAAZ,CAAoB5I,UAAUmB,gBAA9B,CAD4C,CAE3D+H,SAAWG,aAAaF,IAAb,EAFgD,CAG/DD,SAASJ,KAAT,EAH+D,CAK/DtC,KAAKuC,aAAL,CAAmBC,cAAnB,EAL+D,CAM/DxC,KAAKuC,aAAL,CAAmBE,eAAnB,EACH,CAkCD,CA7BApJ,SAASwB,SAAT,CAAmBmD,aAAnB,CAAmC,UAAW,CAC1ClF,EAAEU,UAAUe,cAAZ,EAA4BgE,QAA5B,CAAqC,WAArC,CACH,CA2BD,CAtBAlF,SAASwB,SAAT,CAAmBoD,eAAnB,CAAqC,UAAW,CAC5CnF,EAAEU,UAAUe,cAAZ,EAA4BiE,WAA5B,CAAwC,WAAxC,CACH,CAoBD,CAfAnF,SAASwB,SAAT,CAAmB4C,kBAAnB,CAAwC,UAAW,CAC/C,KAAKnE,WAAL,CAAiB4E,IAAjB,CAAsB1E,UAAUW,aAAhC,EACKqE,WADL,CACiB,eADjB,EAEKD,QAFL,CAEc,eAFd,CAGH,CAWD,CANAlF,SAASwB,SAAT,CAAmBsG,kBAAnB,CAAwC,UAAW,CAC/C,KAAK7H,WAAL,CAAiB4E,IAAjB,CAAsB1E,UAAUW,aAAhC,EACKqE,WADL,CACiB,eADjB,EAEKD,QAFL,CAEc,eAFd,CAGH,CAED,CAAOlF,QACV,CA9qBL,C","file":"message_area_contacts.min.js","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module handles the contacts area of the messaging area.\n *\n * @module     core_message/message_area_contacts\n * @package    core_message\n * @copyright  2016 Mark Nelson <markn@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/ajax', 'core/templates', 'core/notification', 'core/custom_interaction_events', 'core/str',\n        'core_message/message_area_events'],\n    function($, Ajax, Templates, Notification, CustomEvents, Str, Events) {\n\n        /** @type {Object} The list of selectors for the message area. */\n        var SELECTORS = {\n            CONTACT: \"[data-region='contact']\",\n            CONTACTICONBLOCKED: \"[data-region='contact-icon-blocked']\",\n            CONTACTS: \"[data-region='contacts'][data-region-content='contacts']\",\n            CONTACTSAREA: \"[data-region='contacts-area']\",\n            CONVERSATIONS: \"[data-region='contacts'][data-region-content='conversations']\",\n            COURSE: \"[data-region='course']\",\n            LASTMESSAGETEXT: \"[data-region='last-message-text']\",\n            LASTMESSAGEUSER: \"[data-region='last-message-user']\",\n            LOADINGICON: '.loading-icon',\n            MESSAGETEXT: \"[data-region='message-text']\",\n            MESSAGINGAREA: \"[data-region='messaging-area']\",\n            NOCONTACTS: \"[data-region=no-contacts]\",\n            SEARCHBOX: \"[data-region='search-box']\",\n            SEARCHRESULTSAREA: \"[data-region='search-results-area']\",\n            SEARCHTEXTAREA: \"[data-region='search-text-area']\",\n            SELECTEDVIEWCONVERSATION: \"[data-action='view-contact-msg'].selected\",\n            SELECTEDVIEWPROFILE: \"[data-action='view-contact-profile'].selected\",\n            SHOWMESSAGES: \"[data-action='show-messages']\",\n            VIEWCONVERSATION: \"[data-action='view-contact-msg']\",\n            VIEWPROFILE: \"[data-action='view-contact-profile']\"\n        };\n\n        /**\n         * Contacts class.\n         *\n         * @param {Messagearea} messageArea The messaging area object.\n         */\n        function Contacts(messageArea) {\n            this.messageArea = messageArea;\n            this._init();\n        }\n\n        /** @type {Boolean} checks if we are currently loading conversations */\n        Contacts.prototype._isLoadingConversations = false;\n\n        /** @type {Boolean} checks if we are currently loading contacts */\n        Contacts.prototype._isLoadingContacts = false;\n\n        /** @type {int} the number of contacts displayed */\n        Contacts.prototype._numContactsDisplayed = 0;\n\n        /** @type {int} the number of contacts to retrieve */\n        Contacts.prototype._numContactsToRetrieve = 20;\n\n        /** @type {int} the number of conversations displayed */\n        Contacts.prototype._numConversationsDisplayed = 0;\n\n        /** @type {int} the number of conversations to retrieve */\n        Contacts.prototype._numConversationsToRetrieve = 20;\n\n        /** @type {int} the number of chars of the message to show */\n        Contacts.prototype._messageLength = 60;\n\n        /** @type {Messagearea} The messaging area object. */\n        Contacts.prototype.messageArea = null;\n\n        /**\n         * Initialise the event listeners.\n         *\n         * @private\n         */\n        Contacts.prototype._init = function() {\n            CustomEvents.define(this.messageArea.node, [\n                CustomEvents.events.activate,\n                CustomEvents.events.down,\n                CustomEvents.events.up,\n            ]);\n\n            this.messageArea.onCustomEvent(Events.MESSAGESEARCHCANCELED, this._viewConversations.bind(this));\n            this.messageArea.onCustomEvent(Events.USERSSEARCHCANCELED, this._viewContacts.bind(this));\n            this.messageArea.onCustomEvent(Events.CONTACTSSELECTED, this._viewContacts.bind(this));\n            this.messageArea.onCustomEvent(Events.CONVERSATIONDELETED, this._deleteConversation.bind(this));\n            this.messageArea.onCustomEvent(Events.CONVERSATIONSSELECTED, this._viewConversations.bind(this));\n            this.messageArea.onCustomEvent(Events.CONTACTSSELECTED, this._viewContacts.bind(this));\n            this.messageArea.onCustomEvent(Events.MESSAGESDELETED, this._updateLastMessage.bind(this));\n            this.messageArea.onCustomEvent(Events.MESSAGESENT, this._handleMessageSent.bind(this));\n            this.messageArea.onCustomEvent(Events.CONTACTREMOVED, function(e, userid) {\n                this._removeContact(SELECTORS.CONTACTS, userid);\n            }.bind(this));\n            this.messageArea.onCustomEvent(Events.CONTACTADDED, function(e, userid) {\n                this._addContact(userid);\n            }.bind(this));\n            this.messageArea.onCustomEvent(Events.CONTACTBLOCKED, function(e, userid) {\n                this._blockContact(userid);\n            }.bind(this));\n            this.messageArea.onCustomEvent(Events.CONTACTUNBLOCKED, function(e, userid) {\n                this._unblockContact(userid);\n            }.bind(this));\n            this.messageArea.onCustomEvent(Events.CHOOSEMESSAGESTODELETE,\n                this._startDeleting.bind(this));\n            this.messageArea.onCustomEvent(Events.CANCELDELETEMESSAGES,\n                this._stopDeleting.bind(this));\n            this.messageArea.onDelegateEvent(CustomEvents.events.activate, SELECTORS.VIEWCONVERSATION,\n                this._viewConversation.bind(this));\n            this.messageArea.onDelegateEvent(CustomEvents.events.activate, SELECTORS.VIEWPROFILE,\n                this._viewContact.bind(this));\n            this.messageArea.onDelegateEvent(CustomEvents.events.activate, SELECTORS.SHOWMESSAGES,\n                this._showMessagingArea.bind(this));\n\n            this.messageArea.onDelegateEvent(CustomEvents.events.up, SELECTORS.CONTACT,\n                this._selectPreviousContact.bind(this));\n            this.messageArea.onDelegateEvent(CustomEvents.events.down, SELECTORS.CONTACT,\n                this._selectNextContact.bind(this));\n            this.messageArea.onDelegateEvent(CustomEvents.events.up, SELECTORS.VIEWCONVERSATION,\n                this._selectPreviousConversation.bind(this));\n            this.messageArea.onDelegateEvent(CustomEvents.events.down, SELECTORS.VIEWCONVERSATION,\n                this._selectNextConversation.bind(this));\n\n            this.messageArea.onDelegateEvent(CustomEvents.events.up, SELECTORS.COURSE, this._selectPreviousCourse.bind());\n            this.messageArea.onDelegateEvent(CustomEvents.events.down, SELECTORS.COURSE, this._selectNextCourse.bind());\n\n            this.messageArea.onDelegateEvent('focus', SELECTORS.SEARCHBOX, this._setSearching.bind(this));\n            this.messageArea.onDelegateEvent('blur', SELECTORS.SEARCHBOX, this._clearSearching.bind(this));\n\n            // Now enable the ability to infinitely scroll through conversations and contacts.\n            CustomEvents.define(this.messageArea.find(SELECTORS.CONVERSATIONS), [\n                CustomEvents.events.scrollBottom\n            ]);\n            CustomEvents.define(this.messageArea.find(SELECTORS.CONTACTS), [\n                CustomEvents.events.scrollBottom\n            ]);\n            this.messageArea.onDelegateEvent(CustomEvents.events.scrollBottom, SELECTORS.CONVERSATIONS,\n                this._loadConversations.bind(this));\n            this.messageArea.onDelegateEvent(CustomEvents.events.scrollBottom, SELECTORS.CONTACTS,\n                this._loadContacts.bind(this));\n\n            if (!this.messageArea.showContactsFirst()) {\n                // Set the initial number of conversations to retrieve. Otherwise it will display no conversations.\n                this._numConversationsDisplayed = 20;\n            }\n        };\n\n        /**\n         * Turn on deleting.\n         *\n         * @private\n         */\n        Contacts.prototype._startDeleting = function() {\n            this.messageArea.find(SELECTORS.CONTACTSAREA).addClass('editing');\n        };\n\n        /**\n         * Turn off deleting.\n         *\n         * @private\n         */\n        Contacts.prototype._stopDeleting = function() {\n            this.messageArea.find(SELECTORS.CONTACTSAREA).removeClass('editing');\n        };\n\n        /**\n         * Handles viewing the list of conversations.\n         *\n         * @private\n         */\n        Contacts.prototype._viewConversations = function() {\n            // If conversations is empty then try load some.\n            if (this._numConversationsDisplayed === 0) {\n                this._loadConversations();\n            }\n\n            this.messageArea.find(SELECTORS.CONTACTS).hide();\n            this.messageArea.find(SELECTORS.CONVERSATIONS).show();\n        };\n\n        /**\n         * Handles viewing the list of contacts.\n         *\n         * @private\n         */\n        Contacts.prototype._viewContacts = function() {\n            // If contacts is empty then try load some.\n            if (this._numContactsDisplayed === 0) {\n                this._loadContacts();\n            }\n\n            this.messageArea.find(SELECTORS.CONVERSATIONS).hide();\n            this.messageArea.find(SELECTORS.CONTACTS).show();\n        };\n\n        /**\n         * Handles when a message is sent.\n         *\n         * @param {Event} event The message sent event\n         * @param {int} userid The id of the user who the message was sent to\n         * @param {String} text The message text\n         * @private\n         */\n        Contacts.prototype._handleMessageSent = function(event, userid, text) {\n            // Switch to viewing the conversations.\n            this._viewConversations();\n            // Get the user node.\n            var user = this._getUserNode(SELECTORS.CONVERSATIONS, userid);\n            // If the user has not been loaded yet, let's copy the element from contact or search panel to the conversation panel.\n            if (user.length === 0) {\n                // Let's clone the data on the contact page.\n                var usercontact = this._getUserNode(SELECTORS.CONTACTS, userid);\n                if (usercontact.length === 0) {\n                    // No luck, maybe we sent the message to a user we searched for - check search page.\n                    usercontact = this._getUserNode(SELECTORS.SEARCHRESULTSAREA, userid);\n                }\n                if (usercontact.length == 0) {\n                    // Can't do much.\n                    return;\n                }\n                user = usercontact.clone();\n                // Change the data action attribute.\n                user.attr('data-action', 'view-contact-msg');\n                // Remove the 'no conversations' message.\n                this.messageArea.find(SELECTORS.CONVERSATIONS + \" \" +\n                    SELECTORS.NOCONTACTS).remove();\n                // Increment the number of conversations displayed.\n                this._numConversationsDisplayed++;\n            }\n            // Move the contact to the top of the list.\n            user.prependTo(this.messageArea.find(SELECTORS.CONVERSATIONS));\n            // Scroll to the top.\n            this.messageArea.find(SELECTORS.CONVERSATIONS).scrollTop(0);\n            // Get the new text to show.\n            this._updateContactText(user, text, true);\n            // Ensure user is selected.\n            this._setSelectedUser(\"[data-userid='\" + userid + \"']\");\n        };\n\n        /**\n         * Handles loading conversations.\n         *\n         * @return {Promise|boolean} The promise resolved when the contact area has been rendered,\n         * @private\n         */\n        Contacts.prototype._loadConversations = function() {\n            if (this._isLoadingConversations) {\n                return false;\n            }\n\n            // Tell the user we are loading items.\n            this._isLoadingConversations = true;\n\n            // Keep track of the number of contacts\n            var numberreceived = 0;\n            // Add loading icon to the end of the list.\n            return Templates.render('core/loading', {}).then(function(html, js) {\n                if (this._numConversationsDisplayed) {\n                    Templates.appendNodeContents(this.messageArea.find(SELECTORS.CONVERSATIONS),\n                        \"<div style='text-align:center'>\" + html + \"</div>\", js);\n                } else { // No conversations, just replace contents.\n                    Templates.replaceNodeContents(this.messageArea.find(SELECTORS.CONVERSATIONS),\n                        \"<div style='text-align:center'>\" + html + \"</div>\", js);\n                }\n                return this._getItems('core_message_data_for_messagearea_conversations',\n                    this._numConversationsDisplayed, this._numConversationsToRetrieve);\n            }.bind(this)).then(function(data) {\n                numberreceived = data.contacts.length;\n                data.isconversation = true;\n                return Templates.render('core_message/message_area_contacts', data);\n            }).then(function(html, js) {\n                // Remove the loading icon.\n                this.messageArea.find(SELECTORS.CONVERSATIONS + \" \" +\n                    SELECTORS.LOADINGICON).remove();\n                // Only append data if we got data back.\n                if (numberreceived > 0) {\n                    // Show the new content.\n                    Templates.appendNodeContents(this.messageArea.find(SELECTORS.CONVERSATIONS), html, js);\n                    // Increment the number of conversations displayed. We increment by the number of conversations we\n                    // asked to retrieve not by the number that was actually retrieved, see MDL-55870.\n                    this._numConversationsDisplayed += this._numConversationsToRetrieve;\n                } else if (!this._numConversationsDisplayed) {\n                    // If we didn't receive any contacts and there are currently none, then we want to show a message.\n                    Templates.replaceNodeContents(this.messageArea.find(SELECTORS.CONVERSATIONS), html, js);\n                }\n                // Mark that we are no longer busy loading data.\n                this._isLoadingConversations = false;\n            }.bind(this)).fail(Notification.exception);\n        };\n\n        /**\n         * Handles loading contacts.\n         *\n         * @return {Promise|boolean} The promise resolved when the contact area has been rendered\n         * @private\n         */\n        Contacts.prototype._loadContacts = function() {\n            if (this._isLoadingContacts) {\n                return false;\n            }\n\n            // Tell the user we are loading items.\n            this._isLoadingContacts = true;\n\n            // Keep track of the number of contacts\n            var numberreceived = 0;\n            // Add loading icon to the end of the list.\n            return Templates.render('core/loading', {}).then(function(html, js) {\n                if (this._numContactsDisplayed) {\n                    Templates.appendNodeContents(this.messageArea.find(SELECTORS.CONTACTS),\n                        \"<div style='text-align:center'>\" + html + \"</div>\", js);\n                } else { // No contacts, just replace contents.\n                    Templates.replaceNodeContents(this.messageArea.find(SELECTORS.CONTACTS),\n                        \"<div style='text-align:center'>\" + html + \"</div>\", js);\n                }\n                return this._getItems('core_message_data_for_messagearea_contacts',\n                    this._numContactsDisplayed, this._numContactsToRetrieve);\n            }.bind(this)).then(function(data) {\n                numberreceived = data.contacts.length;\n                data.isconversation = false;\n                return Templates.render('core_message/message_area_contacts', data);\n            }).then(function(html, js) {\n                // Remove the loading icon.\n                this.messageArea.find(SELECTORS.CONTACTS + \" \" +\n                    SELECTORS.LOADINGICON).remove();\n                // Only append data if we got data back.\n                if (numberreceived > 0) {\n                    // Show the new content.\n                    Templates.appendNodeContents(this.messageArea.find(SELECTORS.CONTACTS), html, js);\n                    // Increment the number of contacts displayed.\n                    this._numContactsDisplayed += numberreceived;\n                } else if (!this._numContactsDisplayed) {\n                    // If we didn't receive any contacts and there are currently none, then we want to show a message.\n                    Templates.replaceNodeContents(this.messageArea.find(SELECTORS.CONTACTS), html, js);\n                }\n                // Mark that we are no longer busy loading data.\n                this._isLoadingContacts = false;\n            }.bind(this)).fail(Notification.exception);\n        };\n\n        /**\n         * Handles viewing a particular conversation.\n         *\n         * @param {Event} event\n         * @private\n         */\n        Contacts.prototype._viewConversation = function(event) {\n            // Cancel any deletion of messages we may have.\n            this.messageArea.trigger(Events.CANCELDELETEMESSAGES);\n\n            var userid = $(event.currentTarget).data('userid');\n            var messageid = $(event.currentTarget).data('messageid');\n            var selector = \"[data-userid='\" + userid + \"']\";\n            // If we have a specific message id then we did a search and the contact may appear in multiple\n            // places - we don't want to highlight them all.\n            if (messageid) {\n                selector = \"[data-messageid='\" + messageid + \"']\";\n            }\n\n            this._setSelectedUser(selector);\n            this.messageArea.trigger(Events.CONVERSATIONSELECTED, userid);\n            // Don't highlight the contact because the message region has changed.\n            this.messageArea.find(SELECTORS.SELECTEDVIEWPROFILE).removeClass('selected');\n            this._showMessagingArea();\n        };\n\n        /**\n         * Handles viewing a particular contact.\n         *\n         * @param {Event} event\n         * @private\n         */\n        Contacts.prototype._viewContact = function(event) {\n            // Cancel any deletion of messages we may have.\n            this.messageArea.trigger(Events.CANCELDELETEMESSAGES);\n\n            var userid = $(event.currentTarget).data('userid');\n            this._setSelectedUser(\"[data-userid='\" + userid + \"']\");\n            this.messageArea.trigger(Events.CONTACTSELECTED, userid);\n            // Don't highlight the conversation because the message region has changed.\n            this.messageArea.find(SELECTORS.SELECTEDVIEWCONVERSATION).removeClass('selected');\n            this._showMessagingArea();\n        };\n\n        /**\n         * Handles returning a list of items to display.\n         *\n         * @param {String} webservice The web service to call\n         * @param {int} limitfrom\n         * @param {int} limitnum\n         * @return {Promise} The promise resolved when the contact area has been rendered\n         * @private\n         */\n        Contacts.prototype._getItems = function(webservice, limitfrom, limitnum) {\n            // Call the web service to return the data we want to view.\n            var promises = Ajax.call([{\n                methodname: webservice,\n                args: {\n                    userid: this.messageArea.getCurrentUserId(),\n                    limitfrom: limitfrom,\n                    limitnum: limitnum\n                }\n            }]);\n\n            return promises[0];\n        };\n\n        /**\n         * Handles deleting a conversation.\n         *\n         * @param {Event} event\n         * @param {int} userid The user id belonging to the messages we are deleting.\n         * @private\n         */\n        Contacts.prototype._deleteConversation = function(event, userid) {\n            // Remove the conversation.\n            this._removeContact(SELECTORS.CONVERSATIONS, userid);\n            this._numConversationsDisplayed--;\n            this._hideMessagingArea();\n            // Now we have done all the deletion we can set the flag back to false.\n            this._stopDeleting();\n        };\n\n        /**\n         * Handles updating the last message in the contact.\n         *\n         * @param {Event} event\n         * @param {int} userid The user id belonging to the messages we are deleting\n         * @param {jQuery|null} updatemessage The message we need to update the contact panel with\n         * @private\n         */\n        Contacts.prototype._updateLastMessage = function(event, userid, updatemessage) {\n            // Check if the last message needs updating.\n            if (updatemessage) {\n                var user = this._getUserNode(SELECTORS.CONVERSATIONS, userid);\n                var updatemessagetext = updatemessage.find(SELECTORS.MESSAGETEXT).text().trim();\n                var sentbyuser = false;\n                if (updatemessage.data('useridto') == userid) {\n                    // Must have been sent by the currently logged in user.\n                    sentbyuser = true;\n                }\n\n                this._updateContactText(user, updatemessagetext, sentbyuser);\n            }\n\n            // Now we have done all the deletion we can set the flag back to false.\n            this._stopDeleting();\n        };\n\n        /**\n         * Handles adding a contact to the list.\n         *\n         * @private\n         */\n        Contacts.prototype._addContact = function() {\n            this.messageArea.find(SELECTORS.CONTACTS).empty();\n            this._numContactsDisplayed = 0;\n            this._loadContacts();\n        };\n\n        /**\n         * Handles removing a contact from the list.\n         *\n         * @param {String} selector\n         * @param {int} userid\n         * @private\n         */\n        Contacts.prototype._removeContact = function(selector, userid) {\n            this._getUserNode(selector, userid).remove();\n            this._numContactsDisplayed--;\n        };\n\n        /**\n         * Handles marking a contact as blocked on the list.\n         *\n         * @param {int} userid\n         * @private\n         */\n        Contacts.prototype._blockContact = function(userid) {\n            var user = this._getUserNode(SELECTORS.CONTACTS, userid);\n            user.find(SELECTORS.CONTACTICONBLOCKED).removeClass('hidden');\n\n            user = this._getUserNode(SELECTORS.CONVERSATIONS, userid);\n            user.find(SELECTORS.CONTACTICONBLOCKED).removeClass('hidden');\n\n            user = this._getUserNode(SELECTORS.SEARCHRESULTSAREA, userid);\n            user.find(SELECTORS.CONTACTICONBLOCKED).removeClass('hidden');\n        };\n\n        /**\n         * Handles marking a contact as unblocked on the list.\n         *\n         * @param {int} userid\n         * @private\n         */\n        Contacts.prototype._unblockContact = function(userid) {\n            var user = this._getUserNode(SELECTORS.CONTACTS, userid);\n            user.find(SELECTORS.CONTACTICONBLOCKED).addClass('hidden');\n\n            user = this._getUserNode(SELECTORS.CONVERSATIONS, userid);\n            user.find(SELECTORS.CONTACTICONBLOCKED).addClass('hidden');\n\n            user = this._getUserNode(SELECTORS.SEARCHRESULTSAREA, userid);\n            user.find(SELECTORS.CONTACTICONBLOCKED).addClass('hidden');\n        };\n\n        /**\n         * Handles retrieving a user node from a list.\n         *\n         * @param {String} selector\n         * @param {int} userid\n         * @return {jQuery} The user node\n         * @private\n         */\n        Contacts.prototype._getUserNode = function(selector, userid) {\n            return this.messageArea.find(selector + \" \" + SELECTORS.CONTACT +\n                \"[data-userid='\" + userid + \"']\");\n        };\n\n        /**\n         * Handles selecting a contact in the list.\n         *\n         * @param {String} selector\n         * @private\n         */\n        Contacts.prototype._setSelectedUser = function(selector) {\n            // Remove the 'selected' class from any other contact.\n            this.messageArea.find(SELECTORS.CONTACT).removeClass('selected');\n            this.messageArea.find(SELECTORS.CONTACT).attr('aria-pressed', false);\n            // Set the tab for the user to selected.\n            this.messageArea.find(SELECTORS.CONTACT + selector).addClass('selected');\n            this.messageArea.find(SELECTORS.CONTACT + selector).attr('aria-pressed', true);\n        };\n\n        /**\n         * Converts a text message into the text that should be stored in the contact list\n         *\n         * @param {String} text\n         * @return {String} The altered text\n         */\n        Contacts.prototype._getContactText = function(text) {\n            if (text.length > this._messageLength) {\n                text = text.substr(0, this._messageLength - 3);\n                text += '...';\n            }\n\n            // Text node prevents script injection through HTML entities.\n            return document.createTextNode(text);\n        };\n\n        /**\n         * Handles updating the contact text.\n         *\n         * @param {jQuery} user The user to update\n         * @param {String} text The text to update the contact with\n         * @param {Boolean} sentbyuser Was it sent by the currently logged in user?\n         * @private\n         */\n        Contacts.prototype._updateContactText = function(user, text, sentbyuser) {\n            // Get the text we will display on the contact panel.\n            text = this._getContactText(text);\n            if (sentbyuser) {\n                Str.get_string('you', 'message').done(function(string) {\n                    // Ensure we display that the message is from this user.\n                    user.find(SELECTORS.LASTMESSAGEUSER).empty().append(string);\n                }).always(function() {\n                    user.find(SELECTORS.LASTMESSAGETEXT).empty().append(text);\n                });\n            } else {\n                user.find(SELECTORS.LASTMESSAGEUSER).empty();\n                user.find(SELECTORS.LASTMESSAGETEXT).empty().append(text);\n            }\n        };\n\n        /**\n         * Shifts focus to the next contact in the list.\n         *\n         * @param {event} e The jquery event\n         * @param {object} data Additional event data\n         */\n        Contacts.prototype._selectNextContact = function(e, data) {\n            var contact = $(e.target).closest(SELECTORS.CONTACT);\n            var next = contact.next();\n            next.focus();\n\n            data.originalEvent.preventDefault();\n            data.originalEvent.stopPropagation();\n        };\n\n        /**\n         * Shifts focus to the previous contact in the list.\n         *\n         * @param {event} e The jquery event\n         * @param {object} data Additional event data\n         */\n        Contacts.prototype._selectPreviousContact = function(e, data) {\n            var contact = $(e.target).closest(SELECTORS.CONTACT);\n            var previous = contact.prev();\n            previous.focus();\n\n            data.originalEvent.preventDefault();\n            data.originalEvent.stopPropagation();\n        };\n\n        /**\n         * Shifts focus to the next course in the list.\n         *\n         * @param {event} e The jquery event\n         * @param {object} data Additional event data\n         */\n        Contacts.prototype._selectNextCourse = function(e, data) {\n            var course = $(e.target).closest(SELECTORS.COURSE);\n            course.next().focus();\n\n            data.originalEvent.preventDefault();\n            data.originalEvent.stopPropagation();\n        };\n\n        /**\n         * Shifts focus to the previous course in the list.\n         *\n         * @param {event} e The jquery event\n         * @param {object} data Additional event data\n         */\n        Contacts.prototype._selectPreviousCourse = function(e, data) {\n            var course = $(e.target).closest(SELECTORS.COURSE);\n            course.prev().focus();\n\n            data.originalEvent.preventDefault();\n            data.originalEvent.stopPropagation();\n        };\n\n        /**\n         * Shifts focus to the next conversation in the list.\n         *\n         * @param {event} e The jquery event\n         * @param {object} data Additional event data\n         */\n        Contacts.prototype._selectNextConversation = function(e, data) {\n            var conversation = $(e.target).closest(SELECTORS.VIEWCONVERSATION);\n            var next = conversation.next();\n            next.focus();\n\n            data.originalEvent.preventDefault();\n            data.originalEvent.stopPropagation();\n        };\n\n        /**\n         * Shifts focus to the previous conversation in the list.\n         *\n         * @param {event} e The jquery event\n         * @param {object} data Additional event data\n         */\n        Contacts.prototype._selectPreviousConversation = function(e, data) {\n            var conversation = $(e.target).closest(SELECTORS.VIEWCONVERSATION);\n            var previous = conversation.prev();\n            previous.focus();\n\n            data.originalEvent.preventDefault();\n            data.originalEvent.stopPropagation();\n        };\n\n        /**\n         * Flags the search area as seaching.\n         */\n        Contacts.prototype._setSearching = function() {\n            $(SELECTORS.SEARCHTEXTAREA).addClass('searching');\n        };\n\n        /**\n         * Flags the search area as seaching.\n         */\n        Contacts.prototype._clearSearching = function() {\n            $(SELECTORS.SEARCHTEXTAREA).removeClass('searching');\n        };\n\n        /**\n         * Make the messaging area visible.\n         */\n        Contacts.prototype._showMessagingArea = function() {\n            this.messageArea.find(SELECTORS.MESSAGINGAREA)\n                .removeClass('hide-messages')\n                .addClass('show-messages');\n        };\n\n        /**\n         * Hide the messaging area.\n         */\n        Contacts.prototype._hideMessagingArea = function() {\n            this.messageArea.find(SELECTORS.MESSAGINGAREA)\n                .removeClass('show-messages')\n                .addClass('hide-messages');\n        };\n\n        return Contacts;\n    }\n);\n"]}