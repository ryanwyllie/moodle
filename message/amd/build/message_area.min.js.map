{"version":3,"sources":["../src/message_area.js"],"names":["define","$","Contacts","Messages","Profile","Tabs","Search","Messagearea","selector","pollmin","pollmax","polltimeout","node","_init","prototype","onDelegateEvent","action","callable","on","onCustomEvent","trigger","event","data","find","getCurrentUserId","showContactsFirst"],"mappings":"aAuBAA,mCAAO,CAAC,QAAD,CAAW,oCAAX,CAAiD,oCAAjD,CACC,mCADD,CACsC,gCADtC,CACwE,kCADxE,CAAP,CAEI,SAASC,CAAT,CAAYC,QAAZ,CAAsBC,QAAtB,CAAgCC,OAAhC,CAAyCC,IAAzC,CAA+CC,MAA/C,CAAuD,CAUnD,QAASC,YAAT,CAAqBC,QAArB,CAA+BC,OAA/B,CAAwCC,OAAxC,CAAiDC,WAAjD,CAA8D,CAC1D,KAAKC,IAAL,CAAYX,EAAEO,QAAF,CAD8C,CAE1D,KAAKC,OAAL,CAAeA,OAF2C,CAG1D,KAAKC,OAAL,CAAeA,OAH2C,CAI1D,KAAKC,WAAL,CAAmBA,WAJuC,CAK1D,KAAKE,KAAL,EACH,CAuFD,MApFAN,aAAYO,SAAZ,CAAsBF,IAAtB,CAA6B,IAoF7B,CAjFAL,YAAYO,SAAZ,CAAsBL,OAAtB,CAAgC,IAiFhC,CA9EAF,YAAYO,SAAZ,CAAsBJ,OAAtB,CAAgC,IA8EhC,CA3EAH,YAAYO,SAAZ,CAAsBH,WAAtB,CAAoC,IA2EpC,CAtEAJ,YAAYO,SAAZ,CAAsBD,KAAtB,CAA8B,UAAW,CACrC,GAAIX,SAAJ,CAAa,IAAb,CADqC,CAErC,GAAIC,SAAJ,CAAa,IAAb,CAFqC,CAGrC,GAAIC,QAAJ,CAAY,IAAZ,CAHqC,CAIrC,GAAIC,KAAJ,CAAS,IAAT,CAJqC,CAKrC,GAAIC,OAAJ,CAAW,IAAX,CACH,CAgED,CAvDAC,YAAYO,SAAZ,CAAsBC,eAAtB,CAAwC,SAASC,MAAT,CAAiBR,QAAjB,CAA2BS,QAA3B,CAAqC,CACzE,KAAKL,IAAL,CAAUM,EAAV,CAAaF,MAAb,CAAqBR,QAArB,CAA+BS,QAA/B,CACH,CAqDD,CA7CAV,YAAYO,SAAZ,CAAsBK,aAAtB,CAAsC,SAASH,MAAT,CAAiBC,QAAjB,CAA2B,CAC7D,KAAKL,IAAL,CAAUM,EAAV,CAAaF,MAAb,CAAqBC,QAArB,CACH,CA2CD,CAnCAV,YAAYO,SAAZ,CAAsBM,OAAtB,CAAgC,SAASC,KAAT,CAAgBC,IAAhB,CAAsB,CAC/B,WAAf,QAAOA,KADuC,GAE9CA,KAAO,EAFuC,EAIlD,KAAKV,IAAL,CAAUQ,OAAV,CAAkBC,KAAlB,CAAyBC,IAAzB,CACH,CA8BD,CAtBAf,YAAYO,SAAZ,CAAsBS,IAAtB,CAA6B,SAASf,QAAT,CAAmB,CAC5C,MAAO,MAAKI,IAAL,CAAUW,IAAV,CAAef,QAAf,CACV,CAoBD,CAbAD,YAAYO,SAAZ,CAAsBU,gBAAtB,CAAyC,UAAW,CAChD,MAAO,MAAKZ,IAAL,CAAUU,IAAV,CAAe,QAAf,CACV,CAWD,CAJAf,YAAYO,SAAZ,CAAsBW,iBAAtB,CAA0C,UAAW,CACjD,MAAO,CAAC,CAAC,KAAKb,IAAL,CAAUU,IAAV,CAAe,iBAAf,CACZ,CAED,CAAOf,WACV,CA1GL,C","file":"message_area.min.js","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module instantiates the functionality of the messaging area.\n *\n * @module     core_message/message_area\n * @package    core_message\n * @copyright  2016 Mark Nelson <markn@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core_message/message_area_contacts', 'core_message/message_area_messages',\n        'core_message/message_area_profile', 'core_message/message_area_tabs', 'core_message/message_area_search'],\n    function($, Contacts, Messages, Profile, Tabs, Search) {\n\n        /**\n         * Messagearea class.\n         *\n         * @param {String} selector The selector for the page region containing the message area.\n         * @param {int} pollmin\n         * @param {int} pollmax\n         * @param {int} polltimeout\n         */\n        function Messagearea(selector, pollmin, pollmax, polltimeout) {\n            this.node = $(selector);\n            this.pollmin = pollmin;\n            this.pollmax = pollmax;\n            this.polltimeout = polltimeout;\n            this._init();\n        }\n\n        /** @type {jQuery} The jQuery node for the page region containing the message area. */\n        Messagearea.prototype.node = null;\n\n        /** @type {int} The minimum time to poll for messages. */\n        Messagearea.prototype.pollmin = null;\n\n        /** @type {int} The maximum time to poll for messages. */\n        Messagearea.prototype.pollmax = null;\n\n        /** @type {int} The time used once we have reached the maximum polling time. */\n        Messagearea.prototype.polltimeout = null;\n\n        /**\n         * Initialise the other objects we require.\n         */\n        Messagearea.prototype._init = function() {\n            new Contacts(this);\n            new Messages(this);\n            new Profile(this);\n            new Tabs(this);\n            new Search(this);\n        };\n\n        /**\n         * Handles adding a delegate event to the messaging area node.\n         *\n         * @param {String} action The action we are listening for\n         * @param {String} selector The selector for the page we are assigning the action to\n         * @param {Function} callable The function to call when the event happens\n         */\n        Messagearea.prototype.onDelegateEvent = function(action, selector, callable) {\n            this.node.on(action, selector, callable);\n        };\n\n        /**\n         * Handles adding a custom event to the messaging area node.\n         *\n         * @param {String} action The action we are listening for\n         * @param {Function} callable The function to call when the event happens\n         */\n        Messagearea.prototype.onCustomEvent = function(action, callable) {\n            this.node.on(action, callable);\n        };\n\n        /**\n         * Handles triggering an event on the messaging area node.\n         *\n         * @param {String} event The selector for the page region containing the message area\n         * @param {Object=} data The data to pass when we trigger the event\n         */\n        Messagearea.prototype.trigger = function(event, data) {\n            if (typeof data == 'undefined') {\n                data = '';\n            }\n            this.node.trigger(event, data);\n        };\n\n        /**\n         * Handles finding a node in the messaging area.\n         *\n         * @param {String} selector The selector for the node we are looking for\n         * @return {jQuery} The node\n         */\n        Messagearea.prototype.find = function(selector) {\n            return this.node.find(selector);\n        };\n\n        /**\n         * Returns the ID of the user whose message area we are viewing.\n         *\n         * @return {int} The user id\n         */\n        Messagearea.prototype.getCurrentUserId = function() {\n            return this.node.data('userid');\n        };\n\n        /**\n         * Function to determine if we should be showing contacts initially or messages.\n         *\n         * @return {boolean} True to show contacts first, otherwise show messages.\n         */\n        Messagearea.prototype.showContactsFirst = function() {\n            return !!this.node.data('displaycontacts');\n        };\n\n        return Messagearea;\n    }\n);\n"]}