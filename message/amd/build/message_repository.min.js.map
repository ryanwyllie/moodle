{"version":3,"sources":["../src/message_repository.js"],"names":["define","$","Ajax","Notification","query","args","limit","offset","limitfrom","limitnum","promise","call","methodname","fail","exception","countUnreadConversations","markAllAsRead"],"mappings":"aAwBAA,yCAAO,CAAC,QAAD,CAAW,WAAX,CAAwB,mBAAxB,CAAP,CAAqD,SAASC,CAAT,CAAYC,IAAZ,CAAkBC,YAAlB,CAAgC,CA0EjF,MAAO,CACHC,MApEQ,QAARA,MAAQ,CAASC,IAAT,CAAe,CAEG,WAAtB,QAAOA,MAAKC,KAFO,GAGnBD,KAAKC,KAAL,CAAa,CAHM,EAMI,WAAvB,QAAOD,MAAKE,MANO,GAOnBF,KAAKE,MAAL,CAAc,CAPK,EAUvBF,KAAKG,SAAL,CAAiBH,KAAKE,MAVC,CAWvBF,KAAKI,QAAL,CAAgBJ,KAAKC,KAXE,CAavB,MAAOD,MAAKC,KAbW,CAcvB,MAAOD,MAAKE,MAdW,IAqBnBG,SAAUR,KAAKS,IAAL,CAAU,CALV,CACVC,WAAY,iDADF,CAEVP,KAAMA,IAFI,CAKU,CAAV,EAAqB,CAArB,CArBS,CAyBvB,MAFAK,SAAQG,IAAR,CAAaV,aAAaW,SAA1B,CAEA,CAAOJ,OACV,CAyCM,CAEHK,yBAlC2B,QAA3BA,yBAA2B,CAASV,IAAT,CAAe,IAMtCK,SAAUR,KAAKS,IAAL,CAAU,CALV,CACVC,WAAY,6CADF,CAEVP,KAAMA,IAFI,CAKU,CAAV,EAAqB,CAArB,CAN4B,CAU1C,MAFAK,SAAQG,IAAR,CAAaV,aAAaW,SAA1B,CAEA,CAAOJ,OACV,CAqBM,CAGHM,cAhBgB,QAAhBA,cAAgB,CAASX,IAAT,CAAe,IAM3BK,SAAUR,KAAKS,IAAL,CAAU,CALV,CACVC,WAAY,wCADF,CAEVP,KAAMA,IAFI,CAKU,CAAV,EAAqB,CAArB,CANiB,CAU/B,MAFAK,SAAQG,IAAR,CAAaV,aAAaW,SAA1B,CAEA,CAAOJ,OACV,CAEM,CAKV,CA/ED,C","file":"message_repository.min.js","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Retrieves messages from the server.\n *\n * @module     core_message/message_repository\n * @class      message_repository\n * @package    message\n * @copyright  2016 Ryan Wyllie <ryan@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/ajax', 'core/notification'], function($, Ajax, Notification) {\n    /**\n     * Retrieve a list of messages from the server.\n     *\n     * @param {object} args The request arguments:\n     * @return {object} jQuery promise\n     */\n    var query = function(args) {\n        // Normalise the arguments to use limit/offset rather than limitnum/limitfrom.\n        if (typeof args.limit === 'undefined') {\n            args.limit = 0;\n        }\n\n        if (typeof args.offset === 'undefined') {\n            args.offset = 0;\n        }\n\n        args.limitfrom = args.offset;\n        args.limitnum = args.limit;\n\n        delete args.limit;\n        delete args.offset;\n\n        var request = {\n            methodname: 'core_message_data_for_messagearea_conversations',\n            args: args\n        };\n\n        var promise = Ajax.call([request])[0];\n\n        promise.fail(Notification.exception);\n\n        return promise;\n    };\n\n    /**\n     * Count the number of unread conversations (one or more messages from a user)\n     * for a given user.\n     *\n     * @param {object} args The request arguments:\n     * @return {object} jQuery promise\n     */\n    var countUnreadConversations = function(args) {\n        var request = {\n            methodname: 'core_message_get_unread_conversations_count',\n            args: args\n        };\n\n        var promise = Ajax.call([request])[0];\n\n        promise.fail(Notification.exception);\n\n        return promise;\n    };\n\n    /**\n     * Mark all of unread messages for a user as read.\n     *\n     * @param {object} args The request arguments:\n     * @return {object} jQuery promise\n     */\n    var markAllAsRead = function(args) {\n        var request = {\n            methodname: 'core_message_mark_all_messages_as_read',\n            args: args\n        };\n\n        var promise = Ajax.call([request])[0];\n\n        promise.fail(Notification.exception);\n\n        return promise;\n    };\n\n    return {\n        query: query,\n        countUnreadConversations: countUnreadConversations,\n        markAllAsRead: markAllAsRead,\n    };\n});\n"]}