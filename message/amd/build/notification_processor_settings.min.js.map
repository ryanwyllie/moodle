{"version":3,"sources":["../src/notification_processor_settings.js"],"names":["define","$","Ajax","Notification","Fragment","Templates","Str","Dialogue","SELECTORS","PROCESSOR","PREFERENCE_ROW","NotificationProcessorSettings","element","root","name","attr","userId","contextId","prototype","show","loadFragment","userid","type","done","html","js","get_string","string","dialogue","runTemplateJS","close","document","on","updateConfiguredStatus","bind","processorHeader","closest","hasClass","processorName","request","methodname","args","call","fail","exception","result","userconfigured","notifications","removeClass"],"mappings":"aAwBAA,sDAAO,CAAC,QAAD,CAAW,WAAX,CAAwB,mBAAxB,CAA6C,eAA7C,CAA8D,gBAA9D,CAAgF,UAAhF,CAA4F,kBAA5F,CAAP,CACQ,SAASC,CAAT,CAAYC,IAAZ,CAAkBC,YAAlB,CAAgCC,QAAhC,CAA0CC,SAA1C,CAAqDC,GAArD,CAA0DC,QAA1D,CAAoE,IAEpEC,WAAY,CACZC,UAAW,uBADC,CAEZC,eAAgB,gCAFJ,CAFwD,CAYpEC,8BAAgC,SAASC,OAAT,CAAkB,CAClD,KAAKC,IAAL,CAAYZ,EAAEW,OAAF,CADsC,CAElD,KAAKE,IAAL,CAAY,KAAKD,IAAL,CAAUE,IAAV,CAAe,WAAf,CAFsC,CAGlD,KAAKC,MAAL,CAAc,KAAKH,IAAL,CAAUE,IAAV,CAAe,cAAf,CAHoC,CAIlD,KAAKE,SAAL,CAAiB,KAAKJ,IAAL,CAAUE,IAAV,CAAe,iBAAf,CACpB,CAjBuE,CA2FxE,MAnEAJ,+BAA8BO,SAA9B,CAAwCC,IAAxC,CAA+C,UAAW,CACtDf,SAASgB,YAAT,CAAsB,SAAtB,CAAiC,oBAAjC,CAAuD,KAAKH,SAA5D,CAAuE,CACnEI,OAAQ,KAAKL,MADsD,CAEnEM,KAAM,KAAKR,IAFwD,CAAvE,EAICS,IAJD,CAIM,SAASC,IAAT,CAAeC,EAAf,CAAmB,CACrBnB,IAAIoB,UAAJ,CAAe,mBAAf,CAAoC,SAApC,EAA+CH,IAA/C,CAAoD,SAASI,MAAT,CAAiB,CACjE,GAAIC,UAAW,GAAIrB,SAAJ,CACXoB,MADW,CAEXH,IAFW,CAGX,UAAW,CACPnB,UAAUwB,aAAV,CAAwBJ,EAAxB,CACH,CALU,CAMX,UAAW,CAEPG,SAASE,KAAT,EACH,CATU,CAAf,CAYA7B,EAAE8B,QAAF,EAAYC,EAAZ,CAAe,mBAAf,CAAoC,UAAW,CAC3CJ,SAASE,KAAT,EAD2C,CAE3C,KAAKG,sBAAL,EACH,CAHmC,CAGlCC,IAHkC,CAG7B,IAH6B,CAApC,CAbiE,CAkBjEjC,EAAE8B,QAAF,EAAYC,EAAZ,CAAe,mBAAf,CAAoC,UAAW,CAC3CJ,SAASE,KAAT,EACH,CAFD,CAGH,CArBmD,CAqBlDI,IArBkD,CAqB7C,IArB6C,CAApD,CAsBH,CAvBK,CAuBJA,IAvBI,CAuBC,IAvBD,CAJN,CA4BH,CAsCD,CA7BAvB,8BAA8BO,SAA9B,CAAwCe,sBAAxC,CAAiE,UAAW,CACxE,GAAIE,iBAAkB,KAAKtB,IAAL,CAAUuB,OAAV,CAAkB5B,UAAUC,SAA5B,CAAtB,CAEA,GAAI,CAAC0B,gBAAgBE,QAAhB,CAAyB,cAAzB,CAAL,CACI,SAJoE,GAOpEC,eAAgBH,gBAAgBpB,IAAhB,CAAqB,qBAArB,CAPoD,CAQpEwB,QAAU,CACVC,WAAY,oCADF,CAEVC,KAAM,CACF3B,KAAMwB,aADJ,CAEFjB,OAAQ,KAAKL,MAFX,CAFI,CAR0D,CAgBxE,MAAOd,MAAKwC,IAAL,CAAU,CAACH,OAAD,CAAV,EAAqB,CAArB,EACFI,IADE,CACGxC,aAAayC,SADhB,EAEFrB,IAFE,CAEG,SAASsB,MAAT,CAAiB,CAEnB,GAAIA,OAAOC,cAAX,CAA2B,CAEvB,GAAIC,eAAgB9C,EAAEO,UAAUE,cAAV,CAA2B,yBAA3B,CAAuD4B,aAAvD,CAAuE,IAAzE,CAApB,CACAH,gBAAgBa,WAAhB,CAA4B,cAA5B,CAHuB,CAIvBD,cAAcC,WAAd,CAA0B,UAA1B,CACH,CACJ,CAVE,CAWV,CAED,CAAOrC,6BACV,CA7FD,C","file":"notification_processor_settings.min.js","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Load the settings for a message processor.\n *\n * @module     core_message/notification_processor_settings\n * @class      notification_processor_settings\n * @package    message\n * @copyright  2016 Ryan Wyllie <ryan@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/ajax', 'core/notification', 'core/fragment', 'core/templates', 'core/str', 'tool_lp/dialogue'],\n        function($, Ajax, Notification, Fragment, Templates, Str, Dialogue) {\n\n    var SELECTORS = {\n        PROCESSOR: '[data-processor-name]',\n        PREFERENCE_ROW: '[data-region=\"preference-row\"]',\n    };\n\n    /**\n     * Constructor for the notification processor settings.\n     *\n     * @param {object} element jQuery object root element of the processor\n     */\n    var NotificationProcessorSettings = function(element) {\n        this.root = $(element);\n        this.name = this.root.attr('data-name');\n        this.userId = this.root.attr('data-user-id');\n        this.contextId = this.root.attr('data-context-id');\n    };\n\n    /**\n     * Show the notification processor settings dialogue.\n     *\n     * @method show\n     */\n    NotificationProcessorSettings.prototype.show = function() {\n        Fragment.loadFragment('message', 'processor_settings', this.contextId, {\n            userid: this.userId,\n            type: this.name,\n        })\n        .done(function(html, js) {\n            Str.get_string('processorsettings', 'message').done(function(string) {\n                var dialogue = new Dialogue(\n                    string,\n                    html,\n                    function() {\n                        Templates.runTemplateJS(js);\n                    },\n                    function() {\n                        // Removed dialogue from the DOM after close.\n                        dialogue.close();\n                    }\n                );\n\n                $(document).on('mpp:formsubmitted', function() {\n                    dialogue.close();\n                    this.updateConfiguredStatus();\n                }.bind(this));\n\n                $(document).on('mpp:formcancelled', function() {\n                    dialogue.close();\n                });\n            }.bind(this));\n        }.bind(this));\n    };\n\n    /**\n     * Checks if the processor has been configured. If so then remove the unconfigured\n     * status from the interface.\n     *\n     * @method updateConfiguredStatus\n     * @return {Promise|boolean}\n     */\n    NotificationProcessorSettings.prototype.updateConfiguredStatus = function() {\n        var processorHeader = this.root.closest(SELECTORS.PROCESSOR);\n\n        if (!processorHeader.hasClass('unconfigured')) {\n            return false;\n        }\n\n        var processorName = processorHeader.attr('data-processor-name');\n        var request = {\n            methodname: 'core_message_get_message_processor',\n            args: {\n                name: processorName,\n                userid: this.userId,\n            },\n        };\n\n        return Ajax.call([request])[0]\n            .fail(Notification.exception)\n            .done(function(result) {\n                // Check if the user has figured configuring the processor.\n                if (result.userconfigured) {\n                    // If they have then we can enable the settings.\n                    var notifications = $(SELECTORS.PREFERENCE_ROW + ' [data-processor-name=\"' + processorName + '\"]');\n                    processorHeader.removeClass('unconfigured');\n                    notifications.removeClass('disabled');\n                }\n            });\n    };\n\n    return NotificationProcessorSettings;\n});\n"]}